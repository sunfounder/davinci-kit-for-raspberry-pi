# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, sunfounder
# This file is distributed under the same license as the SunFounder Da Vinci
# Kit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Da Vinci Kit\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-07-29 17:00+0800\n"
"PO-Revision-Date: 2021-07-30 18:20+0800\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Last-Translator: \n"
"Language-Team: \n"
"X-Generator: Poedit 2.4.3\n"
"Language: ja\n"

#: ../processing/blinking_dot.rst:2
msgid "Blinking Dot"
msgstr "Blinking Dot（ドットの点滅）"

#: ../processing/blinking_dot.rst:4
msgid ""
"In this project, we will draw a dot on Processing, which blinks "
"synchronously with the LED. Please build the circuit as shown in the "
"diagram and run the sketch."
msgstr ""
"このプロジェクトでは、LEDと同期して点滅するProcessingにドットを描画しま"
"す。図に示すように回路を構築し、スケッチを実行してください。"

#: ../processing/blinking_dot.rst:10
msgid "**Wiring**"
msgstr "**回路**"

#: ../processing/blinking_dot.rst:14
msgid "**Sketch**"
msgstr "**スケッチ**"

#: ../processing/blinking_dot.rst:40
msgid "**How it works?**"
msgstr "**原理**"

#: ../processing/blinking_dot.rst:42
msgid ""
"At the beginning of the sketch, you need to embed Processing's GPIO "
"function library by ``import processing.io.*;``, which is indispensable "
"for circuit experiments."
msgstr ""
"スケッチの最初に、回路実験に不可欠な ``importprocessing.io.*;`` を使用して"
"ProcessingのGPIO関数ライブラリを埋め込む必要があります。"

#: ../processing/blinking_dot.rst:44
msgid ""
"**Frame rate** is the frequency of bitmaps appearing on the board, "
"expressed in hertz (Hz). In other words, it is also the frequency at "
"which the ``draw()`` function is called. In ``setup()``, setting the "
"**frame rate** to 2 will call ``draw()`` every 0.5s."
msgstr ""
"**フレームレート** は、ボードに表示されるビットマップの周波数であり、ヘル"
"ツ（Hz）で表されます。つまり、``draw（）`` 関数が呼び出される頻度でもあり"
"ます。 ``setup（）`` で、**フレームレート** を2に設定すると、0.5秒ごとに"
" ``draw（）`` が呼び出されます。"

#: ../processing/blinking_dot.rst:46
msgid ""
"Each call of the ``draw()`` function takes the inverse of ``state`` and "
"subsequently determines it. If the value is ``true``, the LED is lit and "
"the brush is filled with red; if not, the LED is turned off and the "
"brush is filled with gray."
msgstr ""
"``draw（）`` 関数の各呼び出しは、``state`` の逆を取り、その後それを決定しま"
"す。値が ``true`` の場合、LEDが点灯し、ブラシが赤で塗りつぶされます。そうで"
"ない場合は、LEDがオフになり、ブラシが灰色で塗りつぶされます。"

#: ../processing/blinking_dot.rst:48
msgid ""
"After completing the judgment, use the ``ellipse()`` function to draw a "
"circle. It should be noted that ``width`` and ``height`` are system "
"variables used to store the width and height of the display window."
msgstr ""
"判定が終わったら、``ellipse()`` 関数を使って円を描きます。``width`` と"
" ``height`` は、表示ウィンドウの幅と高さを格納するために使用されるシステム"
"変数であることに注意してください。"

#: ../processing/blinking_dot.rst:50
msgid ""
"There are two other points to note. When using GPIOs, you need to use "
"the ``GPIO.pinMode()`` function to set the INPUT/OUTPUT state of the "
"pin, and then use the ``GPIO.digitalWrite()`` function to assign a value "
"(HIGH/LOW) to the pin ."
msgstr ""
"注意すべき他の2つのポイントがあります。 GPIOを使用する場合は、``GPIO."
"pinMode()`` 関数を使用してピンのINPUT / OUTPUT状態を設定してから、``GPIO."
"digitalWrite()`` 関数を使用して値(HIGH/LOW)をピンに割り当てる必要がありま"
"す。"

#: ../processing/blinking_dot.rst:55
msgid ""
"Please try to avoid using ``delay()`` in ``draw()`` because it will "
"affect the display window refresh."
msgstr ""
"``draw()`` で ``delay()`` を使用しないようにしてください。これは、表示ウィン"
"ドウの更新に影響します。"

#: ../processing/blinking_dot.rst:57
msgid ""
"For more please refer to `Processing Reference <https://processing.org/"
"reference/>`_."
msgstr ""
"詳細については、`Processing Reference <https://processing.org/reference/"
">`_ を参照してください。"
