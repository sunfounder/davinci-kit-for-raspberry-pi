.. note::

    Bonjour et bienvenue dans la communautÃ© des passionnÃ©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez dans l'univers de Raspberry Pi, Arduino et ESP32 avec d'autres passionnÃ©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : RÃ©solvez les problÃ¨mes aprÃ¨s-vente et relevez vos dÃ©fis techniques grÃ¢ce Ã  l'aide de notre communautÃ© et de notre Ã©quipe.
    - **Apprenez et Partagez** : Ã‰changez des astuces et des tutoriels pour perfectionner vos compÃ©tences.
    - **AperÃ§us exclusifs** : BÃ©nÃ©ficiez d'un accÃ¨s anticipÃ© aux nouvelles annonces de produits et aux avant-premiÃ¨res.
    - **RÃ©ductions spÃ©ciales** : Profitez de rÃ©ductions exclusives sur nos nouveaux produits.
    - **Promotions festives et concours** : Participez Ã  des concours et Ã  des promotions lors des fÃªtes.

    ðŸ‘‰ PrÃªt Ã  explorer et Ã  crÃ©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous dÃ¨s aujourd'hui !

3.1.4 Ventilateur Intelligent
===============================

Introduction
--------------

Dans ce cours, nous allons utiliser des moteurs, des boutons et des thermistances pour crÃ©er un ventilateur intelligent, manuel et automatique, dont la vitesse du vent est rÃ©glable.

Composants
------------

.. image:: img/list_Smart_Fan.png
    :align: center


SchÃ©ma de cÃ¢blage
--------------------

============ ======== ======== ===
T-Board Name physical wiringPi BCM
GPIO17       Pin 11   0        17
GPIO18       Pin 12   1        18
GPIO27       Pin 13   2        27
GPIO22       Pin 15   3        22
GPIO5        Pin 29   21       5
GPIO6        Pin 31   22       6
GPIO13       Pin 33   23       13
============ ======== ======== ===

.. image:: img/Schematic_three_one4.png
    :width: 500
    :align: center


ProcÃ©dures expÃ©rimentales
-----------------------------

**Ã‰tape 1 :** Construisez le circuit.

.. image:: img/image245.png
   :alt: Smart Fan_bb
   :width: 800
   :align: center

.. note::
    Le module d'alimentation peut utiliser une pile de 9V avec le connecteur de pile 
    9V fourni dans le kit. InsÃ©rez le capuchon du cavalier du module d'alimentation 
    dans les bandes de bus 5V de la breadboard.

.. image:: img/image118.jpeg
   :alt: \_MG_2084
   :width: 2.80694in
   :height: 0.94375in
   :align: center


**Pour les utilisateurs du langage C**
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

**Ã‰tape 2 :** AccÃ©dez au dossier du code.

.. raw:: html

   <run></run>

.. code-block:: 

    cd ~/davinci-kit-for-raspberry-pi/c/3.1.4/

**Ã‰tape 3 :** Compilez.

.. raw:: html

   <run></run>

.. code-block:: 

    gcc 3.1.4_SmartFan.c -lwiringPi -lm

**Ã‰tape 4 :** ExÃ©cutez le fichier exÃ©cutable ci-dessus.

.. raw:: html

   <run></run>

.. code-block:: 

    sudo ./a.out

Lorsque le code s'exÃ©cute, dÃ©marrez le ventilateur en appuyant sur le bouton. 
Ã€ chaque pression, le niveau de vitesse augmente ou diminue de 1. Il y a **5** 
niveaux de vitesse : **0~4**. Lorsqu'il est rÃ©glÃ© sur le 4\ :sup:`Ã¨me` niveau de 
vitesse et que vous appuyez sur le bouton, le ventilateur s'arrÃªte avec une vitesse 
de vent Ã  **0**.

.. note::

    Si cela ne fonctionne pas aprÃ¨s l'exÃ©cution, ou s'il y a un message d'erreur indiquant : Â« wiringPi.h : Aucun fichier ou rÃ©pertoire de ce type Â», veuillez consulter :ref:`C code is not working?`.

DÃ¨s que la tempÃ©rature augmente ou diminue de plus de 2â„ƒ, la vitesse se rÃ¨gle 
automatiquement d'un niveau plus rapide ou plus lent.


**Explication du Code**

.. code-block:: c

    intÂ temperture(){
    Â Â Â Â unsignedÂ charÂ analogVal;
    Â Â Â Â doubleÂ Vr,Â Rt,Â temp,Â cel,Â Fah;
    Â Â Â Â analogValÂ =Â get_ADC_Result(0);
    Â Â Â Â VrÂ =Â 5Â *Â (double)(analogVal)Â /Â 255;
    Â Â Â Â RtÂ =Â 10000Â *Â (double)(Vr)Â /Â (5Â -Â (double)(Vr));
    Â Â Â Â tempÂ =Â 1Â /Â (((log(Rt/10000))Â /Â 3950)+(1Â /Â (273.15Â +Â 25)));
    Â Â Â Â celÂ =Â tempÂ -Â 273.15;
    Â Â Â Â FahÂ =Â celÂ *Â 1.8Â +32;
    Â Â Â Â intÂ t=cel;
    Â Â Â Â returnÂ t;
    }

La fonction `temperature()` convertit les valeurs de la thermistance lues par l'ADC0834 en valeurs de tempÃ©rature. Pour plus de dÃ©tails, consultez :ref:`2.2.2 Thermistor`.

.. code-block:: c

    intÂ motor(intÂ level){
    Â Â Â Â if(level==0){
    Â Â Â Â Â Â Â Â digitalWrite(MotorEnable,LOW);
    Â Â Â Â Â Â Â Â returnÂ 0;
        }
    Â Â Â Â ifÂ (level>=4){
    Â Â Â Â Â Â Â Â levelÂ =4;
        }
    Â Â Â Â digitalWrite(MotorEnable,HIGH);
    Â Â Â Â softPwmWrite(MotorPin1,Â level*25);
    Â Â Â Â returnÂ level;Â Â Â Â 
    }

Cette fonction contrÃ´le la vitesse de rotation du moteur. La plage de niveaux 
**Level** est de **0 Ã  4** (le niveau **0** arrÃªte le moteur). Chaque niveau 
correspond Ã  un changement de **25%** de la vitesse du ventilateur.

.. code-block:: c

    intÂ main(void)
    {
        setup();
    Â Â Â Â intÂ currentState,lastState=0;
    Â Â Â Â intÂ levelÂ =Â 0;
    Â Â Â Â intÂ currentTemp,markTemp=0;
        while(1){
    Â Â Â Â Â Â Â Â currentState=digitalRead(BtnPin);
    Â Â Â Â Â Â Â Â currentTemp=temperture();
    Â Â Â Â Â Â Â Â ifÂ (currentTemp<=0){continue;}
    Â Â Â Â Â Â Â Â ifÂ (currentState==1&&lastState==0){
    Â Â Â Â Â Â Â Â Â Â Â Â level=(level+1)%5;
    Â Â Â Â Â Â Â Â Â Â Â Â markTemp=currentTemp;
                delay(500);
            }
    Â Â Â Â Â Â Â Â lastState=currentState;
    Â Â Â Â Â Â Â Â ifÂ (level!=0){
    Â Â Â Â Â Â Â Â Â Â Â Â ifÂ (currentTemp-markTemp<=-2){
    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â level=level-1;
    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â markTemp=currentTemp;
                }
    Â Â Â Â Â Â Â Â Â Â Â Â ifÂ (currentTemp-markTemp>=2){
    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â level=level+1;
    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â markTemp=currentTemp;
                }
            }
    Â Â Â Â Â Â Â Â level=motor(level);
        }
    Â Â Â Â returnÂ 0;
    }

La fonction **main()** contient l'ensemble du processus du programme comme suit :

1) Lire en continu l'Ã©tat du bouton et la tempÃ©rature actuelle.

2) Ã€ chaque pression, le niveau de vitesse (**level**) augmente de **+1** et la tempÃ©rature est mise Ã  jour. Le **Level** varie de **1 Ã  4**.

3) Lorsque le ventilateur fonctionne (niveau **diffÃ©rent de 0**), la tempÃ©rature est surveillÃ©e. Une variation de **+2â„ƒ** ou plus entraÃ®ne une modification du niveau.

4) Le moteur ajuste la vitesse de rotation en fonction du **Level**.
