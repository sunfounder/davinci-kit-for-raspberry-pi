.. note::

    Bonjour et bienvenue dans la communaut√© SunFounder d√©di√©e aux passionn√©s de Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez plus profond√©ment dans l'univers de Raspberry Pi, Arduino et ESP32 avec d'autres amateurs.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des conseils et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos nouveaux produits.
    - **Promotions festives et cadeaux** : Participez √† des tirages au sort et √† des promotions sp√©ciales pour les f√™tes.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

1.1.3 Barre de LED
======================

Introduction
-----------------

Dans ce projet, nous allons allumer s√©quentiellement les LED de la barre de LED.

Composants
------------

.. image:: img/list_led_bar.png

Principe
--------

**Barre de LED**

La barre de LED est un tableau de LED utilis√© pour se connecter √† un circuit 
√©lectronique ou √† un microcontr√¥leur. Elle permet une connexion facile, 
similaire √† celle de 10 LED individuelles connect√©es √† 10 broches de sortie. 
G√©n√©ralement, la barre de LED est utilis√©e comme indicateur de niveau de batterie, 
dans les √©quipements audio ou sur les panneaux de contr√¥le industriels. Il existe 
de nombreuses autres applications pour les barres de LED.

.. image:: img/led_bar_sche.png

Sch√©ma de c√¢blage
---------------------

============ ======== ======== ===
T-Board Name physical wiringPi BCM
GPIO17       Pin 11   0        17
GPIO18       Pin 12   1        18
GPIO27       Pin 13   2        27
GPIO22       Pin 15   3        22
GPIO23       Pin 16   4        23
GPIO24       Pin 18   5        24
GPIO25       Pin 22   6        25
SDA1         Pin 3    8        2
SCL1         Pin 5    9        3
SPICE0       Pin 24   10       8
============ ======== ======== ===

.. image:: img/schematic_led_bar.png


Proc√©dures exp√©rimentales
-----------------------------

**√âtape 1** : Construisez le circuit.

.. image:: img/image66.png
    :width: 800

**√âtape 2** : Acc√©dez au dossier du code.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/davinci-kit-for-raspberry-pi/c/1.1.3/

**√âtape 3** : Compilez le code.

.. raw:: html

   <run></run>

.. code-block::

    gcc 1.1.3_LedBarGraph.c -lwiringPi

**√âtape 4** : Ex√©cutez le fichier ex√©cutable.

.. raw:: html

   <run></run>

.. code-block::

    sudo ./a.out

Apr√®s l'ex√©cution du code, vous verrez les LED de la barre s'allumer et 
s'√©teindre r√©guli√®rement.

.. note::

    Si le programme ne fonctionne pas apr√®s l'ex√©cution, ou si un message d'erreur appara√Æt : ¬´ wiringPi.h: Aucun fichier ou r√©pertoire de ce type ¬ª, veuillez consulter : :ref:`C code is not working?`.

**Code**

.. code-block:: c

    #include <wiringPi.h>
    #include <stdio.h>

    int pins[10] = {0,1,2,3,4,5,6,8,9,10};
    void oddLedBarGraph(void){
        for(int i=0;i<5;i++){
            int j=i*2;
            digitalWrite(pins[j],HIGH);
            delay(300);
            digitalWrite(pins[j],LOW);
        }
    }
    void evenLedBarGraph(void){
        for(int i=0;i<5;i++){
            int j=i*2+1;
            digitalWrite(pins[j],HIGH);
            delay(300);
            digitalWrite(pins[j],LOW);
        }
    }
    void allLedBarGraph(void){
        for(int i=0;i<10;i++){
            digitalWrite(pins[i],HIGH);
            delay(300);
            digitalWrite(pins[i],LOW);
        }
    }
    int main(void)
    {
        if(wiringPiSetup() == -1){ // lorsque l'initialisation de wiring √©choue, affiche un message √† l'√©cran
            printf("setup wiringPi failed !");
            return 1;
        }
        for(int i=0;i<10;i++){       // configure les broches des LED en mode sortie
            pinMode(pins[i], OUTPUT);
            digitalWrite(pins[i],LOW);
        }
        while(1){
            oddLedBarGraph();
            delay(300);
            evenLedBarGraph();
            delay(300);
            allLedBarGraph();
            delay(300);
        }
        return 0;
    }

**Explication du code**

.. code-block:: c

    int pins[10] = {0,1,2,3,4,5,6,8,9,10};

Cr√©e un tableau et l'associe aux num√©ros de broche correspondant √† la barre 
de LED (0,1,2,3,4,5,6,8,9,10). Ce tableau sera utilis√© pour contr√¥ler les LED.

.. code-block:: c

    void oddLedBarGraph(void){
        for(int i=0;i<5;i++){
            int j=i*2;
            digitalWrite(pins[j],HIGH);
            delay(300);
            digitalWrite(pins[j],LOW);
        }
    }

Allume successivement les LED situ√©es sur les positions impaires de la barre de LED.

.. code-block:: c

    void evenLedBarGraph(void){
        for(int i=0;i<5;i++){
            int j=i*2+1;
            digitalWrite(pins[j],HIGH);
            delay(300);
            digitalWrite(pins[j],LOW);
        }
    }

Allume successivement les LED situ√©es sur les positions paires de la barre de LED.

.. code-block:: c

    void allLedBarGraph(void){
        for(int i=0;i<10;i++){
            digitalWrite(pins[i],HIGH);
            delay(300);
            digitalWrite(pins[i],LOW);
        }
    }

Allume les LED de la barre une par une.

