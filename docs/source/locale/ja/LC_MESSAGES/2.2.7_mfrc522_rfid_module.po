# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, SunFounder
# This file is distributed under the same license as the SunFounder Davinci
# Kit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Davinci Kit\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-08-19 18:22+0800\n"
"PO-Revision-Date: 2021-05-28 08:44+0800\n"
"Last-Translator: \n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../2.2.7_mfrc522_rfid_module.rst:2
msgid "2.2.7 MFRC522 RFID Module"
msgstr "2.2.7 MFRC522 RFIDモジュール"

#: ../2.2.7_mfrc522_rfid_module.rst:5
msgid "Introduction"
msgstr "前書き"

#: ../2.2.7_mfrc522_rfid_module.rst:7
msgid ""
"Radio Frequency Identification (RFID) refers to technologies that use "
"wireless communication between an object (or tag) and interrogating "
"device (or reader) to automatically track and identify such objects."
msgstr "無線周波数識別（RFID）は、オブジェクト（またはタグ）と質問デバイス（またはリーダー）の間の無線通信を使用して、そのようなオブジェクトを自動的に追跡したり識別したりする技術を指す。"

#: ../2.2.7_mfrc522_rfid_module.rst:11
msgid ""
"Some of the most common applications for this technology include retail "
"supply chains, military supply chains, automated payment methods, baggage"
" tracking and management, document tracking and pharmaceutical "
"management, to name a few."
msgstr "この技術の最も一般的なアプリケーションには、小売サプライチェーン、軍事サプライチェーン、自動決済方法、荷物の追跡と管理、ドキュメントの追跡と医薬品管理などが含まれておる。"

#: ../2.2.7_mfrc522_rfid_module.rst:16
msgid "In this project, we will use RFID for reading and writing."
msgstr "このプロジェクトでは、読み取りと書き込みにRFIDを使用する。"

#: ../2.2.7_mfrc522_rfid_module.rst:19
msgid "Components"
msgstr "部品"

#: ../2.2.7_mfrc522_rfid_module.rst:25
msgid "Principle"
msgstr "原理"

#: ../2.2.7_mfrc522_rfid_module.rst:27
msgid "**RFID**"
msgstr "**RFID**"

#: ../2.2.7_mfrc522_rfid_module.rst:29
msgid ""
"Radio Frequency Identification (RFID) refers to technologies that involve"
" using wireless communication between an object (or tag) and an "
"interrogating device (or reader) to automatically track and identify such"
" objects. The tag transmission range is limited to several meters from "
"the reader. A clear line of sight between the reader and tag is not "
"necessarily required."
msgstr "無線周波数識別（RFID）は、オブジェクト（またはタグ）と質問デバイス（またはリーダー）の間の無線通信を使用して、そのようなオブジェクトを自動的に追跡したり識別したりする技術を指す。タグの送信範囲はリーダーから数メートルに制限されている。リーダーとタグの間の明確な見通し線は必ずしも必要ではない。"

#: ../2.2.7_mfrc522_rfid_module.rst:36
msgid ""
"Most tags contain at least one integrated circuit (IC) and an antenna. "
"The microchip stores information and is responsible for managing the "
"radio frequency (RF) communication with the reader. Passive tags do not "
"have an independent energy source and depend on an external "
"electromagnetic signal, provided by the reader, to power their "
"operations. Active tags contain an independent energy source, such as a "
"battery. Thus, they may have increased processing, transmission "
"capabilities and range."
msgstr "ほとんどのタグには、少なくとも1つの集積回路（IC）とアンテナが含まれている。マイクロチップは情報を保存し、リーダーとの無線周波数（RF）通信を管理する。パッシブタグは独立したエネルギー源を持たず、リーダーによって提供される外部電磁信号に依存して動作する。しかしアクティブタグバッテリーなどの独立したエネルギー源が含まれている。したがって、処理、送信機能と範囲が拡大している可能性がある。"

#: ../2.2.7_mfrc522_rfid_module.rst:48
msgid "**MFRC522**"
msgstr "**MFRC522**"

#: ../2.2.7_mfrc522_rfid_module.rst:50
msgid ""
"MFRC522 is a kind of integrated read and write card chip. It is commonly "
"used in the radio at 13.56MHz. Launched by the NXP Company, it is a low-"
"voltage, low-cost, and small-sized non-contact card chip, a best choice "
"of intelligent instrument and portable handheld device."
msgstr ""
"MFRC522は、読み取りと書き込みカードチップの一種である。通常、13.56MHzの無線で使用される。NXP "
"Companyによって発売された低電圧、低コスト、小型の非接触カードチップであり、インテリジェント機器と持ち転びやすい手持ちデバイスの最良の選択である。"

#: ../2.2.7_mfrc522_rfid_module.rst:55
msgid ""
"The MF RC522 uses advanced modulation and demodulation concept which "
"fully presented in all types of 13.56MHz passive contactless "
"communication methods and protocols. In addition, it supports rapid "
"CRYPTO1 encryption algorithm to verify MIFARE products. MFRC522 also "
"supports MIFARE series of high-speed non-contact communication, with a "
"two-way data transmission rate up to 424kbit/s. As a new member of the "
"13.56MHz highly integrated reader card series, MF RC522 is much similar "
"to the existing MF RC500 and MF RC530 but there also exists great "
"differences. It communicates with the host machine via the serial manner "
"which needs less wiring. You can choose between SPI, I2C and serial UART "
"mode (similar to RS232), which helps reduce the connection, save PCB "
"board space (smaller size), and reduce cost."
msgstr ""
"MF "
"RC522はすべてのタイプの13.56MHzパッシブ非接触通信方法とプロトコルで完全に開示された高度な変調と復調の概念を使用している。さらに、MIFARE製品を検証するための高速CRYPTO1暗号化アルゴリズムをサポートしている。MFRC522は最大424kbit/sの双方向データ伝送速度で、MIFAREシリーズの高速非接触通信もサポートしている。13.56MHz高集積リーダーカードシリーズの新しいメンバーとして、MF"
" RC522は既存のMF RC500とMF "
"RC530と非常に似ているが、多くの違いがある。配線が少ないシリアル方式でホストマシンと通信する。SPI、I2C、とシリアルUARTモード（RS232に類似）から選択できる。これにより、接続の削減、PCBボードスペースの節約（サイズの縮小）、およびコストの削減に役立つ。"

#: ../2.2.7_mfrc522_rfid_module.rst:69
msgid "Schematic Diagram"
msgstr "回路図"

#: ../2.2.7_mfrc522_rfid_module.rst:75
msgid "Experimental Procedures"
msgstr "実験手順"

#: ../2.2.7_mfrc522_rfid_module.rst:77
msgid "**Step 1:** Build the circuit."
msgstr "**ステップ1：** 回路を作る。"

#: ../2.2.7_mfrc522_rfid_module.rst:84
msgid ""
"**Step 2:** Set up SPI (refer to :ref:`Appendix` for more details. If you"
" have set SPI, skip this step.)"
msgstr ""
"**ステップ2：** SPIを設定します（詳細については、:ref:`Appendix` "
"を参照してください。SPIを設定している場合は、このステップをスキップしてください。）"

#: ../2.2.7_mfrc522_rfid_module.rst:88
msgid "For C Language Users"
msgstr "C言語ユーザー向け"

#: ../2.2.7_mfrc522_rfid_module.rst:90 ../2.2.7_mfrc522_rfid_module.rst:195
msgid "**Step 3:** Go to the folder of the code."
msgstr "**ステップ3：** コードのフォルダーに入る。"

#: ../2.2.7_mfrc522_rfid_module.rst:100
msgid "**Step 4:** Compile the code."
msgstr "**ステップ4：** コードをコンパイルする。"

#: ../2.2.7_mfrc522_rfid_module.rst:112
msgid ""
"There are two examples for you to read or write the card ID, and you can "
"choose one of them according to your need."
msgstr "カードIDの読み取りまたは書き込みには二つの例があり、必要に応じていずれかを選択できる。"

#: ../2.2.7_mfrc522_rfid_module.rst:115
msgid "**Step 5:** Run the executable file."
msgstr "**ステップ5：** EXEファイルを実行する。"

#: ../2.2.7_mfrc522_rfid_module.rst:135
msgid ""
"If it does not work after running, please refer to :ref:`C code is not "
"working?`"
msgstr "実行後に機能しない場合は、:ref:`C code is not working?` を参照してください。"

#: ../2.2.7_mfrc522_rfid_module.rst:137 ../2.2.7_mfrc522_rfid_module.rst:295
msgid "**Code Explanation**"
msgstr "**コードの説明**"

#: ../2.2.7_mfrc522_rfid_module.rst:143
msgid "This function is used to initialize the RFID RC522 module."
msgstr "この関数はRFID RC522モジュールを初期化するために使用される。"

#: ../2.2.7_mfrc522_rfid_module.rst:149
msgid ""
"This function is used to read the data of the card, and if the read is "
"successful, it will return \"1\"."
msgstr "この関数はカードのデータを読み取るために使用され、読み取りが成功すると「1」が返されます。"

#: ../2.2.7_mfrc522_rfid_module.rst:156
msgid ""
"This function is used to write the data of card and returns \"1\" if the "
"write is successful. \\*data is the information that will be written to "
"the card."
msgstr "この関数はカードのデータを書き込むために使用され、書き込みが成功すると「1」を返します。 \\ * dataは、カードに書き込まれる情報です。"

#: ../2.2.7_mfrc522_rfid_module.rst:163
msgid "For Python Language Users"
msgstr "Python言語ユーザー向け"

#: ../2.2.7_mfrc522_rfid_module.rst:164
msgid "**Step 2:** Install the libraries."
msgstr " **ステップ2：** ライブラリをインストールします。"

#: ../2.2.7_mfrc522_rfid_module.rst:166
msgid ""
"The ``spidev`` library helps handle interactions with the SPI and is a "
"key component to this tutorial as we need it for the Raspberry Pi to "
"interact with the RFID RC522."
msgstr ""

#: ../2.2.7_mfrc522_rfid_module.rst:168
msgid ""
"Run the following command to install ``spidev`` to your Raspberry Pi via "
"``pip``."
msgstr ""

#: ../2.2.7_mfrc522_rfid_module.rst:179
msgid ""
"Continue to install the MFRC522 library. The MFRC522 library contains two"
" files: ``MFRC522.py`` and ``SimpleMFRC522.py``."
msgstr ""

#: ../2.2.7_mfrc522_rfid_module.rst:181
msgid ""
"Among them ``MFRC522.py`` is the realization of RFID RC522 interface, "
"this library handles all the heavy work of communicating with RFID "
"through Pi's SPI interface."
msgstr ""

#: ../2.2.7_mfrc522_rfid_module.rst:183
msgid ""
"``SimpleMFRC522.py`` takes the ``MFRC522.py`` file and greatly simplifies"
" it by allowing you to deal with only a few functions instead of a few "
"functions."
msgstr ""

#: ../2.2.7_mfrc522_rfid_module.rst:205
msgid "**Step 4:** Run the executable file."
msgstr "**ステップ4：** EXEファイルを実行する。"

#: ../2.2.7_mfrc522_rfid_module.rst:225
msgid ""
"After running ``2.2.7_read.py``, it will print the ``id`` and ``text`` of"
" your card in the shell."
msgstr ""

#: ../2.2.7_mfrc522_rfid_module.rst:226
msgid ""
"After running ``2.2.7_write.py``, you need to write a message first, "
"press ``Enter`` to confirm, and finally put your card on the MFRC522 RFID"
" module to finish writing."
msgstr ""

#: ../2.2.7_mfrc522_rfid_module.rst:229
msgid "**code**"
msgstr "**コード**"

#: ../2.2.7_mfrc522_rfid_module.rst:233
 
msgid ""
"You can **Modify/Reset/Copy/Run/Stop** the code below. But before that, "
"you need to go to  source code path like ``davinci-kit-for-raspberry-"
"pi/python``."
msgstr ""
"以下のコードを **変更/リセット/コピー/実行/停止** できます。 ただし、その前に、 ``davinci-kit-for-raspberry-pi/python`` のようなソースコードパスに移動する必要があります。"

#: ../2.2.7_mfrc522_rfid_module.rst:301
msgid "Instantiate ``SimpleMFRC522()`` class."
msgstr "``SimpleMFRC522()`` クラスをインスタンス化します。"

#: ../2.2.7_mfrc522_rfid_module.rst:307
msgid ""
"This function is used to read card data. If the reading is successful, id"
" and text will be returned."
msgstr "この機能は、カードデータを読み取るために使用されます。 読み取りが成功すると、IDとテキストが返されます。"

#: ../2.2.7_mfrc522_rfid_module.rst:313
msgid ""
"This function is used to write information to the card, press ``Enter`` "
"key to finish writing. ``text`` is the information to be written to the "
"card."
msgstr ""
"この機能は、カードに情報を書き込むために使用されます。「Enter」キーを押して書き込みを終了します。 `` "
"text``は、カードに書き込まれる情報です。"

#: ../2.2.7_mfrc522_rfid_module.rst:316
msgid "Phenomenon Picture"
msgstr "現象画像"

#~ msgid ""
#~ "If it does not work after running,"
#~ " please refer to :ref:`C code is "
#~ "not working?`."
#~ msgstr ""

