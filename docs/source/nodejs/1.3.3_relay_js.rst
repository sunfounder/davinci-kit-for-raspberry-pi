.. note::

    Hallo, willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Community auf Facebook! Tauchen Sie tiefer in Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten ein.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie nach dem Kauf auftretende Probleme und technische Herausforderungen mit Hilfe unserer Community und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Tutorials aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und Vorschauen.
    - **Spezielle Rabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und festlichen Aktionen teil.

    üëâ Bereit, mit uns zu entdecken und zu kreieren? Klicken Sie auf [|link_sf_facebook|] und treten Sie noch heute bei!

1.3.3 Relais
=============

Einf√ºhrung
------------

In diesem Projekt lernen wir, wie man ein Relais verwendet. Es ist eine der h√§ufig verwendeten Komponenten in automatischen Steuerungssystemen. Wenn die Spannung, der Strom, die Temperatur, der Druck usw. einen bestimmten Wert erreichen, √ºberschreiten oder unterschreiten, schaltet das Relais den Stromkreis ein oder aus, um das Ger√§t zu steuern und zu sch√ºtzen.

Komponenten
----------

.. image:: ../img/list_1.3.4.png

Schaltplan
-----------------

.. image:: ../img/image345.png

Experimentelle Vorgehensweise
-----------------------

**Schritt 1:** Bauen Sie die Schaltung auf.

.. image:: ../img/image144.png

**Schritt 2:** Gehen Sie zum Ordner des Codes.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/davinci-kit-for-raspberry-pi/nodejs/

**Schritt 3:** F√ºhren Sie den Code aus.

.. raw:: html

   <run></run>

.. code-block::

    sudo node relay.js

W√§hrend der Code l√§uft, leuchtet die LED auf. Au√üerdem h√∂ren Sie ein Ticken, das durch das √ñffnen des normalerweise geschlossenen Kontakts und das Schlie√üen des normalerweise offenen Kontakts verursacht wird.

**Code**

.. code-block:: js

    const Gpio = require('pigpio').Gpio;
    const relay = new Gpio(17,{mode: Gpio.OUTPUT});

    setInterval(() => {
        relay.digitalWrite(!relay.digitalRead());
    }, 500);

    process.on('SIGINT',function(){
        relay.digitalWrite(0);
        process.exit();
    });

**Code Erkl√§rung**

.. code-block:: js

    const Gpio = require('pigpio').Gpio;
    const relay = new Gpio(17,{mode: Gpio.OUTPUT});

Importieren Sie das ``pigpio``-Modul und instanziieren Sie ein Objekt relay von Gpio, um den IO-Port Gpio17 zu steuern und auf den Ausgabemodus einzustellen.

.. code-block:: js

    setInterval(() => {
        relay.digitalWrite(!relay.digitalRead());
    }, 500);

Das Relais wird kontinuierlich ge√∂ffnet und geschlossen, und die LEDs werden auch in Intervallen von 500 ms kontinuierlich ein- und ausgeschaltet.

.. code-block:: js

    process.on('SIGINT',function(){
        relay.digitalWrite(0);
        process.exit();
    });

Wenn ctrl+c erkannt wird, wird das Relais ge√∂ffnet.

Ph√§nomenbild
------------------

.. image:: ../img/image145.jpeg
