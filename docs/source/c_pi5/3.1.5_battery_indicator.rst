.. note::

    Bonjour et bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez dans l'univers de Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et relevez vos d√©fis techniques gr√¢ce √† l'aide de notre communaut√© et de notre √©quipe.
    - **Apprenez et Partagez** : √âchangez des astuces et des tutoriels pour perfectionner vos comp√©tences.
    - **Aper√ßus exclusifs** : B√©n√©ficiez d'un acc√®s anticip√© aux nouvelles annonces de produits et aux avant-premi√®res.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos nouveaux produits.
    - **Promotions festives et concours** : Participez √† des concours et √† des promotions lors des f√™tes.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

3.1.5 Indicateur de Batterie
================================

Introduction
----------------

Dans ce cours, nous allons cr√©er un indicateur de batterie capable d'afficher 
visuellement le niveau de charge sur le bargraphe LED.

Composants
------------

.. image:: img/list_Battery_Indicator.png
    :align: center


Sch√©ma de c√¢blage
-------------------

============ ======== ======== ===
T-Board Name physical wiringPi BCM
GPIO17       Pin 11   0        17
GPIO18       Pin 12   1        18
GPIO27       Pin 13   2        27
GPIO25       Pin 22   6        25
GPIO12       Pin 32   26       12
GPIO16       Pin 36   27       16
GPIO20       Pin 38   28       20
GPIO21       Pin 40   29       21
GPIO5        Pin 29   21       5
GPIO6        Pin 31   22       6
GPIO13       Pin 33   23       13
GPIO19       Pin 35   24       19
GPIO26       Pin 37   25       26
============ ======== ======== ===

.. image:: img/Schematic_three_one5.png
   :align: center


Proc√©dures exp√©rimentales
----------------------------

**√âtape 1 :** Construisez le circuit.

.. image:: img/image248.png
   :alt: ÁîµÈáèËÆ°_bb
   :width: 800
   :align: center


**√âtape 2 :** Acc√©dez au dossier du code.

.. raw:: html

   <run></run>

.. code-block:: 

    cd ~/davinci-kit-for-raspberry-pi/c/3.1.5/

**√âtape 3 :** Compilez le code.

.. raw:: html

   <run></run>

.. code-block:: 

    gcc 3.1.5_BatteryIndicator.c -lwiringPi

**√âtape 4 :** Ex√©cutez le fichier ex√©cutable.

.. raw:: html

   <run></run>

.. code-block:: 

    sudo ./a.out

Lorsque le programme est lanc√©, connectez le **3e** broche de l'ADC0834 et 
le **GND** s√©par√©ment √† chaque p√¥le de la batterie. Le bargraphe LED affichera 
le niveau de la batterie correspondant (plage de mesure : **0-5V**).

.. note::

    Si cela ne fonctionne pas apr√®s l'ex√©cution, ou s'il y a un message d'erreur indiquant : ¬´ wiringPi.h : Aucun fichier ou r√©pertoire de ce type ¬ª, veuillez consulter :ref:`C code is not working?`.


**Explication du Code**

.. code-block:: c

    void¬†LedBarGraph(int¬†value){
    ¬†¬†¬†¬†for(int¬†i=0;i<10;i++){
    ¬†¬†¬†¬†¬†¬†¬†¬†digitalWrite(pins[i],HIGH);
        }
    ¬†¬†¬†¬†for(int¬†i=0;i<value;i++){
    ¬†¬†¬†¬†¬†¬†¬†¬†digitalWrite(pins[i],LOW);
        }
    }

Cette fonction contr√¥le l'allumage ou l'extinction des **10** LEDs du bargraphe. 
Initialement, les **10** LEDs sont √©teintes (niveau `HIGH`), puis le nombre de 
LEDs allum√©es est d√©termin√© en fonction de la valeur analogique re√ßue.

.. code-block:: c

    int¬†main(void)
    {
    ¬†¬†¬†¬†uchar¬†analogVal;
    ¬†¬†¬†¬†if(wiringPiSetup()¬†==¬†-1){¬†//when¬†initialize¬†wiring¬†failed,print¬†messageto¬†screen
    ¬†¬†¬†¬†¬†¬†¬†¬†printf("setup¬†wiringPi¬†failed¬†!");
    ¬†¬†¬†¬†¬†¬†¬†¬†return¬†1;
        }
    ¬†¬†¬†¬†pinMode(ADC_CS,¬†¬†OUTPUT);
    ¬†¬†¬†¬†pinMode(ADC_CLK,¬†OUTPUT);
    ¬†¬†¬†¬†for(int¬†i=0;i<10;i++){¬†¬†¬†¬†¬†¬†¬†//make¬†led¬†pins'¬†mode¬†is¬†output
    ¬†¬†¬†¬†¬†¬†¬†¬†pinMode(pins[i],¬†OUTPUT);
    ¬†¬†¬†¬†¬†¬†¬†¬†digitalWrite(pins[i],HIGH);
        }
        while(1){
    ¬†¬†¬†¬†¬†¬†¬†¬†analogVal¬†=¬†get_ADC_Result(0);
    ¬†¬†¬†¬†¬†¬†¬†¬†LedBarGraph(analogVal/25);
            delay(100);
        }
    ¬†¬†¬†¬†return¬†0;
    }

`analogVal` g√©n√®re des valeurs (**0-255**) en fonction des variations de tension 
(**0-5V**). Par exemple, si une batterie de **3V** est d√©tect√©e, la valeur 
correspondante de **152** est affich√©e sur le voltm√®tre.

Les **10** LEDs du bargraphe sont utilis√©es pour afficher les lectures de `analogVal`. 
255/10=25, donc chaque augmentation de **25** du `analogVal` allume une LED suppl√©mentaire. 
Par exemple, si `analogVal = 150` (environ **3V**), **6** LEDs seront allum√©es.

