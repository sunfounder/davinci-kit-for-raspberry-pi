# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, SunFounder
# This file is distributed under the same license as the SunFounder Davinci
# Kit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Davinci Kit\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-08-19 18:22+0800\n"
"PO-Revision-Date: 2021-05-28 07:31+0800\n"
"Last-Translator: \n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../2.1.5_keypad.rst:2
msgid "2.1.5 Keypad"
msgstr "2.1.5 キーパッド"

#: ../2.1.5_keypad.rst:5
msgid "Introduction"
msgstr "前書き"

#: ../2.1.5_keypad.rst:7
msgid ""
"A keypad is a rectangular array of buttons. In this project, We will use "
"it input characters."
msgstr "キーパッドは、ボタンの長方形の配列である。このプロジェクトでは、入力文字を使用する。"

#: ../2.1.5_keypad.rst:11
msgid "Components"
msgstr "部品"

#: ../2.1.5_keypad.rst:17
msgid "Principle"
msgstr "原理"

#: ../2.1.5_keypad.rst:19
msgid "**Keypad**"
msgstr "**キーパッド**"

#: ../2.1.5_keypad.rst:21
msgid ""
"A keypad is a rectangular array of 12 or 16 OFF-(ON) buttons. Their "
"contacts are accessed via a header suitable for connection with a ribbon "
"cable or insertion into a printed circuit board. In some keypads, each "
"button connects with a separate contact in the header, while all the "
"buttons share a common ground."
msgstr "キーパッドは12個または16個のOFF-（ON）ボタンの長方形配列である。リボンケーブルとの接続またはプリント基板への挿入に適したヘッダーを介してそれらの接点にアクセスする。一部のキーパッドでは、各ボタンはヘッダーの個別の連絡先に接続されるが、すべてのボタンは共通の接地を共有する。"

#: ../2.1.5_keypad.rst:30
msgid ""
"More often, the buttons are matrix encoded, meaning that each of them "
"bridges a unique pair of conductors in a matrix. This configuration is "
"suitable for polling by a microcontroller, which can be programmed to "
"send an output pulse to each of the four horizontal wires in turn. During"
" each pulse, it checks the remaining four vertical wires in sequence, to "
"determine which one, if any, is carrying a signal. Pullup or pulldown "
"resistors should be added to the input wires to prevent the inputs of the"
" microcontroller from behaving unpredictably when no signal is present."
msgstr "多くの場合、ボタンはマトリックスエンコードされている。つまり、各ボタンはマトリックス内の一意のコンダクターペアをブリッジしている。この構成は、マイクロコントローラーによるポーリングに適し、4本の水平線のそれぞれに順番に出力パルスを送信するようにプログラムできる。各パルス中に、残りの4本の垂直ワイヤを順番にチェックして、信号を伝送しているのがどれかを判断する。信号が存在しない場合にマイクロコントローラの入力が予期しない動作をすることを防ぐため、入力ワイヤにプルアップまたはプルダウン抵抗を追加してください。"

#: ../2.1.5_keypad.rst:41
msgid "Schematic Diagram"
msgstr "回路図"

#: ../2.1.5_keypad.rst:50
msgid "Experimental Procedures"
msgstr "実験手順"

#: ../2.1.5_keypad.rst:52
msgid "**Step 1:** Build the circuit."
msgstr "**ステップ1：** 回路を作る。"

#: ../2.1.5_keypad.rst:60
msgid "For C Language Users"
msgstr "C言語ユーザー向け"

#: ../2.1.5_keypad.rst:62 ../2.1.5_keypad.rst:348
msgid "**Step 2:** Open the code file."
msgstr "**ステップ2：** コードファイルを開く。"

#: ../2.1.5_keypad.rst:72
msgid "**Step 3:** Compile the code."
msgstr "**ステップ3：** コードをコンパイルする。"

#: ../2.1.5_keypad.rst:82
msgid "**Step 4:** Run."
msgstr "**ステップ4：** 実行する。"

#: ../2.1.5_keypad.rst:92 ../2.1.5_keypad.rst:368
msgid ""
"After the code runs, the values of pressed buttons on keypad (button "
"Value) will be printed on the screen."
msgstr "コードの実行後、キーパッドで押されたボタンの値（ボタン値）が画面にプリントされる。"

#: ../2.1.5_keypad.rst:97
msgid ""
"If it does not work after running, please refer to :ref:`C code is not "
"working?`"
msgstr "実行後に機能しない場合は、:ref:`C code is not working?` を参照してください。"

#: ../2.1.5_keypad.rst:99 ../2.1.5_keypad.rst:373
msgid "**Code**"
msgstr "**コード**"

#: ../2.1.5_keypad.rst:214 ../2.1.5_keypad.rst:442
msgid "**Code Explanation**"
msgstr "**コードの説明**"

#: ../2.1.5_keypad.rst:227 ../2.1.5_keypad.rst:457
msgid ""
"Declare each key of the matrix keyboard to the array keys[] and define "
"the pins on each row and column."
msgstr "マトリックスキーボードの各キーを配列keys []に表示し、各行と列にピンを定義する。"

#: ../2.1.5_keypad.rst:242 ../2.1.5_keypad.rst:470
msgid ""
"This is the part of the main function that reads and prints the button "
"value."
msgstr "これは、ボタン値を読み取り、プリントするメイン関数の一部である。"

#: ../2.1.5_keypad.rst:245 ../2.1.5_keypad.rst:473
msgid "The function keyRead() will read the state of every button."
msgstr "関数keyRead() は、すべてのボタンの状態を読み取る。"

#: ../2.1.5_keypad.rst:247
msgid ""
"KeyCompare() and keyCopy() are used to judge whether the state of a "
"button has changed (that is, a button has been pressed or released)."
msgstr ""
"KeyCompare() とkeyCopy() "
"は、ボタンの状態が変化したかどうか（つまり、ボタンが押されたか離されたか）を判断するために使用される。"

#: ../2.1.5_keypad.rst:250
msgid ""
"keyPrint() will print the button value of the button whose current level "
"is high level (the button is pressed)."
msgstr "keyPrint() は現在のレベルが高レベル（ボタンが押されている）のボタンのボタン値をプリントする。"

#: ../2.1.5_keypad.rst:273
msgid ""
"This function assigns a high level to each row in turn, and when the key "
"in the column is pressed, the column in which the key is located gets a "
"high level. After the two-layer loop judgment, the key state compilation "
"will generate an array (reasult[])."
msgstr ""
"この関数は各行に順番に高レベルを割り当て、列のキーが押されると、キーが配置されている列が高レベルになる。two- layer "
"loopの判定後、キー状態のコンパイルにより配列（reasult []）が生成される。"

#: ../2.1.5_keypad.rst:278
msgid "When pressing button 3:"
msgstr "ボタン3を押すとき："

#: ../2.1.5_keypad.rst:283
msgid ""
"RowPin [0] writes in the high level, and colPin[2] gets the high level. "
"ColPin [0], colPin[1], colPin[3] get the low level."
msgstr ""
"RowPin [0]は高レベルで書き込み、colPin [2]は高レベルになる。ColPin [0]、colPin [1]、colPin "
"[3]は低レベルになる。"

#: ../2.1.5_keypad.rst:286
msgid ""
"This gives us 0,0,1,0. When rowPin[1], rowPin[2] and rowPin[3] are "
"written in high level, colPin[0]~colPin[4] will get low level."
msgstr ""
"これにより、0,0,1,0が得られる。rowPin [1]、rowPin [2]、rowPin [3]が高レベルで書き込まれると、colPin "
"[0]〜colPin [4]は低レベルになる。"

#: ../2.1.5_keypad.rst:289
msgid "After the loop judgment is completed, an array will be generated:"
msgstr "ループ判定が完了すると、配列が生成される："

#: ../2.1.5_keypad.rst:317
 
msgid ""
"These two functions are used to judge whether the key state has changed, "
"for example when you release your hand when pressing \\'3\\' or pressing "
"\\'2\\', keyCompare() returns false."
msgstr ""
"これら二つの関数は、キーの状態が変化したかどうかを判断するために使用され、たとえば、「3」または「2」を押したときに手を離すと、keyCompare()"
" はfalseを返す。"

#: ../2.1.5_keypad.rst:321
msgid ""
"KeyCopy() is used to re-write the current button value for the a array "
"(last_key_pressed[BUTTON_NUM]) after each comparison. So we can compare "
"them next time."
msgstr ""
"KeyCopy() はそれぞれの比較後に配列（last_key_pressed "
"[BUTTON_NUM]）の現在のボタン値を書き換えるために使用される。ですから次回にそれらを比較できる。"

#: ../2.1.5_keypad.rst:340
 
msgid ""
"This function is used to print the value of the button currently pressed."
" If the button \\'1\\' is pressed, the \\'1\\' will be printed. If the "
"button \\'1\\' is pressed and the button \\'3\\' is pressed, the \\'1, "
"3\\' will be printed."
msgstr "この関数は現在押されているボタンの値をプリントするために使用される。「1」ボタンを押すと、「1」がプリントされる。ボタン「1」と「3」が押されると、「1、3」がプリントされる。"

#: ../2.1.5_keypad.rst:346
msgid "For Python Language Users"
msgstr "Python言語ユーザー向け"

#: ../2.1.5_keypad.rst:358
msgid "**Step 3:** Run."
msgstr "**ステップ3：** 実行する。"

#: ../2.1.5_keypad.rst:377
 
msgid ""
"You can **Modify/Reset/Copy/Run/Stop** the code below. But before that, "
"you need to go to  source code path like ``davinci-kit-for-raspberry-"
"pi/python``."
msgstr ""
"以下のコードを **変更/リセット/コピー/実行/停止** できます。 ただし、その前に、 ``davinci-kit-for-raspberry-pi/python`` のようなソースコードパスに移動する必要があります。"

#: ../2.1.5_keypad.rst:475
msgid ""
"The statement if len(pressed_keys) != 0 and last_key_pressed != "
"pressed_keys is used to judge"
msgstr "if len（pressed_keys）！= 0とlast_key_pressed！= Pressed_keysのステートメントは、"

#: ../2.1.5_keypad.rst:478
 
msgid ""
"whether a key is pressed and the state of the pressed button. (If you "
"press \\'3\\' when you press \\'1\\', the judgement is tenable.)"
msgstr "キーが押されたかどうか、押されたボタンの状態を判断するために使用される。（「1」を押したときに「3」を押した場合、判断は受け入れられる。）"

#: ../2.1.5_keypad.rst:481
msgid ""
"Prints the value of the currently pressed key when the condition is "
"tenable."
msgstr "条件が主張できる場合、現在押されているキーの値をプリントする。"

#: ../2.1.5_keypad.rst:484
msgid ""
"The statement last_key_pressed = pressed_keys assigns the state of each "
"judgment to an array last_key_pressed to facilitate the next round of "
"conditional judgment."
msgstr ""
"ステートメントlast_key_pressed = "
"pressed_keysは、それぞれの判断の状態を配列last_key_pressedに割り当て、次の条件判断を容易にする。"

#: ../2.1.5_keypad.rst:501
msgid ""
"This function assigns a high level to each row in turn, and when the "
"button in the column is pressed, the column in which the key is located "
"gets a high level. After the two-layer loop is judged, the value of the "
"button whose state is 1 is stored in the array pressed_keys."
msgstr "この関数は各行に順番に高レベルを割り当て、列のボタンが押されると、キーが配置されている列が高レベルになる。2層ループが判定された後、状態が1のボタンの値は、pressed_keys配列に保存される。"

#: ../2.1.5_keypad.rst:506
 
msgid "If you press the key \\'3\\':"
msgstr "キー「3」を押すと："

#: ../2.1.5_keypad.rst:511
msgid "rowPins[0] is written in high level, and colPins[2] gets high level."
msgstr "rowPins [0]は高レベルで書き込まれ、colPins [2]は高レベルになり、。"

#: ../2.1.5_keypad.rst:513
msgid "colPins[0]、colPins[1]、colPins[3] get low level."
msgstr "colPins [0]、colPins [1]、colPins [3]は低レベルになる。"

#: ../2.1.5_keypad.rst:515
 
msgid "There are four states:0, 0, 1, 0; and we write \\'3\\' into pressed_keys."
msgstr "4つの状態がある：0、0、1、0。そして、pressed_keysに「3」を書き込む。"

#: ../2.1.5_keypad.rst:517
msgid ""
"When rowPins[1] , rowPins[2] , rowPins[3] are written into high level, "
"colPins[0] ~ colPins[4] get low level."
msgstr ""
"rowPins [1]、rowPins [2]、rowPins [3]が高レベルに書き込まれると、colPins [0]〜colPins "
"[4]は低レベルになる。"

#: ../2.1.5_keypad.rst:520
 
msgid "The loop stopped, there returns pressed_keys = \\'3\\'."
msgstr "ループが停止し、pressed_keys = '3' が返される。"

#: ../2.1.5_keypad.rst:522
 
msgid ""
"If you press the buttons \\'1\\' and \\'3\\', there will return "
"pressed_keys = [\\'1\\',\\'3\\']."
msgstr "ボタン「1」と「3」を押すと、pressed_keys = ['1'、'3']が返される。"

#: ../2.1.5_keypad.rst:526
msgid "Phenomenon Picture"
msgstr "現象画像"

#~ msgid ""
#~ "If it does not work after running,"
#~ " please refer to :ref:`C code is "
#~ "not working?`."
#~ msgstr ""

