.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder pour les passionn√©s de Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez plus profond√©ment dans l‚Äôunivers du Raspberry Pi, de l‚ÄôArduino et de l‚ÄôESP32 avec d‚Äôautres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d‚Äôexperts** : R√©solvez vos probl√®mes apr√®s-vente et surmontez vos d√©fis techniques gr√¢ce √† l‚Äôaide de notre communaut√© et de notre √©quipe.
    - **Apprenez et Partagez** : √âchangez des conseils et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : B√©n√©ficiez d‚Äôun acc√®s anticip√© aux annonces de nouveaux produits et √† des avant-premi√®res.
    - **R√©ductions sp√©ciales** : Profitez de remises exclusives sur nos derniers produits.
    - **Promotions festives et cadeaux** : Participez √† des concours et des promotions sp√©ciales.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd‚Äôhui !

2.1.2 Interrupteur √† Glissi√®re
==================================

Introduction
--------------

Dans ce projet, nous allons apprendre √† utiliser un interrupteur √† glissi√®re. 
Habituellement, ce type d'interrupteur est soud√© sur un PCB pour servir d'interrupteur 
d'alimentation, mais ici, nous devons l'ins√©rer dans la breadboard, ce qui peut ne pas 
le fixer fermement. Nous l‚Äôutilisons sur la breadboard pour illustrer son fonctionnement.

Composants
-------------

.. image:: ../img/list_2.1.2_slide_switch.png



Sch√©ma de c√¢blage
--------------------

Connectez la broche centrale de l‚Äôinterrupteur √† glissi√®re au GPIO17, et les deux LEDs aux 
broches GPIO22 et GPIO27 respectivement. Ainsi, lorsque vous basculez l‚Äôinterrupteur, vous 
pouvez voir les deux LEDs s‚Äôallumer alternativement.

.. image:: ../img/image305.png


.. image:: ../img/image306.png


Proc√©dures exp√©rimentales
----------------------------

**√âtape 1 :** Construire le circuit.

.. image:: ../img/image161.png


**√âtape 2 :** Acc√©der au dossier du code.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/davinci-kit-for-raspberry-pi/nodejs/

**√âtape 3 :** Ex√©cuter le code.

.. raw:: html

   <run></run>

.. code-block::

    sudo node slide_switch.js

Lorsque le code s'ex√©cute, placez l‚Äôinterrupteur sur la gauche pour allumer la 
LED jaune ; sur la droite, la LED rouge s'allumera.

**Code**

.. code-block:: js

    const Gpio = require('pigpio').Gpio; 

    const led1 = new Gpio(22, {mode: Gpio.OUTPUT});
    const led2 = new Gpio(27, {mode: Gpio.OUTPUT});

    const slideSwitch = new Gpio(17, {
        mode: Gpio.INPUT,
        pullUpDown: Gpio.PUD_DOWN,     
        edge: Gpio.EITHER_EDGE        
    });

    slideSwitch.on('interrupt', (level) => {  
        led1.digitalWrite(level);   
        led2.digitalWrite(!level);       
    });

**Explication du code**

.. code-block:: js

    const Gpio = require('pigpio').Gpio; 

    const led1 = new Gpio(22, {mode: Gpio.OUTPUT});
    const led2 = new Gpio(27, {mode: Gpio.OUTPUT});

    const slideSwitch = new Gpio(17, {
        mode: Gpio.INPUT,
        pullUpDown: Gpio.PUD_DOWN,     
        edge: Gpio.EITHER_EDGE        
    });

Importer le module ``pigpio`` et cr√©er trois objets : ``led1``, ``led2`` 
et ``slideSwitch``. Ceux-ci permettent de contr√¥ler l‚Äôallumage et l‚Äôextinction 
des LEDs ``led1`` et ``led2`` en lisant le niveau de l'IO du ``slideSwitch``.

.. code-block:: js

    slideSwitch.on('interrupt', (level) => {  
        led1.digitalWrite(level);   
        led2.digitalWrite(!level);       
    });

Lorsque le niveau lu sur le port IO du ``slideSwitch`` change, la LED1 re√ßoit le 
m√™me niveau, tandis que la LED2 re√ßoit le niveau oppos√©.

Image du r√©sultat
--------------------

.. image:: ../img/image162.jpeg

