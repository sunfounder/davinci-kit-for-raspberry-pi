# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, sunfounder
# This file is distributed under the same license as the SunFounder Da Vinci
# Kit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Da Vinci Kit\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-07-29 17:00+0800\n"
"PO-Revision-Date: 2021-08-04 11:52+0800\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Last-Translator: \n"
"Language-Team: \n"
"X-Generator: Poedit 2.4.3\n"

#: ../iot/learn_more_about_control.py.rst:2
msgid "Learn More about ``control.py``"
msgstr "``control.py`` の詳細"

#: ../iot/learn_more_about_control.py.rst:4
msgid ""
"In order to better understand the projects that follow, let's take a "
"look at the official sample code provided by Cloud4RPi."
msgstr ""
"以下のプロジェクトをよりよく理解するために、Cloud4RPiによって提供される公"
"式のサンプルコードを見てみましょう。"

#: ../iot/learn_more_about_control.py.rst:8
msgid ""
"Please complete the previous section :ref:`Quick Guide on Cloud4RPi` "
"before viewing this section."
msgstr ""
"このセクションを表示する前に、前のセクション :ref:`Quick Guide on "
"Cloud4RPi` を完了してください。"

#: ../iot/learn_more_about_control.py.rst:10
msgid "Open the ``control.py`` file."
msgstr "``control.py`` ファイルを開きます。"

#: ../iot/learn_more_about_control.py.rst:21
msgid ""
"Cloud4RPi will set a device token for each one, and you need to fill in "
"the variable DEVICE_TOKEN with the correct device token in order to "
"connect to the corresponding device."
msgstr ""
"Cloud4RPiはそれぞれにDEVICE_TOKENを設定します。対応するデバイスに接続する"
"には、変数DEVICE_TOKENに正しいDEVICE_TOKENを入力する必要があります。"

#: ../iot/learn_more_about_control.py.rst:27
msgid ""
"``variables`` is a 2-dimensional dictionary, and the value corresponding "
"to each of its keys is also a dictionary."
msgstr "``variable`` は2次元辞書であり、その各キーに対応する値も辞書です。"

#: ../iot/learn_more_about_control.py.rst:29
msgid ""
"The keys of the ``variables`` dictionary are ``'Room Temp'``, ``'LED "
"On'``, ``'CPU Temp'``, ``'STATUS'``, ``'Location'``, which are all data "
"displayed on the Control Panel's widgets."
msgstr ""
"``variables`` 辞書のキーは ``'Room Temp'``、``'LED On'``、``'CPU温度'``、``'STATUS'``、 "
"``'Location'``、これはすべてコントロールパネルのウィジェットに表示されるデータです。"

#: ../iot/learn_more_about_control.py.rst:31
msgid ""
"The value of each key in the ``variables`` dictionary is also a "
"dictionary, and the keys of these dictionaries are the same, where the "
"value of the ``'bind'`` key is a function that can return the "
"transferred content, and the ``'type'`` is the data type of the "
"transferred content (``'numeric'`` is a numeric type, ``'string'`` is a "
"string type, ``'bool'`` is a boolean type, and ``'location'`` is a list "
"containing two dictionaries)."
msgstr ""
"``variables`` 辞書の各キーの値も辞書であり、これらの辞書のキーは同じです。"
"ここで、``'bind'`` キーの値は、転送されたコンテンツを返すことができる関数"
"です。 、および ``'type'`` は転送されたコンテンツのデータ型です"
"（``'numeric'`` は数値型、``'string'`` は文字列型、``'bool'`` はブール型であ"
"り、``'location'`` は2つの辞書を含むリストです）。"

#: ../iot/learn_more_about_control.py.rst:33
msgid ""
"Through the analysis of the ``variables`` dictionary, we can know that "
"Cloud4RPi will read the keys of the ``variables`` dictionary and display "
"the value corresponding to the key in the Control Panel. Obviously we "
"cannot change the keys of the ``variables`` dictionary, but we can "
"change the value in the key (the value of the ``'bind'`` dictionary) to "
"let the widgets display the content we want."
msgstr ""
"``variables`` ディクショナリの分析を通じて、Cloud4RPiが ``variables`` ディク"
"ショナリのキーを読み取り、そのキーに対応する値をコントロールパネルに表示"
"することがわかります。 もちろん、``variables`` ディクショナリのキーを変更"
"することはできませんが、キーの値（``'bind'`` ディクショナリの値）を変更し"
"て、widgetに必要なコンテンツを表示させることはできます。"

#: ../iot/learn_more_about_control.py.rst:35
msgid ""
"For example, if we want to send humidity values to Cloud4RPi, we cannot "
"add a new key to the ``variables`` dictionary, but we can borrow a key, "
"such as the ``'Room Temp'`` key, and then write the function that "
"returns the humidity value in the corresponding ``'bind'`` key."
msgstr ""
"たとえば、湿度値をCloud4RPiに送信する場合、``variables`` ディクショナリに"
"新しいキーを追加することはできませんが、``'Room Temp'`` キーなどのキーを借"
"用してから、 対応する ``'bind'`` キーに湿度値を返す関数を記述します。"

#: ../iot/learn_more_about_control.py.rst:62
msgid ""
"The ``vdiagnostics`` stores information about the Raspberry Pi and is "
"used to verify and prevent misconnections."
msgstr ""
"``vdiagnostics`` は、Raspberry Piに関する情報を保存し、誤接続を検証および"
"防止するために使用されます。"
