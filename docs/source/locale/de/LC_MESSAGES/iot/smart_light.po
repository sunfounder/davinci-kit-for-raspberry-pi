# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, sunfounder
# This file is distributed under the same license as the SunFounder Da Vinci
# Kit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Da Vinci Kit\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-08-04 15:50+0800\n"
"PO-Revision-Date: 2021-08-05 09:35+0800\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: de\n"
"X-Generator: Poedit 3.0\n"

#: ../iot/smart_light.rst:2
msgid "Smart Light"
msgstr "Intelligentes Licht"

#: ../iot/smart_light.rst:4
msgid ""
"In this project, we will learn to control the brightness of LED with "
"Cloud4RPi's Silder widget."
msgstr ""
"In diesem Projekt werden wir lernen, die Helligkeit von LEDs mit dem "
"Silder-Widget von Cloud4RPi zu steuern."

#: ../iot/smart_light.rst:7
msgid "Experimental Procedures"
msgstr "Experimentelle Verfahren"

#: ../iot/smart_light.rst:9
msgid "Build the circuit."
msgstr "Bauen Sie die Schaltung auf."

#: ../iot/smart_light.rst:14
msgid "Open the code."
msgstr "Öffnen Sie den Code."

#: ../iot/smart_light.rst:25
msgid "Find the line below and fill in the correct device token."
msgstr ""
"Suchen Sie die untere Zeile und tragen Sie den richtigen Geräte-Token "
"ein."

#: ../iot/smart_light.rst:31
msgid "Run the code."
msgstr "Führen Sie den Code aus."

#: ../iot/smart_light.rst:41
msgid ""
"Go to Cloud4RPi, add a new Control Panel named project3, and click **Add "
"Widget** to add a **Slider** widget."
msgstr ""
"Gehen Sie zu Cloud4RPi, fügen Sie ein neues Control Panel namens "
"project3 hinzu und klicken Sie auf **Widget hinzufügen**, um ein "
"**Slider**-Widget hinzuzufügen."

#: ../iot/smart_light.rst:46
msgid ""
"Once added, you can use the Slider widget to control the brightness of "
"the LED."
msgstr ""
"Nach dem Hinzufügen können Sie das Schieberegler-Widget verwenden, um "
"die Helligkeit der LED zu steuern."

#: ../iot/smart_light.rst:52
msgid "Code Explanation"
msgstr "Code Erläuterung"

#: ../iot/smart_light.rst:59
msgid ""
"Call the ``GPIO.PWM()`` function to define ``LED_PIN`` as PWM pin and "
"set the frequency of PWM pin to 2000Hz, then use the ``start()`` "
"function to set the initial duty cycle to 0."
msgstr ""
"Rufen Sie die Funktion ``GPIO.PWM()`` auf, um ``LED_PIN`` als PWM-Pin zu "
"definieren und setzen Sie die Frequenz des PWM-Pins auf 2000Hz, dann "
"verwenden Sie die Funktion ``start()``, um das anfängliche "
"Tastverhältnis auf 0 zu setzen."

#: ../iot/smart_light.rst:65
msgid ""
"The value sent by Slider widget to Raspberry Pi is used as PWM duty "
"cycle to change the brightness of the LED."
msgstr ""
"Der vom Slider-Widget an den Raspberry Pi gesendete Wert wird als PWM-"
"Tastverhältnis verwendet, um die Helligkeit der LED zu ändern."

#: ../iot/smart_light.rst:77
msgid ""
"By setting the value of the ``'value'`` key, we can set the initial "
"value of the Slider widget, then always read the value of the "
"``'value'`` key and send the current level of ``LED_PIN`` (the value "
"returned by the function ``led_control``) to Cloud4RPi."
msgstr ""
"Indem wir den Wert des Schlüssels ``'value`` setzen, können wir den "
"Anfangswert des Slider Widgets setzen, dann immer den Wert des "
"Schlüssels ``'value`` lesen und den aktuellen Pegel von ``LED_PIN`` (der "
"Wert, der von der Funktion ``led_control`` zurückgegeben wird) an "
"Cloud4RPi senden."
