.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder Raspberry Pi & Arduino & ESP32 sur Facebook ! Plongez plus profond√©ment dans l‚Äôunivers du Raspberry Pi, d‚ÄôArduino et d‚ÄôESP32 avec d‚Äôautres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Assistance d'experts** : R√©solvez les probl√®mes apr√®s-vente et surmontez les d√©fis techniques avec l‚Äôaide de notre communaut√© et de notre √©quipe.
    - **Apprenez et Partagez** : √âchangez des conseils et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : B√©n√©ficiez d‚Äôun acc√®s anticip√© aux annonces de nouveaux produits et √† des avant-premi√®res.
    - **R√©ductions sp√©ciales** : Profitez de remises exclusives sur nos derniers produits.
    - **Promotions festives et concours** : Participez √† des concours et √† des promotions sp√©ciales.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

2.1.3 Interrupteur √† Inclinom√®tre
===================================

Introduction
---------------

Il s'agit d'un interrupteur √† bascule √† bille avec une bille m√©tallique √† l'int√©rieur. Il est utilis√© pour d√©tecter de petites inclinaisons angulaires.

Composants
-----------

.. image:: ../img/list_2.1.3_tilt_switch.png



Sch√©ma de c√¢blage
--------------------

.. image:: ../img/image307.png


.. image:: ../img/image308.png


Proc√©dures exp√©rimentales
---------------------------

**√âtape 1 :** Construire le circuit.

.. image:: ../img/image169.png

**√âtape 2 :** Acc√©der au dossier du code.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/davinci-kit-for-raspberry-pi/nodejs/

**√âtape 3 :** Ex√©cuter le code.

.. raw:: html

   <run></run>

.. code-block::

    sudo node tilt_switch.js

Placez l'interrupteur √† inclinaison verticalement, et la LED verte s'allumera.
Si vous le basculez, la LED rouge s'allumera.
Replacez-le verticalement, et la LED verte s'allumera √† nouveau.

**Code**

.. raw:: html

    <run></run>

.. code-block:: js

    const Gpio = require('pigpio').Gpio;

    const led1 = new Gpio(22, { mode: Gpio.OUTPUT });
    const led2 = new Gpio(27, { mode: Gpio.OUTPUT });

    const tilt = new Gpio(17, {
        mode: Gpio.INPUT,
        pullUpDown: Gpio.PUD_DOWN,     
        edge: Gpio.EITHER_EDGE        
    });

    tilt.on('interrupt', (level) => {  
        if (level) {
            console.log("Horizontally");
        }
        else {
            console.log("Vertically");
        }
        led1.digitalWrite(level);
        led2.digitalWrite(!level);    
    });

**Explication du code**

.. code-block:: js

    const Gpio = require('pigpio').Gpio;

    const led1 = new Gpio(22, { mode: Gpio.OUTPUT });
    const led2 = new Gpio(27, { mode: Gpio.OUTPUT });

    const tilt = new Gpio(17, {
        mode: Gpio.INPUT,
        pullUpDown: Gpio.PUD_DOWN,     
        edge: Gpio.EITHER_EDGE        
    }); 

Importer le module ``pigpio`` et cr√©er trois objets : ``led1``, ``led2`` et ``tilt``, 
pour contr√¥ler l'allumage et l'extinction des LEDs ``led1`` et ``led2`` en lisant le niveau de l'IO du ``tilt``.       

.. code-block:: js

    const tilt = new Gpio(17, {
        mode: Gpio.INPUT,
        pullUpDown: Gpio.PUD_DOWN,     
        edge: Gpio.EITHER_EDGE       
    });

Cr√©er un objet ``tilt`` pour contr√¥ler le port IO ``Gpio17``, en le d√©finissant en mode d'entr√©e avec une r√©sistance de tirage vers le bas (initialement en niveau bas).
D√©finir une fonction d'interruption en mode ``EITHER_EDGE``, c‚Äôest-√†-dire que les deux transitions, montante et descendante, d√©clencheront la fonction d'interruption.

.. code-block:: js

    tilt.on('interrupt', (level) => {  
        if (level) {
            console.log("Horizontally");
        }
        else {
            console.log("Vertically");
        }
        led1.digitalWrite(level);
        led2.digitalWrite(!level);    
    });

Lorsque l'interruption est d√©clench√©e, √©crire le m√™me niveau dans ``led1`` et le niveau oppos√© dans ``led2``.
Lorsque le port IO de ``tilt`` est en niveau haut, le terminal affiche "Position Horizontale".
Lorsque le port IO de ``tilt`` est en niveau bas, le terminal affiche "Position Verticale".



Image du r√©sultat
--------------------

.. image:: ../img/image170.jpeg

