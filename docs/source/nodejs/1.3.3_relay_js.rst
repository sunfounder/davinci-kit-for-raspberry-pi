.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder pour les passionn√©s de Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez plus profond√©ment dans l‚Äôunivers du Raspberry Pi, de l‚ÄôArduino et de l‚ÄôESP32 avec d‚Äôautres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d‚Äôexperts** : R√©solvez vos probl√®mes apr√®s-vente et surmontez vos d√©fis techniques gr√¢ce √† l‚Äôaide de notre communaut√© et de notre √©quipe.
    - **Apprenez et Partagez** : √âchangez des conseils et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : B√©n√©ficiez d‚Äôun acc√®s anticip√© aux annonces de nouveaux produits et √† des avant-premi√®res.
    - **R√©ductions sp√©ciales** : Profitez de remises exclusives sur nos derniers produits.
    - **Promotions festives et cadeaux** : Participez √† des concours et des promotions sp√©ciales.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd‚Äôhui !

1.3.3 Relais
==============

Introduction
--------------

Dans ce projet, nous allons apprendre √† utiliser un relais. Il s'agit de l'un des 
composants les plus couramment utilis√©s dans les syst√®mes de contr√¥le automatique. 
Lorsque la tension, le courant, la temp√©rature, la pression, etc., atteignent, 
d√©passent ou sont inf√©rieurs √† la valeur pr√©d√©termin√©e, le relais se ferme ou s‚Äôouvre 
pour contr√¥ler et prot√©ger les √©quipements.

Composants
-------------

.. image:: ../img/list_1.3.4.png



Sch√©ma de c√¢blage
--------------------

.. image:: ../img/image345.png


Proc√©dures exp√©rimentales
----------------------------

**√âtape 1 :** Construire le circuit.

.. image:: ../img/image144.png

**√âtape 2 :** Acc√©der au dossier du code.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/davinci-kit-for-raspberry-pi/nodejs/

**√âtape 3 :** Ex√©cuter le code.

.. raw:: html

   <run></run>

.. code-block::

    sudo node relay.js

Pendant l‚Äôex√©cution du programme, la LED s‚Äôallume. De plus, vous entendrez un 
d√©clic caus√© par la fermeture du contact normalement ouvert et l‚Äôouverture du 
contact normalement ferm√©.

**Code**

.. code-block:: js

    const Gpio = require('pigpio').Gpio;
    const relay = new Gpio(17,{mode: Gpio.OUTPUT});

    setInterval(() => {
        relay.digitalWrite(!relay.digitalRead());
    }, 500);

    process.on('SIGINT',function(){
        relay.digitalWrite(0);
        process.exit();
    });

**Explication du code**

.. code-block:: js

    const Gpio = require('pigpio').Gpio;
    const relay = new Gpio(17,{mode: Gpio.OUTPUT});

Importer le module ``pigpio`` et instancier un objet ``relay`` de la classe Gpio pour contr√¥ler le port IO Gpio17, en le d√©finissant en mode sortie.

.. code-block:: js

    setInterval(() => {
        relay.digitalWrite(!relay.digitalRead());
    }, 500);

Le relais s‚Äôouvre et se ferme en continu, et la LED s‚Äôallume et s‚Äô√©teint toutes les 500 ms.

.. code-block:: js

    process.on('SIGINT',function(){
        relay.digitalWrite(0);
        process.exit();
    });

Lorsque **Ctrl+C** est d√©tect√©, le relais s‚Äôouvre pour arr√™ter le fonctionnement.

Image du r√©sultat
--------------------

.. image:: ../img/image145.jpeg

