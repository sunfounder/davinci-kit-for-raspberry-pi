.. note::

    Ciao! Benvenuto nella community di SunFounder Raspberry Pi & Arduino & ESP32 su Facebook! Esplora piÃ¹ a fondo Raspberry Pi, Arduino ed ESP32 insieme ad altri appassionati.

    **PerchÃ© Unirsi?**

    - **Supporto Esperto**: Risolvi problemi post-vendita e sfide tecniche con lâ€™aiuto della nostra community e del nostro team.
    - **Impara e Condividi**: Scambia consigli e tutorial per migliorare le tue competenze.
    - **Anteprime Esclusive**: Ottieni accesso anticipato agli annunci di nuovi prodotti e anteprime.
    - **Sconti Speciali**: Approfitta di sconti esclusivi sui nostri nuovi prodotti.
    - **Promozioni e Omaggi Festivi**: Partecipa a promozioni e omaggi durante le festivitÃ .

    ðŸ‘‰ Pronto per esplorare e creare con noi? Clicca su [|link_sf_facebook|] e unisciti oggi stesso!

3.1.13 GIOCO â€“ 10 Secondi
===========================

Introduzione
--------------------

Ora realizzeremo un dispositivo di gioco per mettere alla prova la 
tua concentrazione. Collega l'interruttore di inclinazione a una 
bacchetta per creare una "bacchetta magica". Agita la bacchetta e 
il display a 4 cifre inizierÃ  a contare; agitandola nuovamente il 
conteggio si fermerÃ . Se riesci a far sÃ¬ che il conteggio visualizzato 
sia esattamente **10.00**, vinci la sfida. Puoi giocare con i tuoi amici 
per scoprire chi Ã¨ il "mago del tempo".

Componenti
----------------

.. image:: img/list_GAME_10_Second.png
    :align: center

Schema Circuitale
------------------------

============ ======== ======== ===
T-Board Name physical wiringPi BCM
GPIO17       Pin 11   0        17
GPIO27       Pin 13   2        27
GPIO22       Pin 15   3        22
SPIMOSI      Pin 19   12       10
GPIO18       Pin 12   1        18
GPIO23       Pin 16   4        23
GPIO24       Pin 18   5        24
GPIO26       Pin 37   25       26
============ ======== ======== ===

.. image:: img/Schematic_three_one13.png
   :align: center

Procedura Sperimentale
---------------------------------

**Step 1**: Costruisci il circuito.

.. image:: img/image277.png
   :width: 800

**Step 2**: Vai nella cartella del codice.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/davinci-kit-for-raspberry-pi/c/3.1.13/

**Step 3**: Compila il codice.

.. raw:: html

   <run></run>

.. code-block::

    gcc 3.1.13_GAME_10Second.c -lwiringPi

**Step 4**: Esegui il file eseguibile.

.. raw:: html

   <run></run>

.. code-block::

    sudo ./a.out

Agita la bacchetta per avviare il conteggio sul display a 4 cifre; 
agitandola di nuovo interromperai il conteggio. Se il conteggio si 
ferma esattamente su **10.00**, vinci. Agitala un'altra volta per 
iniziare un nuovo round.

.. note::

    Se il programma non funziona dopo lâ€™avvio o compare un messaggio di errore come : \"wiringPi.h:  File o directory inesistente\", consulta :ref:`Il codice C non funziona?`.

**Spiegazione del Codice**

.. code-block:: c

    voidÂ stateChange(){
    Â Â Â Â ifÂ (gameStateÂ ==Â 0){
    Â Â Â Â Â Â Â Â counterÂ =Â 0;
            delay(1000);
            ualarm(10000,10000); 
        }else{
            alarm(0);
            delay(1000);
        }
    Â Â Â Â gameStateÂ =Â (gameStateÂ +Â 1)%2;
    }

Il gioco Ã¨ suddiviso in due modalitÃ :

gameState=0 Ã¨ la modalitÃ  "start", nella quale il tempo viene calcolato 
e visualizzato sul display, e scuotendo lâ€™interruttore di inclinazione 
si passa alla modalitÃ  "mostra".

gameState=1 Ã¨ la modalitÃ  "mostra", in cui il conteggio si ferma e viene 
visualizzato sul display. Scuotendo nuovamente lâ€™interruttore, il timer 
si resetta e il gioco ricomincia.

.. code-block:: c

    voidÂ loop(){
    Â Â Â Â intÂ currentStateÂ =0;
    Â Â Â Â intÂ lastState=0;
        while(1){
            display();
            currentState=digitalRead(sensorPin);
            if((currentState==0)&&(lastState==1)){
                stateChange();
            }
            lastState=currentState;
        }
    }

Loop() Ã¨ la funzione principale. Visualizza il tempo sul display a 4 cifre 
e legge il valore dellâ€™interruttore di inclinazione. Se lo stato dellâ€™interruttore 
cambia, viene chiamata la funzione stateChange().

