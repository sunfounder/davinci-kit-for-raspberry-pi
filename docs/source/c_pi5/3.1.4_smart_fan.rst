.. note::

    Â¡Hola! Bienvenidos a la comunidad de entusiastas de SunFounder para Raspberry Pi, Arduino y ESP32 en Facebook. SumÃ©rgete en el mundo de Raspberry Pi, Arduino y ESP32 junto con otros apasionados.

    **Â¿Por quÃ© unirse?**

    - **Soporte de Expertos**: Soluciona problemas post-venta y desafÃ­os tÃ©cnicos con la ayuda de nuestra comunidad y equipo.
    - **Aprende y Comparte**: Intercambia consejos y tutoriales para mejorar tus habilidades.
    - **Avances Exclusivos**: Accede anticipadamente a anuncios de nuevos productos y adelantos.
    - **Descuentos Especiales**: Disfruta de descuentos exclusivos en nuestros productos mÃ¡s recientes.
    - **Promociones y Sorteos Festivos**: Participa en sorteos y promociones especiales en dÃ­as festivos.

    ðŸ‘‰ Â¿Listo para explorar y crear con nosotros? Haz clic en [|link_sf_facebook|] y Ãºnete hoy.

3.1.4 Ventilador Inteligente
==============================

IntroducciÃ³n
--------------

En este curso, utilizaremos motores, botones y termistores para construir un ventilador inteligente con funciÃ³n manual y automÃ¡tica, con velocidad de viento ajustable.

Componentes
-------------

.. image:: img/list_Smart_Fan.png
    :align: center

Diagrama de Circuito
-----------------------

============ ======== ======== ===
T-Board Name physical wiringPi BCM
GPIO17       Pin 11   0        17
GPIO18       Pin 12   1        18
GPIO27       Pin 13   2        27
GPIO22       Pin 15   3        22
GPIO5        Pin 29   21       5
GPIO6        Pin 31   22       6
GPIO13       Pin 33   23       13
============ ======== ======== ===

.. image:: img/Schematic_three_one4.png
    :width: 500
    :align: center

Procedimientos Experimentales
--------------------------------

**Paso 1:** Construye el circuito.

.. image:: img/image245.png
   :alt: Smart Fan_bb
   :width: 800
   :align: center

.. note::
    El mÃ³dulo de alimentaciÃ³n puede utilizar una baterÃ­a de 9V con el conector 
    de baterÃ­a de 9V incluido en el kit. Inserta el puente del mÃ³dulo de 
    alimentaciÃ³n en las tiras de bus de 5V de la protoboard.

.. image:: img/image118.jpeg
   :alt: \_MG_2084
   :width: 2.80694in
   :height: 0.94375in
   :align: center

**Para Usuarios de Lenguaje C**
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

**Paso 2**: Ingresa en la carpeta del cÃ³digo.

.. raw:: html

   <run></run>

.. code-block:: 

    cd ~/davinci-kit-for-raspberry-pi/c/3.1.4/

**Paso 3**: Compila.

.. raw:: html

   <run></run>

.. code-block:: 

    gcc 3.1.4_SmartFan.c -lwiringPi -lm

**Paso 4**: Ejecuta el archivo ejecutable anterior.

.. raw:: html

   <run></run>

.. code-block:: 

    sudo ./a.out

Cuando el cÃ³digo se ejecute, presiona el botÃ³n para activar el ventilador. 
Cada vez que presionas, se ajusta una categorÃ­a de velocidad hacia arriba o 
abajo. Hay **5** niveles de velocidad: **0~4**. Cuando estÃ¡ en la **4.Âª** 
categorÃ­a de velocidad y presionas el botÃ³n, el ventilador se detiene con una 
velocidad de viento en **0**.

.. note::

    Si no funciona tras ejecutarlo, o aparece el mensaje de error: \"wiringPi.h: No such file or directory", consulta :ref:`C code is not working?`.


Cuando la temperatura sube o baja mÃ¡s de 2â„ƒ, la velocidad del ventilador cambia 
automÃ¡ticamente una categorÃ­a mÃ¡s rÃ¡pido o mÃ¡s lento.


**ExplicaciÃ³n del CÃ³digo**

.. code-block:: c

    intÂ temperture(){
    Â Â Â Â unsignedÂ charÂ analogVal;
    Â Â Â Â doubleÂ Vr,Â Rt,Â temp,Â cel,Â Fah;
    Â Â Â Â analogValÂ =Â get_ADC_Result(0);
    Â Â Â Â VrÂ =Â 5Â *Â (double)(analogVal)Â /Â 255;
    Â Â Â Â RtÂ =Â 10000Â *Â (double)(Vr)Â /Â (5Â -Â (double)(Vr));
    Â Â Â Â tempÂ =Â 1Â /Â (((log(Rt/10000))Â /Â 3950)+(1Â /Â (273.15Â +Â 25)));
    Â Â Â Â celÂ =Â tempÂ -Â 273.15;
    Â Â Â Â FahÂ =Â celÂ *Â 1.8Â +32;
    Â Â Â Â intÂ t=cel;
    Â Â Â Â returnÂ t;
    }

La funciÃ³n temperture() convierte los valores del termistor leÃ­dos por el 
ADC0834 en valores de temperatura. Consulta :ref:`2.2.2 Thermistor` para mÃ¡s detalles.

.. code-block:: c

    intÂ motor(intÂ level){
    Â Â Â Â if(level==0){
    Â Â Â Â Â Â Â Â digitalWrite(MotorEnable,LOW);
    Â Â Â Â Â Â Â Â returnÂ 0;
    Â Â Â Â }
    Â Â Â Â ifÂ (level>=4){
    Â Â Â Â Â Â Â Â levelÂ =4;
    Â Â Â Â }
    Â Â Â Â digitalWrite(MotorEnable,HIGH);
    Â Â Â Â softPwmWrite(MotorPin1,Â level*25);
    Â Â Â Â returnÂ level;Â Â Â Â 
    }

Esta funciÃ³n controla la velocidad de rotaciÃ³n del motor. El rango del 
**Nivel** es **0-4** (el nivel **0** detiene el motor). Cada nivel representa 
un ajuste del **25%** en la velocidad del viento.

.. code-block:: c

    intÂ main(void)
    {
    Â Â Â Â setup();
    Â Â Â Â intÂ currentState,lastState=0;
    Â Â Â Â intÂ levelÂ =Â 0;
    Â Â Â Â intÂ currentTemp,markTemp=0;
    Â Â Â Â while(1){
    Â Â Â Â Â Â Â Â currentState=digitalRead(BtnPin);
    Â Â Â Â Â Â Â Â currentTemp=temperture();
    Â Â Â Â Â Â Â Â ifÂ (currentTemp<=0){continue;}
    Â Â Â Â Â Â Â Â ifÂ (currentState==1&&lastState==0){
    Â Â Â Â Â Â Â Â Â Â Â Â level=(level+1)%5;
    Â Â Â Â Â Â Â Â Â Â Â Â markTemp=currentTemp;
    Â Â Â Â Â Â Â Â Â Â Â Â delay(500);
    Â Â Â Â Â Â Â Â }
    Â Â Â Â Â Â Â Â lastState=currentState;
    Â Â Â Â Â Â Â Â ifÂ (level!=0){
    Â Â Â Â Â Â Â Â Â Â Â Â ifÂ (currentTemp-markTemp<=-2){
    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â level=level-1;
    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â markTemp=currentTemp;
    Â Â Â Â Â Â Â Â Â Â Â Â }
    Â Â Â Â Â Â Â Â Â Â Â Â ifÂ (currentTemp-markTemp>=2){
    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â level=level+1;
    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â markTemp=currentTemp;
    Â Â Â Â Â Â Â Â Â Â Â Â }
    Â Â Â Â Â Â Â Â }
    Â Â Â Â Â Â Â Â level=motor(level);
    Â Â Â Â }
    Â Â Â Â returnÂ 0;
    }

La funciÃ³n **main()** contiene todo el proceso del programa, como se describe:

1) Lee constantemente el estado del botÃ³n y la temperatura actual.

2) Cada pulsaciÃ³n incrementa el nivel en **+1** y, al mismo tiempo, se actualiza 
   la temperatura. El rango del **Nivel** es **1~4**.

3) Cuando el ventilador estÃ¡ en funcionamiento (el nivel es **diferente de 0**), la 
   temperatura se sigue detectando. Un cambio de **+2â„ƒ** aumenta o disminuye el nivel.

4) El motor ajusta su velocidad de rotaciÃ³n segÃºn el **Nivel**.
