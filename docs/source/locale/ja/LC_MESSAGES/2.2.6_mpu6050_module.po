# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, SunFounder
# This file is distributed under the same license as the SunFounder Davinci
# Kit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Davinci Kit\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-08-19 18:22+0800\n"
"PO-Revision-Date: 2021-05-28 08:39+0800\n"
"Last-Translator: \n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../2.2.6_mpu6050_module.rst:2
msgid "2.2.6 MPU6050 Module"
msgstr "2.2.6 MPU6050モジュール"

#: ../2.2.6_mpu6050_module.rst:5
msgid "Introduction"
msgstr "前書き"

#: ../2.2.6_mpu6050_module.rst:7
msgid ""
"The MPU-6050 is the world’s first and only 6-axis motion tracking devices"
" (3-axis Gyroscope and 3-axis Accelerometer) designed for smartphones, "
"tablets and wearable sensors that have these features, including the low "
"power, low cost, and high performance requirements."
msgstr "MPU-6050は、低消費電力、低コスト、高性能などの機能を備えたスマートフォン、タブレット、ウェアラブルセンサー向けに設計された世界初で唯一の6軸物標追跡装置（3軸ジャイロスコープと3軸加速度センサー）である。"

#: ../2.2.6_mpu6050_module.rst:12
msgid ""
"In this experiment, use I2C to obtain the values of the three-axis "
"acceleration sensor and three-axis gyroscope for MPU6050 and display them"
" on the screen."
msgstr "この実験では、I2Cを使用して、MPU6050の3軸加速度センサーと3軸ジャイロスコープの値を取得し、画面に表示する。"

#: ../2.2.6_mpu6050_module.rst:17
msgid "Components"
msgstr "部品"

#: ../2.2.6_mpu6050_module.rst:23
msgid "Principle"
msgstr "原理"

#: ../2.2.6_mpu6050_module.rst:25
msgid "**MPU6050**"
msgstr "**MPU6050**"

#: ../2.2.6_mpu6050_module.rst:27
msgid ""
"The MPU-6050 is a 6-axis(combines 3-axis Gyroscope, 3-axis Accelerometer)"
" motion tracking devices."
msgstr "MPU-6050は、6軸（3軸ジャイロスコープ、3軸加速度計を組み合わせた）物標追跡装置である。"

#: ../2.2.6_mpu6050_module.rst:30
msgid "Its three coordinate systems are defined as follows:"
msgstr "その三つの座標系は次のように定義される："

#: ../2.2.6_mpu6050_module.rst:32
msgid ""
"Put MPU6050 flat on the table, assure that the face with label is upward "
"and a dot on this surface is on the top left corner. Then the upright "
"direction upward is the z-axis of the chip. The direction from left to "
"right is regarded as the X-axis. Accordingly the direction from back to "
"front is defined as the Y-axis."
msgstr "MPU6050をテーブルの上に平らに置き、ラベルのある面が上向きで、この表面のドットが左上隅にあることを確認してください。次に、上向きの直立方向がチップのz軸である。左から右への方向はX軸と見なされる。したがって、後ろから前への方向はY軸として定義される。"

#: ../2.2.6_mpu6050_module.rst:41
msgid "**3-axis Accelerometer**"
msgstr "**3-軸加速度計**"

#: ../2.2.6_mpu6050_module.rst:43
msgid ""
"The accelerometer works on the principle of piezo electric effect, the "
"ability of certain materials to generate an electric charge in response "
"to applied mechanical stress."
msgstr "加速度計は加えられた機械応力に応答して電荷を生成する特定の材料の能力である圧電効果の原理で動作する。"

#: ../2.2.6_mpu6050_module.rst:47
msgid ""
"Here, imagine a cuboidal box, having a small ball inside it, like in the "
"picture above. The walls of this box are made with piezo electric "
"crystals. Whenever you tilt the box, the ball is forced to move in the "
"direction of the inclination, due to gravity. The wall with which the "
"ball collides, creates tiny piezo electric currents. There are totally, "
"three pairs of opposite walls in a cuboid. Each pair corresponds to an "
"axis in 3D space: X, Y and Z axes. Depending on the current produced from"
" the piezo electric walls, we can determine the direction of inclination "
"and its magnitude."
msgstr "ここで、上記の写真のように、小さなボールの中に直方体の箱があることを想像してください。この箱の壁は圧電結晶で作られている。箱を傾けると、重力によりボールが傾斜の方向に移動する。ボールが衝突する壁は、小さな圧電電流を生成する。合計で、立方体には3組の向かい合った壁がある。各ペアは、3D空間の軸：X、Y、Z軸に対応する。圧電壁から生成される電流に応じて、傾斜の方向とその大きさを決定できる。"

#: ../2.2.6_mpu6050_module.rst:60
msgid ""
"We can use the MPU6050 to detect its acceleration on each coordinate axis"
" (in the stationary desktop state, the Z-axis acceleration is 1 gravity "
"unit, and the X and Y axes are 0). If it is tilted or in a "
"weightless/overweight condition, the corresponding reading will change."
msgstr "MPU6050を使用して、各座標軸の加速度を検出できる（静止デスクトップ状態では、Z軸の加速度は1重力単位で、X軸とY軸は0である）。傾斜または無重量/重量超過の状態にある場合、対応する測定値が変化する。"

#: ../2.2.6_mpu6050_module.rst:65
msgid ""
"There are four kinds of measuring ranges that can be selected "
"programmatically: +/-2g, +/-4g, +/-8g, and +/-16g (2g by default) "
"corresponding to each precision. Values range from -32768 to 32767."
msgstr "プログラムで選択できる測定範囲には、+/-2g、+/-4g、+/-8g、と各精度に対応する+/-16g（デフォルトでは2g）の4種類がある。値の範囲は-32768〜32767である。"

#: ../2.2.6_mpu6050_module.rst:69
msgid ""
"The reading of accelerometer is converted to an acceleration value by "
"mapping the reading from the reading range to the measuring range."
msgstr "読み取り値を測定範囲にマッピングすることにより、加速度計の読み取り値は加速度値に変換される。"

#: ../2.2.6_mpu6050_module.rst:72
msgid ""
"Acceleration = (Accelerometer axis raw data / 65536 \\* full scale "
"Acceleration range) g"
msgstr "加速度=（加速度計軸の生データ / 65536 \\* フルスケールの加速度範囲）g"

#: ../2.2.6_mpu6050_module.rst:75
msgid ""
"Take the X-axis as an example, when Accelerometer X axis raw data is "
"16384 and the range is selected as +/-2g:"
msgstr "X軸を例として、加速度計X軸の生データは16384の場合、範囲を +/-2gに選択する："

#: ../2.2.6_mpu6050_module.rst:78
msgid "**Acceleration along the X axis = (16384 / 65536 \\* 4) g**  **=1g**"
msgstr "**X軸=（16384 / 65536 \\* 4）g による加速度 = 1g**"

#: ../2.2.6_mpu6050_module.rst:80
msgid "**3-axis Gyroscope**"
msgstr "**3軸ジャイロスコープ**"

#: ../2.2.6_mpu6050_module.rst:82
msgid ""
"Gyroscopes work on the principle of Coriolis acceleration. Imagine that "
"there is a fork like structure, that is in constant back and forth "
"motion. It is held in place using piezo electric crystals. Whenever, you "
"try to tilt this arrangement, the crystals experience a force in the "
"direction of inclination. This is caused as a result of the inertia of "
"the moving fork. The crystals thus produce a current in consensus with "
"the piezo electric effect, and this current is amplified."
msgstr "ジャイロスコープはコリオリ加速の原理で動作する。フォークのような構造があり、常に前後に動いていると想像してください。圧電結晶を使用して所定の位置に保持される。この配置を傾けようとするたびに、結晶は傾斜の方向に力を受ける。これは、可動フォークの慣性の結果によって引き起こされる。したがって、結晶は圧電効果と一致して電流を生成し、この電流は増幅される。"

#: ../2.2.6_mpu6050_module.rst:94
msgid ""
"The Gyroscope also has four kinds of measuring ranges: +/- 250, +/- 500, "
"+/- 1000, +/- 2000. The calculation method and Acceleration are basically"
" consistent."
msgstr "また、ジャイロスコープには、+ /-250、+ /-500、+ /-1000、+/- 2000.計算方法と加速は基本的に一貫している。"

#: ../2.2.6_mpu6050_module.rst:98
msgid ""
"The formula for converting the reading into angular velocity is as "
"follows:"
msgstr "読み取り値を角速度に変換する式は次の通りである："

#: ../2.2.6_mpu6050_module.rst:101
msgid ""
"Angular velocity = (Gyroscope axis raw data / 65536 \\* full scale "
"Gyroscope range) °/s"
msgstr "角速度=（ジャイロスコープの軸生データ/ 65536 \\*フルスケールジャイロスコープの範囲）°/ s"

#: ../2.2.6_mpu6050_module.rst:104
msgid ""
"The X axis, for example, the Accelerometer X axis raw data is 16384 and "
"ranges + / - 250°/ s:"
msgstr "X軸、たとえば、加速度計のX軸の生データは16384で、範囲は+ /-250°/ sである："

#: ../2.2.6_mpu6050_module.rst:107
msgid ""
"**Angular velocity along the X axis = (16384 / 65536 \\* 500)°/s** "
"**=125°/s**"
msgstr "**X軸による角速度 = (16384 / 65536 \\* 500)°/s** **=125°/s**"

#: ../2.2.6_mpu6050_module.rst:110
msgid "Schematic Diagram"
msgstr "回路図"

#: ../2.2.6_mpu6050_module.rst:112
msgid ""
"MPU6050 communicates with the microcontroller through the I2C bus "
"interface. The SDA1 and SCL1 need to be connected to the corresponding "
"pin."
msgstr "MPU6050はI2Cバスインターフェイスを介してマイクロコントローラーと通信する。SDA1とSCL1を対応するピンに接続する必要がある。"

#: ../2.2.6_mpu6050_module.rst:122
msgid "Experimental Procedures"
msgstr "実験手順"

#: ../2.2.6_mpu6050_module.rst:124
msgid "**Step 1:** Build the circuit."
msgstr "**ステップ1：** 回路を作る。"

#: ../2.2.6_mpu6050_module.rst:131
msgid "**Step 2**: Setup I2C (see Appendix. If you have set I2C, skip this step.)"
msgstr "**ステップ2：** I2C設定（付録を参照してください。I2Cを設定している場合は、この手順をスキップしてください。）"

#: ../2.2.6_mpu6050_module.rst:135
msgid "For C Language Users"
msgstr "C言語ユーザー向け"

#: ../2.2.6_mpu6050_module.rst:137 ../2.2.6_mpu6050_module.rst:355
msgid "**Step 3:** Go to the folder of the code."
msgstr "**ステップ3：** コードのフォルダーに入る。"

#: ../2.2.6_mpu6050_module.rst:147
msgid "**Step 4:** Compile the code."
msgstr "**ステップ4：** コードをコンパイルする。"

#: ../2.2.6_mpu6050_module.rst:157
msgid "**Step 5:** Run the executable file."
msgstr "**ステップ5：** EXEファイルを実行する。"

#: ../2.2.6_mpu6050_module.rst:167
msgid ""
"With the code run, deflection angle of x axis, y axis and the "
"acceleration, angular velocity on each axis read by MPU6050 will be "
"printed on the screen after being calculating."
msgstr "コードを実行すると、MPU6050によって読み取られたx軸、y軸の転向角、加速度、各軸の角速度が計算後に画面に入力される。"

#: ../2.2.6_mpu6050_module.rst:173
msgid ""
"If it does not work after running, please refer to :ref:`C code is not "
"working?`"
msgstr "実行後に機能しない場合は、:ref:`C code is not working?` を参照してください。"

#: ../2.2.6_mpu6050_module.rst:175 ../2.2.6_mpu6050_module.rst:379
msgid "**Code**"
msgstr "**コード**"

#: ../2.2.6_mpu6050_module.rst:269 ../2.2.6_mpu6050_module.rst:461
msgid "**Code Explanation**"
msgstr "**コードの説明**"

#: ../2.2.6_mpu6050_module.rst:284 ../2.2.6_mpu6050_module.rst:478
msgid "Read sensor data sent from MPU6050."
msgstr "MPU6050から送信されたセンサーデータを読み取る。"

#: ../2.2.6_mpu6050_module.rst:295
msgid "We get the deflection angle on the Y-axis."
msgstr "Y軸の転向角を取得する。"

#: ../2.2.6_mpu6050_module.rst:306
msgid "Calculate the deflection angle of the X-axis."
msgstr "x軸の転向角を計算する。"

#: ../2.2.6_mpu6050_module.rst:323 ../2.2.6_mpu6050_module.rst:507
msgid ""
"Read the values of the x axis, y axis and z axis on the gyroscope sensor,"
" convert the metadata to angular velocity values, and then print them."
msgstr "ジャイロセンサーのx軸、y軸、z軸の値を読み取り、メタデータを角速度値に変換してから出力する。"

#: ../2.2.6_mpu6050_module.rst:341
msgid ""
"Read the values of the x axis, y axis and z axis on the acceleration "
"sensor, convert the metadata to accelerated speed values (gravity unit), "
"and then print them."
msgstr "加速度センサーのx軸、y軸、z軸の値を読み取り、メタデータを加速速度値（重力単位）に変換してから出力する。"

#: ../2.2.6_mpu6050_module.rst:350 ../2.2.6_mpu6050_module.rst:533
msgid "Print the deflection angles of the x-axis and y-axis."
msgstr "x軸とy軸の転向角をプリントする。"

#: ../2.2.6_mpu6050_module.rst:353
msgid "For Python Language Users"
msgstr "Python言語ユーザー向け"

#: ../2.2.6_mpu6050_module.rst:365
msgid "**Step 4:** Run the executable file."
msgstr "**ステップ4：** EXEファイルを実行する。"

#: ../2.2.6_mpu6050_module.rst:375
msgid ""
"With the code run, the angle of deflection of the x-axis and y-axis and "
"the acceleration, angular velocity on each axis read by MPU6050 will be "
"printed on the screen after being calculating."
msgstr "コードを実行し、x軸とy軸の転向角、加速度とMPU6050によって読み取られた各軸の角速度は、計算後に画面に入力される。"

#: ../2.2.6_mpu6050_module.rst:384
 
msgid ""
"You can **Modify/Reset/Copy/Run/Stop** the code below. But before that, "
"you need to go to  source code path like ``davinci-kit-for-raspberry-"
"pi/python``."
msgstr ""
"以下のコードを **変更/リセット/コピー/実行/停止** できます。 ただし、その前に、 ``davinci-kit-for-raspberry-pi/python`` のようなソースコードパスに移動する必要があります。"

#: ../2.2.6_mpu6050_module.rst:487
msgid "Calculate the deflection angle of the y-axis."
msgstr "y軸の転向角を計算する。"

#: ../2.2.6_mpu6050_module.rst:495
msgid "Calculate the deflection angle of the x-axis."
msgstr "x軸の転向角を計算する。"

#: ../2.2.6_mpu6050_module.rst:524
msgid ""
"Read the values of the x axis, y axis and z axis on the acceleration "
"sensor, convert the elements to accelerated speed value (gravity unit), "
"and print them."
msgstr "ジャイロセンサーのx軸、y軸、z軸の値を読み取り、メタデータを角速度値に変換してから出力する。"

#: ../2.2.6_mpu6050_module.rst:536
msgid "Phenomenon Picture"
msgstr "現象画像"

#~ msgid ""
#~ "If it does not work after running,"
#~ " please refer to :ref:`C code is "
#~ "not working?`."
#~ msgstr ""

