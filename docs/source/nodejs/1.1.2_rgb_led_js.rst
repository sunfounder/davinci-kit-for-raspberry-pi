.. note::

    Bonjour et bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi & Arduino & ESP32 sur Facebook ! Plongez dans l'univers du Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez vos probl√®mes apr√®s-vente et surmontez vos d√©fis techniques gr√¢ce √† l‚Äôaide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Obtenez un acc√®s anticip√© aux annonces de nouveaux produits et √† des avant-premi√®res.
    - **R√©ductions sp√©ciales** : Profitez de remises exclusives sur nos derniers produits.
    - **Promotions festives et cadeaux** : Participez √† des concours et √† des promotions pendant les f√™tes.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

1.1.2 LED RGB
================

Introduction
--------------

Dans ce projet, nous allons contr√¥ler une LED RGB pour afficher diff√©rentes couleurs.

Composants
-------------

.. image:: img/list_rgb_led.png
    :align: center

Sch√©ma de c√¢blage
--------------------

Apr√®s avoir connect√© les broches R, G et B √† une r√©sistance de limitation de 
courant, reliez-les respectivement aux GPIO17, GPIO18 et GPIO27. La broche la 
plus longue (GND) de la LED se connecte au GND du Raspberry Pi. Lorsque les 
trois broches re√ßoivent diff√©rentes valeurs PWM, la LED RGB affichera diverses couleurs.

.. image:: img/rgb_led_schematic.png

Proc√©dures exp√©rimentales
----------------------------

**√âtape 1 :** Construire le circuit.

.. image:: img/image61.png
   :width: 6.59097in
   :height: 4.29722in

**√âtape 2 :** Acc√©der au dossier du code.

.. raw:: html

    <run></run>

.. code-block::

    cd ~/davinci-kit-for-raspberry-pi/nodejs/

**√âtape 3 :** Ex√©cuter le code.

.. raw:: html

    <run></run>

.. code-block::

    sudo node rgb_led.js

Apr√®s l'ex√©cution du code, vous verrez la LED RGB afficher successivement les couleurs 
rouge, vert, bleu, jaune, rose et cyan.

**Code**

.. code-block:: js

    const Gpio = require('pigpio').Gpio;
    const ledred = new Gpio(17, { mode: Gpio.OUTPUT });
    const ledgreen = new Gpio(18, { mode: Gpio.OUTPUT });
    const ledblue = new Gpio(27, { mode: Gpio.OUTPUT });

    function colorset(r, g, b) {
        ledred.pwmWrite(r);
        ledgreen.pwmWrite(g);
        ledblue.pwmWrite(b);
    }

    var color_index = -1;

    setInterval(() => {
    color_index += 1;
    switch (color_index) {
        case 0:
            colorset(0xff, 0x00, 0xFF);
            break;
        case 1:
            colorset(0x00, 0xff, 0x00);
            break;
        case 2:
            colorset(0x00, 0x00, 0xff);
            break;
        case 3:
            colorset(0xff, 0xff, 0x00);
            break;
        case 4:
            colorset(0xff, 0x00, 0xff);
            break;
        case 5:
            colorset(0xc0, 0xff, 0x3e);
            break;
        default:
            color_index=-1;
        }
    }, 500);

**Explication du code**

.. code-block:: js

    const ledred = new Gpio(17, {mode: Gpio.OUTPUT});
    const ledgreen = new Gpio(18, {mode: Gpio.OUTPUT});
    const ledblue = new Gpio(27, {mode: Gpio.OUTPUT});

Initialiser les broches 17, 18 et 27 en mode sortie, et les assigner respectivement aux constantes ``ledred``, ``ledgreen`` et ``ledblue``.

.. code-block:: js

    function colorset(r,g,b){
        ledred.pwmWrite(r);
        ledgreen.pwmWrite(g);
        ledblue.pwmWrite(b);
    }

Impl√©menter une fonction ``colorset(r, g, b)`` qui permet d‚Äô√©crire des valeurs de pulsation sur les broches 17, 18 et 27. La biblioth√®que ``Gpio`` encapsule la fonction ``pwmWrite()`` pour transmettre des valeurs de pulsation, qui varient de 0x00 √† 0xff. En utilisant la fonction ``colorset(r, g, b)``, vous pouvez attribuer des valeurs RGB √† la LED pour afficher une vari√©t√© de couleurs.

.. note::
    Pour en savoir plus sur les valeurs RGB, consultez le site suivant : https://www.rapidtables.com/web/color/RGB_Color.html

.. code-block:: js

    var color_index = -1;

    setInterval(() => {
    color_index += 1;
    switch (color_index) {
        case 0:
            colorset(0xff, 0x00, 0xFF);
            break;
        case 1:
            colorset(0x00, 0xff, 0x00);
            break;
        case 2:
            colorset(0x00, 0x00, 0xff);
            break;
        case 3:
            colorset(0xff, 0xff, 0x00);
            break;
        case 4:
            colorset(0xff, 0x00, 0xff);
            break;
        case 5:
            colorset(0xc0, 0xff, 0x3e);
            break;
        default:
            color_index=-1;
        }
    }, 500);

La LED RGB est contr√¥l√©e par ``colorset()`` toutes les 500 ms. Un switch case 
est utilis√© ici pour choisir la couleur √©mise par la LED RGB. √âtant donn√© que ``color_index`` augmente √† chaque cycle, la couleur de la LED RGB change dans 
un ordre s√©quentiel.


Image du r√©sultat
---------------------

.. image:: img/image62.jpeg
