.. note::

    Bonjour et bienvenue dans la communaut√© SunFounder d√©di√©e aux passionn√©s de Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez dans l'univers du Raspberry Pi, d'Arduino et d'ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez vos probl√®mes apr√®s-vente et relevez des d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des conseils et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux nouvelles annonces de produits et aux aper√ßus.
    - **R√©ductions sp√©ciales** : Profitez de remises exclusives sur nos nouveaux produits.
    - **Promotions festives et cadeaux** : Participez √† des tirages au sort et √† des promotions sp√©ciales pour les f√™tes.

    üëâ Pr√™t(e) √† explorer et √† cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

2.1.2 Interrupteur √† glissi√®re
=================================

Introduction
------------

Dans cette le√ßon, nous allons apprendre √† utiliser un interrupteur √† glissi√®re. 
G√©n√©ralement, l'interrupteur √† glissi√®re est soud√© sur un circuit imprim√© (PCB) 
comme interrupteur d'alimentation, mais ici, nous l'ins√©rons dans une breadboard, 
ce qui peut rendre sa fixation moins stable. Nous l'utilisons sur la breadboard 
pour d√©montrer son fonctionnement.

Composants
--------------

.. image:: img/list_2.1.2_slide_switch.png


Principe
----------

**Interrupteur √† glissi√®re**

.. image:: img/image156.jpeg


Un interrupteur √† glissi√®re, comme son nom l'indique, fonctionne en d√©pla√ßant la barre 
de l'interrupteur pour connecter ou interrompre le circuit, permettant ainsi de commuter 
les circuits. Les types couramment utilis√©s sont SPDT, SPTT, DPDT, DPTT, etc. L'interrupteur 
√† glissi√®re est g√©n√©ralement utilis√© dans les circuits basse tension. Il est appr√©ci√© pour 
sa flexibilit√© et sa stabilit√©, et il est largement utilis√© dans les instruments 
√©lectroniques et les jouets √©lectriques.

Comment cela fonctionne : Utilisez la broche centrale comme broche fixe. Lorsque vous 
faites glisser le commutateur vers la gauche, les deux broches de gauche sont connect√©es ; 
lorsque vous le faites glisser vers la droite, les deux broches de droite sont connect√©es. 
Ainsi, il fonctionne comme un interrupteur pour connecter ou d√©connecter les circuits. 
Voir le sch√©ma ci-dessous :

.. image:: img/image304.png


Le symbole de circuit de l'interrupteur √† glissi√®re est illustr√© ci-dessous. 
La broche 2 dans le sch√©ma fait r√©f√©rence √† la broche centrale.

.. image:: img/image159.png


**Condensateur**

Le condensateur est un composant capable de stocker de l'√©nergie sous forme de 
charge √©lectrique ou de cr√©er une diff√©rence de potentiel (tension statique) 
entre ses plaques, un peu comme une petite batterie rechargeable.

Unit√©s standard de capacit√©

Microfarad (ŒºF) 1ŒºF = 1/1 000 000 = 0,000001 = :math:`10^{- 6}` F

Nanofarad (nF) 1nF = 1/1 000 000 000 = 0,000000001 = :math:`10^{- 9}` F

Picofarad (pF) 1pF = 1/1 000 000 000 000 = 0,000000000001 = :math:`10^{- 12}` F

.. note::
    Ici, nous utilisons un **condensateur 104 (10 x 10\ 4\ pF)**. Comme pour 
    les r√©sistances, les chiffres sur les condensateurs permettent de lire les 
    valeurs une fois assembl√©s sur le circuit. Les deux premiers chiffres repr√©sentent 
    la valeur, et le dernier chiffre signifie le multiplicateur. Ainsi, 104 repr√©sente 
    une puissance de 10 x 10 exposant 4 (en pF), soit 100 nF.

Sch√©ma de c√¢blage
---------------------

Connectez la broche centrale de l'interrupteur √† glissi√®re au GPIO17, et deux LEDs 
aux broches GPIO22 et GPIO27 respectivement. Ainsi, lorsque vous faites glisser 
l'interrupteur, vous verrez les deux LEDs s'allumer alternativement.

.. image:: img/image305.png


.. image:: img/image306.png


Proc√©dures exp√©rimentales
------------------------------

**√âtape 1 :** Montez le circuit.

.. image:: img/image161.png
    :width: 800

**√âtape 2** : Acc√©dez au dossier du code.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/davinci-kit-for-raspberry-pi/c/2.1.2

**√âtape 3** : Compilez le code.

.. raw:: html

   <run></run>

.. code-block::

    gcc 2.1.2_Slider.c -lwiringPi 

**√âtape 4** : Ex√©cutez le fichier ex√©cutable ci-dessus.

.. raw:: html

   <run></run>

.. code-block::

    sudo ./a.out

Pendant l'ex√©cution du code, faites glisser l'interrupteur vers la gauche, 
la LED jaune s'allume ; vers la droite, c'est la LED rouge qui s'allume.

.. note::

    Si cela ne fonctionne pas apr√®s l'ex√©cution, ou s'il y a un message d'erreur indiquant : \"wiringPi.h: No such file or directory\", veuillez consulter :ref:`C code is not working?`.

**Code**

.. code-block:: c

    #include <wiringPi.h>
    #include <stdio.h>
    #define slidePin        0
    #define led1            3
    #define led2            2

    int main(void)
    {
        // Si l'initialisation de wiringPi √©choue, afficher un message √† l'√©cran
        if(wiringPiSetup() == -1){
            printf("setup wiringPi failed !");
            return 1;
        }
        pinMode(slidePin, INPUT);
        pinMode(led1, OUTPUT);
        pinMode(led2, OUTPUT);
        while(1){
            // interrupteur gliss√© vers la droite, led1 allum√©e
            if(digitalRead(slidePin) == 1){
                digitalWrite(led1, LOW);
                digitalWrite(led2, HIGH);
                printf("LED1 on\n");
                delay(100);
            }
            // interrupteur gliss√© vers la gauche, led2 allum√©e
            if(digitalRead(slidePin) == 0){
                digitalWrite(led2, LOW);
                digitalWrite(led1, HIGH);
                printf(".....LED2 on\n");
                delay(100);
            }
        }
        return 0;
    }

**Explication du code**

.. code-block:: c

    if(digitalRead(slidePin) == 1){
                digitalWrite(led1, LOW);
                digitalWrite(led2, HIGH);
                printf("LED1 on\n");
        }

Lorsque l'interrupteur est pouss√© vers la droite, la broche centrale et celle de 
droite sont connect√©es ; le Raspberry Pi lit un niveau haut √† la broche centrale, 
donc la LED1 s'allume et la LED2 s'√©teint.

.. code-block:: c

    if(digitalRead(slidePin) == 0){
                digitalWrite(led2, LOW);
                digitalWrite(led1, HIGH);
                printf(".....LED2 on\n");
            }

Lorsque l'interrupteur est pouss√© vers la gauche, la broche centrale et celle de 
gauche sont connect√©es ; le Raspberry Pi lit un niveau bas, donc la LED2 s'allume 
et la LED1 s'√©teint.
