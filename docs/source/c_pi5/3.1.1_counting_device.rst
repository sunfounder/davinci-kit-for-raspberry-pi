.. note::

    Bonjour et bienvenue dans la communautÃ© des passionnÃ©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez dans l'univers de Raspberry Pi, Arduino et ESP32 avec d'autres passionnÃ©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : RÃ©solvez les problÃ¨mes aprÃ¨s-vente et relevez vos dÃ©fis techniques grÃ¢ce Ã  l'aide de notre communautÃ© et de notre Ã©quipe.
    - **Apprenez et Partagez** : Ã‰changez des astuces et des tutoriels pour perfectionner vos compÃ©tences.
    - **AperÃ§us exclusifs** : BÃ©nÃ©ficiez d'un accÃ¨s anticipÃ© aux nouvelles annonces de produits et aux avant-premiÃ¨res.
    - **RÃ©ductions spÃ©ciales** : Profitez de rÃ©ductions exclusives sur nos nouveaux produits.
    - **Promotions festives et concours** : Participez Ã  des concours et Ã  des promotions lors des fÃªtes.

    ğŸ‘‰ PrÃªt Ã  explorer et Ã  crÃ©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous dÃ¨s aujourd'hui !

3.1.1 Dispositif de comptage
===============================

Introduction
------------

Nous allons crÃ©er un systÃ¨me de comptage avec affichage numÃ©rique, composÃ© d'un 
capteur PIR et d'un afficheur Ã  4 chiffres. Lorsque le capteur PIR dÃ©tecte une 
personne passant Ã  proximitÃ©, le nombre affichÃ© sur l'Ã©cran Ã  4 chiffres s'incrÃ©mente 
de 1. Ce dispositif peut Ãªtre utilisÃ© pour compter le nombre de personnes traversant 
un passage.

Composants
------------

.. image:: img/list_Counting_Device1.png
    :align: center

.. image:: img/list_Counting_Device2.png
    :align: center


SchÃ©ma de cÃ¢blage
--------------------

============ ======== ======== ===
T-Board Name physical wiringPi BCM
GPIO17       Pin 11   0        17
GPIO27       Pin 13   2        27
GPIO22       Pin 15   3        22
SPIMOSI      Pin 19   12       10
GPIO18       Pin 12   1        18
GPIO23       Pin 16   4        23
GPIO24       Pin 18   5        24
GPIO26       Pin 37   25       26
============ ======== ======== ===

.. image:: img/Schematic_three_one1.png
   :align: center


ProcÃ©dures expÃ©rimentales
----------------------------

**Ã‰tape 1 :** Construisez le circuit.

.. image:: img/image235.png
   :width: 800

**Ã‰tape 2 :** AccÃ©dez au dossier du code.

.. raw:: html

   <run></run>

.. code-block:: 

    cd ~/davinci-kit-for-raspberry-pi/c/3.1.1/

**Ã‰tape 3 :** Compilez le code.

.. raw:: html

   <run></run>

.. code-block:: 

    gcc 3.1.1_CountingDevice.c -lwiringPi

**Ã‰tape 4 :** ExÃ©cutez le fichier exÃ©cutable.

.. raw:: html

    <run></run>
 
.. code-block:: 
   
    sudo ./a.out

AprÃ¨s l'exÃ©cution du code, lorsque le capteur PIR dÃ©tecte une personne passant 
Ã  proximitÃ©, le nombre affichÃ© sur l'Ã©cran Ã  4 chiffres s'incrÃ©mente de 1.

Il y a deux potentiomÃ¨tres sur le module PIR : l'un pour ajuster la sensibilitÃ© 
et l'autre pour ajuster la distance de dÃ©tection. Pour que le module PIR fonctionne 
de maniÃ¨re optimale, tournez les deux potentiomÃ¨tres complÃ¨tement dans le sens antihoraire.

.. note::

    Si cela ne fonctionne pas aprÃ¨s l'exÃ©cution, ou s'il y a un message d'erreur indiquant : \"wiringPi.h: Aucun fichier ou rÃ©pertoire de ce type Â», veuillez vous rÃ©fÃ©rer Ã  :ref:`C code is not working?`.
    
**Explication du Code**

.. code-block:: c

    voidÂ display()
    {
    Â Â Â Â clearDisplay();
    Â Â Â Â pickDigit(0);
    Â Â Â Â hc595_shift(number[counterÂ %Â 10]);

    Â Â Â Â clearDisplay();
    Â Â Â Â pickDigit(1);
    Â Â Â Â hc595_shift(number[counterÂ %Â 100Â /Â 10]);

    Â Â Â Â clearDisplay();
    Â Â Â Â pickDigit(2);
    Â Â Â Â hc595_shift(number[counterÂ %Â 1000Â /Â 100]);
    Â 
    Â Â Â Â clearDisplay();
    Â Â Â Â pickDigit(3);
    Â Â Â Â hc595_shift(number[counterÂ %Â 10000Â /Â 1000]);
    }

Cette fonction active le quatriÃ¨me afficheur Ã  segments et Ã©crit le chiffre des unitÃ©s. 
Ensuite, elle active le troisiÃ¨me afficheur et Ã©crit le chiffre des dizaines ; aprÃ¨s cela, 
elle active respectivement le deuxiÃ¨me et le premier afficheur pour Ã©crire les chiffres des 
centaines et des milliers. GrÃ¢ce Ã  la vitesse de rafraÃ®chissement Ã©levÃ©e, nous voyons un 
affichage complet Ã  quatre chiffres.

.. code-block:: c

    voidÂ loop(){
    Â Â Â Â intÂ currentStateÂ =0;
    Â Â Â Â intÂ lastState=0;
    Â Â Â Â while(1){
    Â Â Â Â Â Â Â Â display();
    Â Â Â Â Â Â Â Â currentState=digitalRead(sensorPin);
    Â Â Â Â Â Â Â Â if((currentState==0)&&(lastState==1)){
    Â Â Â Â Â Â Â Â Â Â Â Â counterÂ +=1;
    Â Â Â Â Â Â Â Â }
    Â Â Â Â Â Â Â Â lastState=currentState;
    Â Â Â Â }
    }

Cette fonction principale affiche le nombre sur l'Ã©cran Ã  4 chiffres et lit la valeur 
du capteur PIR. Lorsque le PIR dÃ©tecte une personne, le nombre affichÃ© s'incrÃ©mente de 1.
