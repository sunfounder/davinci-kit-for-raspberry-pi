.. note::

    Bonjour et bienvenue dans la communaut√© des passionn√©s de Raspberry Pi, Arduino et ESP32 de SunFounder sur Facebook ! Plongez plus profond√©ment dans l‚Äôunivers du Raspberry Pi, de l‚ÄôArduino et de l‚ÄôESP32 avec d‚Äôautres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes post-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des conseils et des tutoriels pour d√©velopper vos comp√©tences.
    - **Aper√ßus exclusifs** : B√©n√©ficiez d'un acc√®s anticip√© aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions sp√©ciales** : Profitez de remises exclusives sur nos derniers produits.
    - **Promotions festives et concours** : Participez √† des concours et √† des promotions sp√©ciales pendant les f√™tes.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

1.3.4 Relais
===============

Introduction
---------------

Dans cette le√ßon, nous allons apprendre √† utiliser un relais. C'est l'un des 
composants les plus couramment utilis√©s dans les syst√®mes de contr√¥le automatique. 
Lorsque la tension, le courant, la temp√©rature ou la pression atteignent, d√©passent 
ou sont inf√©rieurs √† la valeur pr√©d√©termin√©e, le relais connecte ou interrompt le circuit 
pour contr√¥ler et prot√©ger l'√©quipement.

Composants
-------------

.. image:: img/list_1.3.4.png

Principe
-----------

**Diode**

Une diode est un composant √©lectronique √† deux bornes permettant le passage du courant 
dans une seule direction. Elle offre une faible r√©sistance dans le sens du courant et 
une haute r√©sistance dans le sens oppos√©. Les diodes sont principalement utilis√©es pour 
prot√©ger les composants contre les dommages, notamment en raison de la force √©lectromotrice 
dans les circuits polaris√©s.

.. image:: img/image344.png

Les deux bornes d'une diode sont polaris√©es : l'extr√©mit√© positive est appel√©e l‚Äôanode et 
l'extr√©mit√© n√©gative est appel√©e la cathode. La cathode est g√©n√©ralement identifi√©e par une 
bande argent√©e ou color√©e. Le courant dans une diode circule de l'anode vers la cathode, et 
son comportement est similaire √† celui d'un clapet anti-retour. Une caract√©ristique importante 
de la diode est sa courbe courant-tension non lin√©aire. Si une tension plus √©lev√©e est 
appliqu√©e √† l'anode, le courant circule de l'anode vers la cathode (polarisation directe). 
Cependant, si une tension plus √©lev√©e est appliqu√©e √† la cathode, la diode ne conduit pas 
(polarisation inverse).

**Relais**

Un relais est un dispositif permettant de cr√©er une connexion entre deux ou plusieurs 
points en r√©ponse au signal d'entr√©e appliqu√©. En d'autres termes, les relais assurent 
l'isolation entre le contr√¥leur et l‚Äôappareil, car les dispositifs peuvent fonctionner 
en courant alternatif (AC) ou en courant continu (DC). Cependant, ils re√ßoivent des 
signaux d‚Äôun microcontr√¥leur qui fonctionne en courant continu, n√©cessitant ainsi un 
relais pour √©tablir la connexion. Les relais sont extr√™mement utiles lorsque vous devez 
contr√¥ler un courant ou une tension √©lev√©s avec un faible signal √©lectrique.

Un relais se compose de 5 √©l√©ments principaux :

- **√âlectroaimant** : constitu√© d'un noyau de fer entour√© de fils. Lorsqu'il est travers√© 
par un courant, il devient magn√©tique.


- **Armature** : bande magn√©tique mobile qui r√©agit au champ magn√©tique cr√©√© par 
l‚Äô√©lectroaimant pour activer ou d√©sactiver les points normalement ouverts (N/O) ou 
normalement ferm√©s (N/C).

- **Ressort** : lorsqu'aucun courant ne circule dans la bobine, le ressort √©loigne 
l'armature, ouvrant ainsi le circuit.

- Ensemble de **contacts √©lectriques** : il existe deux types de points de contact :

  - **Normalement ouvert (N/O)** : connect√© lorsque le relais est activ√©, et d√©connect√© 
  lorsqu'il est inactif.

  - **Normalement ferm√© (N/C)** : d√©connect√© lorsque le relais est activ√©, et connect√© 
  lorsqu'il est inactif.

- **Bo√Ætier moul√©** : protection en plastique couvrant le relais.

**Fonctionnement d‚Äôun relais**

Le principe de fonctionnement d'un relais est simple. Lorsque l'alimentation est 
fournie au relais, le courant commence √† circuler dans la bobine de commande, ce 
qui active l‚Äô√©lectroaimant. L‚Äôarmature est alors attir√©e vers la bobine, rapprochant 
les contacts mobiles des contacts normalement ouverts, fermant ainsi le circuit de charge. 
Lors de la coupure de l‚Äôalimentation, les contacts mobiles se d√©tachent et retournent √† 
leur position initiale gr√¢ce √† la force du ressort, ouvrant le circuit. Ainsi, le relais 
permet de contr√¥ler l'√©tat d'un circuit de charge en commutant les contacts.

.. image:: img/image142.jpeg


Sch√©ma de c√¢blage
---------------------

.. image:: img/image345.png


Proc√©dures exp√©rimentales
---------------------------

**√âtape 1 :** Construisez le circuit.

.. image:: img/image144.png
    :width: 800


**√âtape 2 :** Ouvrez le fichier de code.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/davinci-kit-for-raspberry-pi/c/1.3.4

**√âtape 3 :** Compilez le code.

.. raw:: html

   <run></run>

.. code-block::

    gcc 1.3.4_Relay.c -lwiringPi


**√âtape 4 :** Ex√©cutez le fichier ex√©cutable.

.. raw:: html

   <run></run>

.. code-block::

    sudo ./a.out

Une fois le code ex√©cut√©, la LED s'allumera. De plus, vous entendrez un bruit 
de tic-tac caus√© par l'ouverture du contact normalement ferm√© et la fermeture 
du contact normalement ouvert.

.. note::

    Si cela ne fonctionne pas apr√®s l'ex√©cution ou s'il y a un message d'erreur : \"wiringPi.h: No such file or directory\", veuillez consulter :ref:`C code is not working?`.


**Code**

.. code-block:: c

    #include <wiringPi.h>
    #include <stdio.h>
    #define RelayPin 0

    int main(void){
        if(wiringPiSetup() == -1){ //Si l'initialisation de wiringPi √©choue, affichez un message √† l'√©cran
            printf("setup wiringPi failed !");
            return 1;
        }
        pinMode(RelayPin, OUTPUT);   //d√©finir GPIO17(GPIO0) comme sortie
        while(1){
            // Tic
            printf("Relay Open......\n");
            delay(100);
            digitalWrite(RelayPin, LOW);
            delay(1000);
            // Tac
            printf("......Relay Close\n");
            delay(100);
            digitalWrite(RelayPin, HIGH);
            delay(1000);
        }

        return 0;
    }

**Explication du code**

.. code-block:: c

    digitalWrite(RelayPin, LOW);

D√©finit le port d'E/S √† un niveau bas (0V), de sorte que le transistor n'est pas 
aliment√© et la bobine n'est pas activ√©e. Il n'y a donc pas de force √©lectromagn√©tique, 
le relais s'ouvre et la LED reste √©teinte.

.. code-block:: c

    digitalWrite(RelayPin, HIGH);

D√©finit le port d'E/S √† un niveau haut (5V) pour activer le transistor. La bobine du 
relais est aliment√©e, g√©n√©rant ainsi une force √©lectromagn√©tique, et le relais se ferme, 
allumant la LED.

