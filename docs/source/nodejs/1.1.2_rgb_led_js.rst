.. note::

    Hallo, willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Community auf Facebook! Tauchen Sie tiefer in Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten ein.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie nach dem Kauf auftretende Probleme und technische Herausforderungen mit Hilfe unserer Community und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Tutorials aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und Vorschauen.
    - **Spezielle Rabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und festlichen Aktionen teil.

    üëâ Bereit, mit uns zu entdecken und zu kreieren? Klicken Sie auf [|link_sf_facebook|] und treten Sie noch heute bei!

1.1.2 RGB-LED
================

Einf√ºhrung
--------------

In diesem Projekt werden wir eine RGB-LED steuern, um verschiedene Farben zu blinken.

Komponenten
--------------

.. image:: img/list_rgb_led.png
    :align: center

Schaltplan
-----------------------

Nach dem Verbinden der Pins von R, G und B mit einem Strombegrenzungswiderstand,
schlie√üen Sie sie an GPIO17, GPIO18 und GPIO27 an. Der l√§ngste
Pin (GND) der LED wird mit dem GND des Raspberry Pi verbunden. Wenn die
drei Pins unterschiedliche PWM-Werte erhalten, zeigt die RGB-LED
verschiedene Farben an.

.. image:: img/rgb_led_schematic.png

Experimentelle Vorgehensweise
-----------------------------------

**Schritt 1:** Bauen Sie die Schaltung auf.

.. image:: img/image61.png
   :width: 6.59097in
   :height: 4.29722in

**Schritt 2:** Gehen Sie zum Ordner des Codes.

.. raw:: html

    <run></run>

.. code-block::

    cd ~/davinci-kit-for-raspberry-pi/nodejs/

**Schritt 3:** F√ºhren Sie den Code aus.

.. raw:: html

    <run></run>

.. code-block::

    sudo node rgb_led.js

Nachdem der Code ausgef√ºhrt wird, sehen Sie, dass die RGB-LED in Rot, Gr√ºn, Blau, Gelb, Pink und Cyan blinkt.   

**Code**

.. code-block:: js

    const Gpio = require('pigpio').Gpio;
    const ledred = new Gpio(17, { mode: Gpio.OUTPUT });
    const ledgreen = new Gpio(18, { mode: Gpio.OUTPUT });
    const ledblue = new Gpio(27, { mode: Gpio.OUTPUT });

    function colorset(r, g, b) {
        ledred.pwmWrite(r);
        ledgreen.pwmWrite(g);
        ledblue.pwmWrite(b);
    }

    var color_index = -1;

    setInterval(() => {
    color_index += 1;
    switch (color_index) {
        case 0:
            colorset(0xff, 0x00, 0xFF);
            break;
        case 1:
            colorset(0x00, 0xff, 0x00);
            break;
        case 2:
            colorset(0x00, 0x00, 0xff);
            break;
        case 3:
            colorset(0xff, 0xff, 0x00);
            break;
        case 4:
            colorset(0xff, 0x00, 0xff);
            break;
        case 5:
            colorset(0xc0, 0xff, 0x3e);
            break;
        default:
            color_index=-1;
        }
    }, 500);  

**Code Erkl√§rung**

.. code-block:: js

    const ledred = new Gpio(17,{mode: Gpio.OUTPUT});
    const ledgreen = new Gpio(18,{mode: Gpio.OUTPUT});
    const ledblue = new Gpio(27,{mode: Gpio.OUTPUT});

Initialisieren Sie die Pins 17, 18 und 27 auf den Ausgabemodus und weisen Sie sie den Konstanten ``ledred``, ``ledgreen`` und ``ledblue`` zu.

.. code-block:: js

    function colorset(r,g,b){
        ledred.pwmWrite(r);
        ledgreen.pwmWrite(g);
        ledblue.pwmWrite(b);
    }

Implementieren Sie eine ``colorset(r,g,b)``-Funktion, die verwendet wird, um Pulswerte an die Pins 17, 18, 27 zu schreiben. Die Gpio-Bibliothek kapselt die Funktion ``pwmWrite()`` ein, um Pulswerte an die Pins zu schreiben, wobei die Werte von 0x00 bis 0xff reichen. Sie k√∂nnen dann RGB-Werte √ºber die ``colorset(r,g,b)``-Funktion an die RGB-LED schreiben, damit diese verschiedene Farben anzeigen kann. 

.. note::
    Bei Fragen zu RGB besuchen Sie bitte die Website: https://www.rapidtables.com/web/color/RGB_Color.html

.. code-block:: js

    var color_index = -1;

    setInterval(() => {
    color_index += 1;
    switch (color_index) {
        case 0:
            colorset(0xff, 0x00, 0xFF);
            break;
        case 1:
            colorset(0x00, 0xff, 0x00);
            break;
        case 2:
            colorset(0x00, 0x00, 0xff);
            break;
        case 3:
            colorset(0xff, 0xff, 0x00);
            break;
        case 4:
            colorset(0xff, 0x00, 0xff);
            break;
        case 5:
            colorset(0xc0, 0xff, 0x3e);
            break;
        default:
            color_index=-1;
        }
    }, 500);  

Die RGB-LED wird durch ``colorset()`` gesteuert, das alle 500 ms ausgef√ºhrt wird.
Ein Switch-Case wird verwendet, um die Farbe auszuw√§hlen, die von den RGB-LEDs ausgestrahlt wird.
Da ``color_index`` bei jedem Zyklus um eins ge√§ndert wird, √§ndert sich die Farbe dieser einen RGB-LED nacheinander.


Ph√§nomenbild
------------------------

.. image:: img/image62.jpeg
