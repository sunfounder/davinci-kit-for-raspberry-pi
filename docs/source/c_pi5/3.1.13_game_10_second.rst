.. note::

    Hello, welcome to the SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasts Community on Facebook! Dive deeper into Raspberry Pi, Arduino, and ESP32 with fellow enthusiasts.

    **Why Join?**

    - **Expert Support**: Solve post-sale issues and technical challenges with help from our community and team.
    - **Learn & Share**: Exchange tips and tutorials to enhance your skills.
    - **Exclusive Previews**: Get early access to new product announcements and sneak peeks.
    - **Special Discounts**: Enjoy exclusive discounts on our newest products.
    - **Festive Promotions and Giveaways**: Take part in giveaways and holiday promotions.

    ðŸ‘‰ Ready to explore and create with us? Click [|link_sf_facebook|] and join today!

3.1.13 GAMEâ€“ 10 Second
========================

Introduction
-------------------

Next, follow me to make a game device to challenge your concentration.
Tie the tilt switch to a stick to make a magic wand. Shake the wand, the
4-digit segment display will start counting, shake again will let it
stop counting. If you succeed in keeping the displayed count at
**10.00**, then you win. You can play the game with your friends to see
who is the time wizard.

Components
----------------

.. image:: img/list_GAME_10_Second.png
    :align: center

Schematic Diagram
------------------------

============ ======== ======== ===
T-Board Name physical wiringPi BCM
GPIO17       Pin 11   0        17
GPIO27       Pin 13   2        27
GPIO22       Pin 15   3        22
SPIMOSI      Pin 19   12       10
GPIO18       Pin 12   1        18
GPIO23       Pin 16   4        23
GPIO24       Pin 18   5        24
GPIO26       Pin 37   25       26
============ ======== ======== ===

.. image:: img/Schematic_three_one13.png
   :align: center

Experimental Procedures
---------------------------------

**Step 1**: Build the circuit.

.. image:: img/image277.png
   :alt: 10 second_bb
   :width: 800

**Step 2**: Go to the folder of the code.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/davinci-kit-for-raspberry-pi/c/3.1.13/

**Step 3**: Compile the code.

.. raw:: html

   <run></run>

.. code-block::

    gcc 3.1.13_GAME_10Second.c -lwiringPi

**Step 4**: Run the executable file.

.. raw:: html

   <run></run>

.. code-block::

    sudo ./a.out

Shake the wand, the 4-digit segment display will start counting, shake
again will let it stop counting. If you succeed in keeping the displayed
count at **10.00**, then you win. Shake it one more time to start the
next round of the game.

.. note::

    If it does not work after running, or there is an error prompt: \"wiringPi.h: No such file or directory\", please refer to :ref:`C code is not working?`.


**Code Explanation**

.. code-block:: c

    voidÂ stateChange(){
    Â Â Â Â ifÂ (gameStateÂ ==Â 0){
    Â Â Â Â Â Â Â Â counterÂ =Â 0;
    Â Â Â Â Â Â Â Â delay(1000);
    Â Â Â Â Â Â Â Â ualarm(10000,10000);Â 
    Â Â Â Â }else{
    Â Â Â Â Â Â Â Â alarm(0);
    Â Â Â Â Â Â Â Â delay(1000);
    Â Â Â Â }
    Â Â Â Â gameStateÂ =Â (gameStateÂ +Â 1)%2;
    }

The game is divided into two modes:

gameState=0 is the \"start\" mode, in which the time is timed and
displayed on the segment display, and the tilting switch is shaken to
enter the \"show\" mode.

GameState =1 is the \"show\" mode, which stops the timing and displays the
time on the segment display. Shaking the tilt switch again will reset
the timer and restart the game.

.. code-block:: c

    voidÂ loop(){
    Â Â Â Â intÂ currentStateÂ =0;
    Â Â Â Â intÂ lastState=0;
    Â Â Â Â while(1){
    Â Â Â Â Â Â Â Â display();
    Â Â Â Â Â Â Â Â currentState=digitalRead(sensorPin);
    Â Â Â Â Â Â Â Â if((currentState==0)&&(lastState==1)){
    Â Â Â Â Â Â Â Â Â Â Â Â stateChange();
    Â Â Â Â Â Â Â Â }
    Â Â Â Â Â Â Â Â lastState=currentState;
    Â Â Â Â }
    }

Loop() is the main function. First, the time is displayed on the 4-bit
segment display and the value of the tilt switch is read. If the state
of the tilt switch has changed, stateChange() is called.
