.. note::

    Bonjour et bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi & Arduino & ESP32 sur Facebook ! Plongez dans l'univers du Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez vos probl√®mes apr√®s-vente et surmontez vos d√©fis techniques gr√¢ce √† l‚Äôaide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Obtenez un acc√®s anticip√© aux annonces de nouveaux produits et √† des avant-premi√®res.
    - **R√©ductions sp√©ciales** : Profitez de remises exclusives sur nos derniers produits.
    - **Promotions festives et cadeaux** : Participez √† des concours et √† des promotions pendant les f√™tes.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

1.1.3 Barre de LED
=====================

Introduction
---------------

Dans ce projet, nous allons allumer successivement les lumi√®res sur la barre de LED.

Composants
------------

.. image:: img/list_led_bar.png



Sch√©ma de c√¢blage
---------------------

.. image:: img/schematic_led_bar.png


Proc√©dures exp√©rimentales
-----------------------------

**√âtape 1 :** Construire le circuit.

.. note::
    Faites attention au sens de connexion. Si la polarit√© est invers√©e, les LED ne s‚Äôallumeront pas.

.. image:: img/image66.png


**√âtape 2 :** Acc√©der au dossier du code.

.. raw:: html

    <run></run>

.. code-block::

    cd ~/davinci-kit-for-raspberry-pi/nodejs/

**√âtape 3 :** Ex√©cuter le code.

.. raw:: html

    <run></run>

.. code-block::

    sudo node led_bar_graph.js

Apr√®s l'ex√©cution du code, vous verrez les LED de la barre s'allumer et s'√©teindre √† intervalles r√©guliers.

**Code**

.. code-block:: js

    const Gpio = require('pigpio').Gpio;

    var pins = [17, 18, 27, 22, 23, 24, 25, 2, 3, 8];
    var leds = [];
    for (let i = 0; i < pins.length; i++) {
        leds[i] = new Gpio(pins[i], { mode: Gpio.OUTPUT });
    }

    function oddLedBarGraph() {
        for (let i = 0; i < leds.length; i++) {
            if (i % 2 == 1) {
                leds[i].digitalWrite(1);
            } else {
                leds[i].digitalWrite(0);
            }
        }
    }

    function evenLedBarGraph() {
        for (let i = 0; i < leds.length; i++) {
            if (i % 2 == 0) {
                leds[i].digitalWrite(1);
            } else {
                leds[i].digitalWrite(0);
            }
        };
    }

    var odd_even = 0;

    setInterval(() => {
        odd_even = (odd_even + 1) % 2;
        if (odd_even == 1) {
            oddLedBarGraph();
        } else {
            evenLedBarGraph();
        }
    }, 500);

**Explication du code**

.. code-block:: js

    var pins = [17,18,27,22,23,24,25,2,3,8];

La barre de LED utilise plusieurs broches, donc nous cr√©ons un tableau constant ``pins`` pour les stocker en groupe.

.. code-block:: js

    var leds = [];
    for (let i = 0; i < pins.length; i++) {
        leds[i] = new Gpio(pins[i], { mode: Gpio.OUTPUT });
    }

Instancier ces broches comme des objets ``leds`` √† l‚Äôaide d‚Äôune boucle ``for``.

.. code-block:: js

    function oddLedBarGraph() {
        for (let i = 0; i < leds.length; i++) {
            if (i % 2 == 1) {
                leds[i].digitalWrite(1);
            } else {
                leds[i].digitalWrite(0);
            }
        }
    }

Impl√©menter une fonction ``oddLedBarGraph()`` pour allumer les LED situ√©es sur les positions impaires de la barre de LED.

.. code-block:: js

    function evenLedBarGraph() {
        for (let i = 0; i < leds.length; i++) {
            if (i % 2 == 0) {
                leds[i].digitalWrite(1);
            } else {
                leds[i].digitalWrite(0);
            }
        };
    }

Impl√©menter une fonction ``evenLedBarGraph()`` pour allumer les LED situ√©es sur les positions paires de la barre de LED.

.. code-block:: js

    var odd_even = 0;

    setInterval(() => {
        odd_even = (odd_even + 1) % 2;
        if (odd_even == 1) {
            oddLedBarGraph();
        } else {
            evenLedBarGraph();
        }
    }, 500);

L‚Äô√©tat des LED change toutes les 500 ms.

Image du r√©sultat
--------------------

.. image:: img/image67.jpeg

