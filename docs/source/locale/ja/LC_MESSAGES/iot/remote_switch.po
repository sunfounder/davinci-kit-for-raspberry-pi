# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, sunfounder
# This file is distributed under the same license as the SunFounder Da Vinci
# Kit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Da Vinci Kit\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-07-29 17:00+0800\n"
"PO-Revision-Date: 2021-08-04 12:01+0800\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Last-Translator: \n"
"Language-Team: \n"
"X-Generator: Poedit 2.4.3\n"

#: ../iot/remote_switch.rst:2
msgid "Remote Switch"
msgstr "リモートスイッチ"

#: ../iot/remote_switch.rst:4
msgid ""
"In this project, we will learn to use Cloud4RPi's Switch to control the "
"relay, thereby controlling the relay's load-LED. You can also change the "
"load of the relay to household appliances, but with safety in mind."
msgstr ""
"このプロジェクトでは、Cloud4RPiのスイッチを使用してリレーを制御し、それに"
"よってリレーの負荷LEDを制御する方法を学習します。 安全性を考慮して、リ"
"レーの負荷を家電製品に変更することもできます。"

#: ../iot/remote_switch.rst:7
msgid "Experimental Procedures"
msgstr "実験手順"

#: ../iot/remote_switch.rst:9
msgid "Build the circuit."
msgstr "回路を構築します。"

#: ../iot/remote_switch.rst:14
msgid "Open the code."
msgstr "コードを開きます。"

#: ../iot/remote_switch.rst:25
msgid "Find the line below and fill in the correct device token."
msgstr "以下の行を見つけて、正しいデバイストークンを入力してください。"

#: ../iot/remote_switch.rst:31
msgid "Run the code."
msgstr "コードを実行します。"

#: ../iot/remote_switch.rst:41
msgid ""
"Go to Cloud4RPi, add a new Control Panel named project2, and click **Add "
"Widget** to add a **Switch** widget."
msgstr ""
"Cloud4RPiに移動し、project2という名前の新しいコントロールパネルを追加し、"
"**Add Widget** をクリックして **Switch** widgetを追加します。"

#: ../iot/remote_switch.rst:46
msgid "Once added, you can use the Switch widget to control the relay."
msgstr "追加すると、Switch widgetを使用してリレーを制御できます。"

#: ../iot/remote_switch.rst:52
msgid "Code Explanation"
msgstr "コードの説明"

#: ../iot/remote_switch.rst:58
msgid "Relay connected to GPIO18 of the T-expansion board."
msgstr "T拡張ボードのGPIO18に接続されたリレー。"

#: ../iot/remote_switch.rst:65
msgid "Set to BCM nomenclature and set ``RELAY_PIN`` to output."
msgstr "BCMの命名法に設定し、``RELAY_PIN`` を出力に設定します。"

#: ../iot/remote_switch.rst:73
msgid ""
"This function controls the relay according to the ``value`` and returns "
"the current level of the relay."
msgstr ""
"この関数は、``value`` に従ってリレーを制御し、リレーの現在のレベルを返しま"
"す。"

#: ../iot/remote_switch.rst:77
msgid ""
"Since the relay works at high level, the relay closes when the switch "
"state is True and opens when the switch state is False."
msgstr ""
"リレーは高レベルで動作するため、スイッチの状態がTrueの場合はリレーが閉"
"じ、スイッチの状態がFalseの場合はリレーが開きます。"

#: ../iot/remote_switch.rst:89
msgid ""
"By setting the value of the ``'value'`` key, we can set the initial "
"value of the Switch widget, then always read the value of the "
"``'value'`` key and send the current level of ``RELAY_PIN`` (the value "
"returned by the function ``relay_control()``) to Cloud4RPi."
msgstr ""
"``'value'`` キーの値を設定することで、Switch widgetの初期値を設定し、常に"
" ``'value'`` キーの値を読み取り、現在のレベルの ``RELAY_PIN`` を送信できま"
"す。（関数 ``relay_control()`` によって返される値）をCloud4RPiに送信しま"
"す。"
