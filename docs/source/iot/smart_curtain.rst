.. note::

    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi & Arduino & ESP32 sur Facebook ! Plongez au c≈ìur de l'univers du Raspberry Pi, Arduino et ESP32 avec d'autres amateurs.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques gr√¢ce √† l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des conseils et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et √† des aper√ßus exclusifs.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos derniers produits.
    - **Promotions et cadeaux festifs** : Participez √† des concours et promotions pendant les p√©riodes festives.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

Rideau Intelligent
=====================

Dans ce projet, nous allons simuler un sc√©nario o√π les rideaux s'ouvrent ou se ferment automatiquement en fonction de la luminosit√© de la pi√®ce.  
Lorsque la photor√©sistance d√©tecte que la pi√®ce est trop lumineuse, le Raspberry Pi actionne le moteur pour fermer le rideau ; lorsqu'il fait trop sombre, le rideau s'ouvre.

Vous pouvez √©galement consulter l'√©volution de la luminosit√© int√©rieure via le widget texte sur Cloud4RPi, ou contr√¥ler la lampe avec le widget interrupteur (pour des raisons de s√©curit√©, nous utilisons une LED dans cet exemple √† la place d'une lampe √©lectrique).



Proc√©dures exp√©rimentales
----------------------------

Construisez le circuit.

.. image:: img/window1.png
    :align: center

Ouvrez le fichier de code.

.. raw:: html

   <run></run>

.. code-block:: 

    cd ~/cloud4rpi-raspberrypi-python
    sudo nano smart_curtain.py

Trouvez la ligne ci-dessous et compl√©tez-la avec le bon token de l'appareil.

.. code-block:: python

    DEVICE_TOKEN = '__YOUR_DEVICE_TOKEN__'

Ex√©cutez le code.

.. raw:: html

    <run></run>

.. code-block:: 

    sudo python3 smart_curtain.py

Acc√©dez √† Cloud4RPi, ajoutez un nouveau panneau de contr√¥le nomm√© **project4** et ajoutez 3 widgets (Switch, Text et Chart) via le bouton **Add Widget**.

.. image:: img/window2.png
    :align: center

Une fois ajout√©, vous pouvez utiliser le widget Switch pour contr√¥ler la LED ; la valeur de la photor√©sistance sur le widget texte sera mise √† jour toutes les minutes.  
Lorsque la valeur est sup√©rieure √† 100, le moteur tourne dans le sens horaire pendant 5 secondes ; si la valeur est inf√©rieure √† 20, le moteur tourne dans le sens antihoraire pendant 5 secondes. Vous pouvez suivre l'√©volution de ces valeurs sur le widget graphique.

Explication du code
-----------------------

.. code-block:: python

    def getValue():
        analogVal = ADC0834.getResult()
        if analogVal > 100:
            move.clockwise()
            sleep(5)
            move.stop()
        elif analogVal < 20:
            move.contrarotate()
            sleep(5)
            move.stop()
        return analogVal

Lit la valeur du canal CH0 (auquel est connect√© la photor√©sistance) de l'ADC0834. Si la valeur est sup√©rieure √† 100, le moteur tourne dans le sens horaire pendant 5 secondes. Si la valeur est inf√©rieure √† 20, le moteur tourne dans le sens antihoraire pendant 5 secondes.

.. code-block:: python

    'CPU Temp': {
        'type': 'numeric',
        'bind': getValue
    },

Passez la fonction ``getValue()`` dans la cl√© ``'bind'`` comme fonction de rappel, afin que la valeur de luminosit√© (valeur de retour de la fonction ``getValue()``) puisse √™tre envoy√©e au widget texte.

