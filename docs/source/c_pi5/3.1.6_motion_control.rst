.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **ExpertenunterstÃ¼tzung**: LÃ¶sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre FÃ¤higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie frÃ¼hzeitigen Zugang zu neuen ProduktankÃ¼ndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: GenieÃŸen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    ðŸ‘‰ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!


3.1.6 Bewegungssteuerung
==========================

EinfÃ¼hrung
-----------------

In dieser Lektion werden wir ein einfaches Bewegungserfassungs- und SteuergerÃ¤t herstellen. Die MPU6050 wird als Sensor und der Schrittmotor als gesteuertes GerÃ¤t verwendet. Mit der am Handschuh montierten MPU6050 kÃ¶nnen Sie den Schrittmotor durch Drehen Ihres Handgelenks steuern.

Komponenten
---------------

.. image:: ../img/list_Motion_Control.png
    :align: center

Schematische Darstellung
--------------------------

============ ======== ======== ===
T-Karte Name physisch wiringPi BCM
GPIO18       Pin 12   1        18
GPIO23       Pin 16   4        23
GPIO24       Pin 18   5        24
GPIO25       Pin 22   6        25
SDA1         Pin 3             
SCL1         Pin 5             
============ ======== ======== ===

.. image:: ../img/Schematic_three_one6.png
   :align: center

Experimentelle Verfahren
------------------------------

Schritt 1: Bauen Sie die Schaltung auf.

.. image:: ../img/image251.png
   :alt: 3.1.6 Motion Control_bb
   :width: 800
   :align: center


Schritt 2: Gehen Sie zum Ordner der Kode.

.. raw:: html

   <run></run>

.. code-block:: 

    cd /home/pi/davinci-kit-for-raspberry-pi/c/3.1.6/

Schritt 3: Kompilieren Sie die Kode.

.. raw:: html

   <run></run>

.. code-block:: 

    gcc 3.1.6_MotionControl.c -lwiringPi -lm

Schritt 4: FÃ¼hren Sie die ausfÃ¼hrbare Datei aus.

.. raw:: html

   <run></run>

.. code-block:: 

    sudo ./a.out

Wenn der Neigungswinkel von mpu6050 auf der Y-Achse grÃ¶ÃŸer als 45 â„ƒ, ist, 
dreht sich der Schrittmotor wÃ¤hrend der Kode gegen den Uhrzeigersinn. 
Bei weniger als -45 â„ƒ, dreht sich der Schrittmotor im Uhrzeigersinn.

**Code ErklÃ¤rung**

.. code-block:: c

    doubleÂ mpu6050(){
    Â Â Â Â acclXÂ =Â read_word_2c(0x3B);
    Â Â Â Â acclYÂ =Â read_word_2c(0x3D);
    Â Â Â Â acclZÂ =Â read_word_2c(0x3F);
    Â Â Â Â acclX_scaledÂ =Â acclXÂ /Â 16384.0;
    Â Â Â Â acclY_scaledÂ =Â acclYÂ /Â 16384.0;
    Â Â Â Â acclZ_scaledÂ =Â acclZÂ /Â 16384.0;
    Â Â Â Â doubleÂ angle=get_y_rotation(acclX_scaled,Â acclY_scaled,Â acclZ_scaled);
    Â Â Â Â returnÂ angle;
    }

mpu6050 erhÃ¤lt den Neigungswinkel in Richtung der Y-Achse.

.. code-block:: c

    voidÂ rotary(charÂ direction){
    Â Â Â Â if(directionÂ ==Â 'c'){
    Â Â Â Â Â Â Â Â for(intÂ j=0;j<4;j++){
    Â Â Â Â Â Â Â Â Â Â Â Â for(intÂ i=0;i<4;i++)
    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â {digitalWrite(motorPin[i],0x99>>jÂ &Â (0x08>>i));}
    Â Â Â Â Â Â Â Â Â Â Â Â delayMicroseconds(stepSpeed);
    Â Â Â Â Â Â Â Â }Â Â Â Â Â Â Â Â 
    Â Â Â Â }
    Â Â Â Â elseÂ if(directionÂ =='a'){
    Â Â Â Â Â Â Â Â for(intÂ j=0;j<4;j++){
    Â Â Â Â Â Â Â Â Â Â Â Â for(intÂ i=0;i<4;i++)
    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â {digitalWrite(motorPin[i],0x99<<jÂ &Â (0x80>>i));}
    Â Â Â Â Â Â Â Â Â Â Â Â delayMicroseconds(stepSpeed);
    Â Â Â Â Â Â Â Â }Â Â Â 
    Â Â Â Â }
    }


Wenn die empfangene Richtung Taste â€šcâ€˜ ist, dreht sich der Schrittmotor im Uhrzeigersinn; wenn die Taste â€šaâ€˜ ist, 
dreht der Motor gegen den Uhrzeigersinn. 
Siehe :ref:`py_step_motor`  fÃ¼r weitere Details zur Berechnung der Drehrichtung des Schrittmotors.

.. code-block:: c

    intÂ main()
    {
    Â Â Â Â setup();
    Â Â Â Â doubleÂ angle;
    Â Â Â Â while(1)Â {
    Â Â Â Â Â Â Â Â angleÂ =Â mpu6050();
    Â Â Â Â Â Â Â Â ifÂ (angleÂ >=45){rotary('a');}
    Â Â Â Â Â Â Â Â elseÂ ifÂ (angle<=-45){rotary('c');}
    Â Â Â Â }
    Â Â Â Â returnÂ 0;
    }

Der Neigungswinkel in Richtung der Y-Achse wird von mpu6050 abgelesen. 
Wenn er grÃ¶ÃŸer als 45 â„ƒ, ist, dreht sich der Schrittmotor gegen den Uhrzeigersinn. 
Bei weniger als -45 â„ƒ, dreht sich der Schrittmotor im Uhrzeigersinn.
