.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder pour les passionn√©s de Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez plus profond√©ment dans l‚Äôunivers du Raspberry Pi, Arduino et ESP32 avec d‚Äôautres amateurs.

    **Pourquoi nous rejoindre ?**

    - **Assistance experte** : R√©solvez vos probl√®mes apr√®s-vente et relevez des d√©fis techniques avec l‚Äôaide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et b√©n√©ficiez de sneak peeks.
    - **R√©ductions sp√©ciales** : Profitez de remises exclusives sur nos derniers produits.
    - **Promotions festives et cadeaux** : Participez √† des promotions sp√©ciales et √† des tirages au sort.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd‚Äôhui !

Hello Mouse
==================

Dans ce projet, votre souris tracera continuellement des lignes vers un point fixe. D√©placez la souris et vous dessinerez une tra√Æn√©e unique d‚Äô√©toiles. Cliquez avec la souris pour recommencer le dessin.

.. image:: img/hello_mouse1.png

**Code**

.. code-block:: arduino

    int pointX = 172;
    int pointY = 88;

    void setup() {
        size(400, 400);
        stroke(255);
        background(192, 16, 18);
    }

    void draw() {
        line(pointX, pointY, mouseX, mouseY);
    }

    void mousePressed() {
        pointX=mouseX;
        pointY=mouseY;
        background(192, 16, 18);
    }

**Comment √ßa fonctionne ?**

Le projet pr√©c√©dent dessinait une image statique sans animation ni interaction.

Si nous voulons cr√©er une esquisse interactive, nous devons ajouter les fonctions ``setup()`` et ``draw()`` (ce sont des fonctions int√©gr√©es appel√©es automatiquement) pour construire l‚Äôanimation.

* ``setup()`` : Ex√©cut√©e une seule fois au d√©but du programme.
* ``draw()`` : Ex√©cut√©e en boucle, c‚Äôest l√† que nous ajoutons le code pour dessiner l‚Äôanimation.

.. code-block:: arduino

    int pointX = 172;
    int pointY = 88;

    void setup() {
        size(400, 400);
        stroke(255);
        background(192, 16, 18);
    }

    void draw() {
        line(pointX, pointY, mouseX, mouseY);
    }

L‚Äôesquisse ci-dessus fonctionne d√©j√† parfaitement en tant que programme interactif.

Ensuite, vous pouvez ajouter un √©v√©nement de clic de souris. Cet √©v√©nement est mis en ≈ìuvre avec la fonction ``mousePressed()``, o√π nous ajoutons des instructions pour actualiser le point cible et effacer l‚Äô√©cran.

.. code-block:: arduino

    int pointX = 172;
    int pointY = 88;

    void setup() {
        size(400, 400);
        stroke(255);
        background(192, 16, 18);
    }

    void draw() {
        line(pointX, pointY, mouseX, mouseY);
    }

    void mousePressed() {
        pointX=mouseX;
        pointY=mouseY;
        background(192, 16, 18);
    }

Pour plus de d√©tails, consultez la `Processing Reference <https://processing.org/reference/>`_.
