.. note::

    Bonjour et bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez dans l'univers de Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et relevez vos d√©fis techniques gr√¢ce √† l'aide de notre communaut√© et de notre √©quipe.
    - **Apprenez et Partagez** : √âchangez des astuces et des tutoriels pour perfectionner vos comp√©tences.
    - **Aper√ßus exclusifs** : B√©n√©ficiez d'un acc√®s anticip√© aux nouvelles annonces de produits et aux avant-premi√®res.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos nouveaux produits.
    - **Promotions festives et concours** : Participez √† des concours et des promotions lors des f√™tes.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

2.2.7 Module RFID MFRC522
===========================

Introduction
---------------

L'identification par radiofr√©quence (RFID) d√©signe les technologies utilisant 
la communication sans fil entre un objet (ou √©tiquette) et un dispositif 
d'interrogation (ou lecteur) pour suivre et identifier automatiquement ces objets.

Parmi les applications courantes de cette technologie, on retrouve les cha√Ænes 
d'approvisionnement dans la grande distribution, les cha√Ænes d'approvisionnement 
militaires, les m√©thodes de paiement automatis√©es, le suivi des bagages, la gestion 
de documents et la gestion pharmaceutique, pour n'en nommer que quelques-unes.

Dans ce projet, nous utiliserons le RFID pour la lecture et l'√©criture de donn√©es.

Composants
-------------

.. image:: img/list_2.2.7.png


Principe
----------

**RFID**

L'identification par radiofr√©quence (RFID) utilise la communication sans fil entre un 
objet (ou tag) et un dispositif d'interrogation (ou lecteur) pour suivre et identifier 
automatiquement ces objets. La port√©e de transmission du tag est limit√©e √† quelques m√®tres 
du lecteur. Une ligne de vue directe entre le lecteur et le tag n'est pas n√©cessaire.

La plupart des tags contiennent au moins un circuit int√©gr√© (CI) et une antenne. La puce 
stocke les informations et g√®re la communication radiofr√©quence (RF) avec le lecteur. 
Les tags passifs ne poss√®dent pas de source d'√©nergie ind√©pendante et d√©pendent d'un 
signal √©lectromagn√©tique externe, fourni par le lecteur, pour alimenter leur fonctionnement. 
Les tags actifs contiennent une source d'√©nergie autonome, comme une batterie. 
Par cons√©quent, ils peuvent disposer de capacit√©s accrues de traitement, de transmission 
et d'une plus grande port√©e.
.. image:: img/image230.png


**MFRC522**

Le MFRC522 est une puce int√©gr√©e de lecture et d'√©criture de cartes, couramment utilis√©e 
dans la communication radiofr√©quence √† 13,56 MHz. D√©velopp√© par la soci√©t√© NXP, il s'agit 
d'une puce de carte sans contact, √† faible co√ªt et basse tension, id√©ale pour les instruments 
intelligents et les dispositifs portables.

Le MFRC522 utilise un concept avanc√© de modulation et de d√©modulation, enti√®rement 
compatible avec tous les types de m√©thodes de communication et protocoles sans contact 
passifs √† 13,56 MHz. Il prend en charge l'algorithme de chiffrement rapide CRYPTO1 pour 
v√©rifier les produits MIFARE. Le MFRC522 prend √©galement en charge les communications 
sans contact haute vitesse de la s√©rie MIFARE, avec une vitesse de transmission 
bidirectionnelle pouvant atteindre 424 kbit/s. En tant que nouveau membre de la s√©rie de 
lecteurs de cartes hautement int√©gr√©s √† 13,56 MHz, le MFRC522 est similaire aux MF RC500 
et MF RC530, tout en pr√©sentant des diff√©rences significatives. Il communique avec l'h√¥te 
via une interface s√©rie, ce qui r√©duit le c√¢blage. Vous pouvez choisir entre les modes SPI, 
I2C et UART (similaire √† RS232), ce qui facilite la connexion, √©conomise de l'espace sur la 
carte PCB (plus petite taille) et r√©duit les co√ªts.

Sch√©ma de c√¢blage
---------------------

.. image:: img/image331.png


Proc√©dures exp√©rimentales
----------------------------

**√âtape 1 :** Construisez le circuit.

.. image:: img/image232.png
    :width: 800



**√âtape 2 :** Configurez le SPI (voir :ref:`spi_configuration` pour plus de d√©tails. Si le SPI 
est d√©j√† configur√©, passez cette √©tape.)

**√âtape 3 :** Acc√©dez au dossier du code.

.. raw:: html

   <run></run>

.. code-block:: 

    cd ~/davinci-kit-for-raspberry-pi/c/2.2.7/

**√âtape 4 :** Compilez le code.

.. raw:: html

   <run></run>

.. code-block:: 

    make read
    make write

.. note::
    Deux exemples sont disponibles pour lire ou √©crire l'ID de la carte. Vous pouvez 
    choisir celui qui correspond √† votre besoin.

**√âtape 5 :** Apr√®s avoir ex√©cut√© ``./write``, entrez les informations, telles que le nom de la personne, puis placez le tag ou la carte sur le module MRC522 et attendez que l'√©criture soit termin√©e.

.. raw:: html

   <run></run>

.. code-block::

    sudo ./write

**√âtape 6 :** Maintenant, ex√©cutez ``./read`` pour lire les informations du tag ou de la carte que vous avez √©crites.

.. raw:: html

   <run></run>

.. code-block:: 

    sudo ./read


.. note::

    Si cela ne fonctionne pas apr√®s l'ex√©cution ou s'il y a un message d'erreur indiquant : ¬´ wiringPi.h : Aucun fichier ou r√©pertoire de ce type ¬ª, veuillez vous r√©f√©rer √† :ref:`C code is not working?`.

**Explication du Code**

.. code-block:: c

    InitRc522();

Cette fonction initialise le module RFID RC522.

.. code-block:: c

    uint8_t read_card_data();

Cette fonction lit les donn√©es de la carte et renvoie "1" si la lecture est r√©ussie.

.. code-block:: c

    uint8_t write_card_data(uint8_t *data);

Cette fonction √©crit les donn√©es sur la carte et renvoie "1" si l'√©criture est r√©ussie.
 \*data correspond aux informations qui seront inscrites sur la carte.
