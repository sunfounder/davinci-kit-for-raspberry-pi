# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, sunfounder
# This file is distributed under the same license as the SunFounder Da Vinci
# Kit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Da Vinci Kit\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-07-29 17:00+0800\n"
"PO-Revision-Date: 2021-08-04 17:42+0800\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Last-Translator: \n"
"Language-Team: \n"
"X-Generator: Poedit 2.4.3\n"

#: ../iot/smart_curtain.rst:2
msgid "Smart Curtain"
msgstr "スマートカーテン"

#: ../iot/smart_curtain.rst:5
msgid ""
"In this project, we will simulate a scenario where the curtains are "
"automatically opened or closed according to the brightness of the room. "
"When the photoresistor detects that the room brightness is too bright, "
"Raspberry Pi will drive the motor to close the curtain; when the room "
"brightness is too dark, the curtain will be opened."
msgstr ""
"このプロジェクトでは、部屋の明るさに応じてカーテンが自動的に開閉するシナ"
"リオをシミュレートします。 フォトレジスターが部屋の明るさが明るすぎること"
"を検出すると、RaspberryPiがモーターを駆動してカーテンを閉じます。 部屋の"
"明るさが暗すぎるとカーテンが開きます。"

#: ../iot/smart_curtain.rst:8
msgid ""
"Also you can view the indoor brightness change through text widget on "
"Cloud4RPi, or control the lamp with Switch widget (for electricity "
"safety, this experiment uses LED instead)."
msgstr ""
"また、Cloud4RPiのテキストwidgetで室内の明るさの変化を確認したり、スイッチ"
"widgetでランプを制御したりできます（電気の安全のため、この実験では代わり"
"にLEDを使用します）。"

#: ../iot/smart_curtain.rst:12
msgid "Experimental Procedures"
msgstr "実験手順"

#: ../iot/smart_curtain.rst:14
msgid "Build the circuit."
msgstr "回路を構築します。"

#: ../iot/smart_curtain.rst:19
msgid "Open the code."
msgstr "コードを開きます。"

#: ../iot/smart_curtain.rst:30
msgid "Find the line below and fill in the correct device token."
msgstr "以下の行を見つけて、正しいdevice tokenを入力してください。"

#: ../iot/smart_curtain.rst:36
msgid "Run the code."
msgstr "コードを実行します。"

#: ../iot/smart_curtain.rst:46
msgid ""
"Go to Cloud4RPi, add a new control panel named **project4** and add 3 "
"widgets (Switch, Text and Chart widgets) via the **Add Widget** button."
msgstr ""
"Cloud4RPiに移動し、**project4** という名前の新しいコントロールパネルを追加"
"し、**Add Widget** ボタンを使用して3つのwidget（Switch, TextおよびChart）"
"を追加します。"

#: ../iot/smart_curtain.rst:51
msgid ""
"Once added, you can use the Switch widget to control the LED; the value "
"of the photoresistor on the Text widget will be updated every 1 minute, "
"when the value > 100, the motor rotates clockwise for 5 seconds; if the "
"value is less than 20, the motor rotates counterclockwise for 5 seconds. "
"You can see the change over time in the Chart widget."
msgstr ""
"追加すると、Switch widgetを使用してLEDを制御できます。 Text widgetの"
"photoresistorの値は1分ごとに更新され、値が100を超えると、モーターが時計回"
"りに5秒間回転します。 値が20未満の場合、モーターは反時計回りに5秒間回転し"
"ます。 Chart widgetで時間の経過に伴う変化を確認できます。"

#: ../iot/smart_curtain.rst:55
msgid "Code Explanation"
msgstr "コードの説明"

#: ../iot/smart_curtain.rst:71
msgid ""
"Read the value of channel CH0 (with photoresistor connected) of the "
"ADC0834. If the value is >100, the motor rotates clockwise for 5 "
"seconds. If the value is less than 20, the motor rotates "
"counterclockwise for 5 seconds."
msgstr ""
"ADC0834のチャネルCH0（photoresistorが接続されている）の値を読み取りま"
"す。 値が>100の場合、モーターは時計回りに5秒間回転します。 値が20未満の場"
"合、モーターは反時計回りに5秒間回転します。"

#: ../iot/smart_curtain.rst:80
msgid ""
"Pass ``getValue()`` into the ``'bind'`` key as a callback function, so "
"that the brightness value (the return value of the ``getValue()`` "
"function) can be sent to the Text widget."
msgstr ""
"callback関数として ``getValue()`` を ``'bind'`` キーに渡して、明るさの値"
"（``getValue()`` 関数の戻り値）をText widgetに送信できるようにします 。"
