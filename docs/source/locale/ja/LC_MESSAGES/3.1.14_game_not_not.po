# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, SunFounder
# This file is distributed under the same license as the SunFounder Davinci
# Kit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Davinci Kit\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-08-19 18:22+0800\n"
"PO-Revision-Date: 2021-05-28 11:19+0800\n"
"Last-Translator: \n"
"Language: ja\n"
"Language-Team: \n"
"Plural-Forms: nplurals=1; plural=0\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../3.1.14_game_not_not.rst:2
msgid "3.1.14 GAME– Not Not"
msgstr "3.1.14 ゲーム–Not Not-頭脳耐久ゲーム"

#: ../3.1.14_game_not_not.rst:5
msgid "Introduction"
msgstr "前書き"

#: ../3.1.14_game_not_not.rst:7
 
msgid ""
"In this lesson, we will make an interesting game device, and we call it "
"\\\"Not Not\\\"."
msgstr "このレッスンでは、面白いゲームデバイスを作成し、「Not Not」と呼ぶ。"

#: ../3.1.14_game_not_not.rst:9
msgid ""
"During the game, the dot matrix will refresh an arrow randomly. What you "
"need to do is to press the button in the opposite direction of the arrow "
"within a limited time. If the time is up, or if the button in the same "
"direction as the arrow is pressed, you are out."
msgstr "ゲーム中、ドットマトリックスは矢印をランダムに更新する。必要なのは、限られた時間内に矢印の反対方向にボタンを押すことである。時間になった場合、または矢印と同じ方向のボタンが押された場合、敗北すると意味する。"

#: ../3.1.14_game_not_not.rst:11
msgid ""
"This game can really practice your reverse thinking, and now shall we "
"have a try?"
msgstr "このゲームは本当にあなたの逆思考を実践することができる。"

#: ../3.1.14_game_not_not.rst:14
msgid "Components"
msgstr "部品"

#: ../3.1.14_game_not_not.rst:20
msgid "Schematic Diagram"
msgstr "回路図"

#: ../3.1.14_game_not_not.rst:23
msgid "T-Board Name"
msgstr "Tボード名"

#: ../3.1.14_game_not_not.rst:23
msgid "physical"
msgstr "physical"

#: ../3.1.14_game_not_not.rst:23
msgid "wiringPi"
msgstr "wiringPi"

#: ../3.1.14_game_not_not.rst:23
msgid "BCM"
msgstr "BCM"

#: ../3.1.14_game_not_not.rst:24
msgid "GPIO17"
msgstr "GPIO17"

#: ../3.1.14_game_not_not.rst:24
msgid "Pin 11"
msgstr "Pin 11"

#: ../3.1.14_game_not_not.rst:24
msgid "0"
msgstr "0"

#: ../3.1.14_game_not_not.rst:24
msgid "17"
msgstr "17"

#: ../3.1.14_game_not_not.rst:25
msgid "GPIO18"
msgstr "GPIO18"

#: ../3.1.14_game_not_not.rst:25
msgid "Pin 12"
msgstr "Pin 12"

#: ../3.1.14_game_not_not.rst:25
msgid "1"
msgstr "1"

#: ../3.1.14_game_not_not.rst:25
msgid "18"
msgstr "18"

#: ../3.1.14_game_not_not.rst:26
msgid "GPIO27"
msgstr "GPIO27"

#: ../3.1.14_game_not_not.rst:26
msgid "Pin 13"
msgstr "Pin 13"

#: ../3.1.14_game_not_not.rst:26
msgid "2"
msgstr "2"

#: ../3.1.14_game_not_not.rst:26
msgid "27"
msgstr "27"

#: ../3.1.14_game_not_not.rst:27
msgid "GPIO20"
msgstr "GPIO20"

#: ../3.1.14_game_not_not.rst:27
msgid "Pin 38"
msgstr "Pin 38"

#: ../3.1.14_game_not_not.rst:27
msgid "28"
msgstr "28"

#: ../3.1.14_game_not_not.rst:27
msgid "20"
msgstr "20"

#: ../3.1.14_game_not_not.rst:28
msgid "GPIO26"
msgstr "GPIO26"

#: ../3.1.14_game_not_not.rst:28
msgid "Pin 37"
msgstr "Pin 37"

#: ../3.1.14_game_not_not.rst:28
msgid "25"
msgstr "25"

#: ../3.1.14_game_not_not.rst:28
msgid "26"
msgstr "26"

#: ../3.1.14_game_not_not.rst:35
msgid "Experimental Procedures"
msgstr "実験手順"

#: ../3.1.14_game_not_not.rst:37
msgid "**Step 1:** Build the circuit."
msgstr "**ステップ1：** 回路を作る。"

#: ../3.1.14_game_not_not.rst:44
msgid "**For C Language Users**"
msgstr "**C言語ユーザー向け**"

#: ../3.1.14_game_not_not.rst:46
msgid "**Step 2:** Go to the folder of code."
msgstr "**ステップ2：** コードのフォルダに移動します。"

#: ../3.1.14_game_not_not.rst:56
msgid "**Step 3**: Compile."
msgstr "**ステップ3：** コンパイルします。"

#: ../3.1.14_game_not_not.rst:66
msgid "**Step 4**: Run."
msgstr "**ステップ4：** 実行します。"

#: ../3.1.14_game_not_not.rst:76
 
msgid ""
"After the program starts, a left or right arrow will be refreshed at "
"random on the dot matrix. What you need to do is to press the button in "
"the opposite direction of the arrow within a limited time. Then "
"\\\"**√**\\\" appears on the dot matrix. If the time is up, or if the "
"button in the same direction as the arrow is pressed, you are out and the"
" dot matrix displays \\\"x\\\". You can also add 2 new buttons or replace"
" them with Joystick keys for up, down, left and right— 4 directions to "
"increase the difficulty of the game."
msgstr ""
"プログラムの開始後、左矢印または右矢印がドットマトリックス上でランダムに更新されます。 "
"限られた時間内に矢印の反対方向にボタンを押す必要があります。 次に、「**√**」がドットマトリックスに表示されます。 "
"時間切れの場合、または矢印と同じ方向のボタンが押された場合は、外に出て、ドットマトリックスに「x」が表示されます。 "
"また、2つの新しいボタンを追加したり、上下左右のジョイスティックキーに置き換えたりすることもできます。4方向でゲームの難易度を上げることができます。"

#: ../3.1.14_game_not_not.rst:87
msgid ""
"If it does not work after running, please refer to :ref:`C code is not "
"working?`"
msgstr "実行後に機能しない場合は、:ref:`C code is not working?` を参照してください。"

#: ../3.1.14_game_not_not.rst:90 ../3.1.14_game_not_not.rst:443
msgid "**Code Explanation**"
msgstr "**コードの説明**"

#: ../3.1.14_game_not_not.rst:92 ../3.1.14_game_not_not.rst:445
msgid ""
"Based on **1.1.6 LED Dot Matrix**, this lesson adds **2** buttons to make"
" an amusing game device. So, if you are not very familiar with the dot "
"matrix, please refer to :ref:`1.1.6 LED Dot Matrix`."
msgstr ""
"**1.1.6 LEDドットマトリックス** に基づいて、このレッスンでは **2** ボタンを追加して面白いゲームデバイスを作成します。 "
"したがって、ドットマトリックスにあまり詳しくない場合は、:ref:`1.1.6 LED Dot Matrix` を参照してください。"

#: ../3.1.14_game_not_not.rst:96 ../3.1.14_game_not_not.rst:449
msgid "The whole program process is as below:"
msgstr "プログラム全体のプロセスは次のとおりである："

#: ../3.1.14_game_not_not.rst:98 ../3.1.14_game_not_not.rst:454
msgid "Randomly select an arrow direction and generate **timer 1**."
msgstr "矢印の方向をランダムに選択し、 **タイマー1** を生成する。"

#: ../3.1.14_game_not_not.rst:100
msgid "Display the arrow image on the dot matrix."
msgstr "ドットマトリックスに矢印画像を表示する。"

#: ../3.1.14_game_not_not.rst:102 ../3.1.14_game_not_not.rst:458
msgid ""
"Judge the button input. If the button is pressed or **timer 1** reminds "
"time’s up, judgement starts."
msgstr "ボタン入力を判断する。ボタンが押されるか、 **タイマー1** が時間切れを想起させると、判定が開始される。"

#: ../3.1.14_game_not_not.rst:105 ../3.1.14_game_not_not.rst:461
msgid ""
"Display the image on the basis of a judging result; meanwhile, generate "
"**timer 2**."
msgstr "判定結果に基づいて画像を表示する。その間、 **タイマー2** を生成する。"

#: ../3.1.14_game_not_not.rst:108 ../3.1.14_game_not_not.rst:464
msgid "Rerun **step 1** when **timer 2** reminds time’s up."
msgstr "**タイマー2** が時間切れを想起させると、 **ステップ1** を再実行する。"

#: ../3.1.14_game_not_not.rst:131
msgid ""
"GLYPH structure works like a dictionary: the **word** attribute "
"corresponds to the **key** on the dictionary; the **code** attribute "
"corresponds to the **value**."
msgstr ""
"GLYPH構造は辞書のように動作します。**word** 属性は辞書の **key** に対応し、**コード** 属性は **value** "
"に対応します。"

#: ../3.1.14_game_not_not.rst:135
msgid ""
"Here, code is used to store an array for dot matrix to display images (an"
" 8x8 bit array)."
msgstr "ここでは、ドットマトリックスが画像を表示するための配列（8×8ビットの配列）を格納するためのコードを使用しています。"

#: ../3.1.14_game_not_not.rst:138
msgid ""
"Here, the array **arrow** can be used to display the arrow pattern in up,"
" down, left and right directions on the LED dot matrix."
msgstr "ここでは、配列 **arrow** を用いて、上下左右の矢印パターンをLEDドットマトリクスに表示することができます。"

#: ../3.1.14_game_not_not.rst:141
msgid "Now **down** and **up** are commented and uncomment them if needed."
msgstr "**上下** が付注され、必要に応じて解除できる。"

#: ../3.1.14_game_not_not.rst:143
 
msgid ""
"The array **check** is used to display these two images: \\\"**×**\\\" "
"and \\\"**√**\\\"."
msgstr "配列 **チェック** を使用して、これらの2つの画像「 **×** 」と「 **√** 」を表示する。"

#: ../3.1.14_game_not_not.rst:157
msgid ""
"The function **lookup()** works by \\\"checking the dictionary\\\". "
"Define a **key,** search the same words as **key** in the structure "
"**GLYPH \\*glyph** and return the corresponding information— "
"\\\"**code**\\\" of the certain word."
msgstr ""
"関数 **lookup()** は、「checking the dictionary」によって機能する。 **キー** を定義し、構造 "
"**GLYPH \* glyph** のキーと同じ単語を検索し、対応する情報（特定の単語の「 **コード** 」）を返す。"

#: ../3.1.14_game_not_not.rst:162
msgid ""
"The function **Strcmp()** is used to compare the identity of two "
"character strings **glyph[i].word** and **key**; if the identity is "
"judged, return **glyph[i].code** ( as shown)."
msgstr ""
"関数 **Strcmp()** は、2つの文字列 **glyph[i].単語** と **キー** "
"の同一性を比較するために使用される。同一性が判断された場合、 **glyph[i].コード** （示すように）を返す。"

#: ../3.1.14_game_not_not.rst:176 ../3.1.14_game_not_not.rst:516
msgid "Display the specified pattern on the dot matrix."
msgstr "指定したパターンをドットマトリックスに表示する。"

#: ../3.1.14_game_not_not.rst:188 ../3.1.14_game_not_not.rst:529
 
msgid ""
"The function **createGlyph()** is used to randomly select a direction "
"(the word attribute of an element in the array **arrow[]:** "
"\\\"**left**\\\", \\\"**right**\\\"... ). Set the stage as \\\"PLAY\\\" "
"and start a 2-second alarm clock function."
msgstr ""
"関数 **createGlyph()** を使用して、方向（配列 **arrow []** の要素の単語属性：\"**left**\""
"、\"**right**\" ...）をランダムに選択する。ステージを「PLAY」に設定し、2秒の目覚まし時計機能を開始する。"

#: ../3.1.14_game_not_not.rst:193
msgid ""
"**srand(time(NULL)):** Initializes random seeds that are from the system "
"clock."
msgstr "**srand（time（NULL））：** システムクロックからのランダムシードを初期化する。"

#: ../3.1.14_game_not_not.rst:196
 
msgid ""
"**(sizeof(arrow)/sizeof(arrow[0]))：** Get the length of the array, the "
"outcome is 2."
msgstr "**(sizeof(arrow)/sizeof(arrow[0]))：** 配列の長さを取得し、結果は2である。"

#: ../3.1.14_game_not_not.rst:199
 
msgid ""
"**rand()%2:** The remainder is **0** or **1,** gotten from dividing a "
"generated random number by 2."
msgstr "**rand()%2:** 余りは **0** または **1** で、生成された乱数を2で割ったものである。"

#: ../3.1.14_game_not_not.rst:202
 
msgid ""
"**waypoint=arrow[i].word:** The outcome should be \\\"right\\\" or "
"\\\"left\\\"."
msgstr "**waypoint=arrow[i].単語：** 結果は「right」または「left」でなければならない。"

#: ../3.1.14_game_not_not.rst:219
 
msgid ""
"checkPoint() is used to check the button input; if the button is not "
"pressed or the button in the same direction as the arrow is pressed, the "
"outcome of the waypoint is wrong and \\\"**x**\\\" appears on the dot "
"matrix. Otherwise, the waypoint is right and dot matrix displays "
"\\\"**√**\\\". Here the **stage** is **CHECK,** and there can be set a "
"1-second alarm clock function."
msgstr ""
"checkPoint()は、ボタンの入力をチェックするためのもので、ボタンが押されていなかったり、矢印と同じ方向のボタンが押されていたりすると、ウェイポイントの結果がおかしくなり、ドットマトリクスに「"
"**x**」と表示されます。そうでなければ、ウェイポイントの結果は正しく、ドットマトリクスには「"
"**√**」と表示されます。ここでは、**ステージ** が **CHECK** となり、1秒単位の目覚まし時計機能を設定することができます。"

#: ../3.1.14_game_not_not.rst:226
 
msgid ""
"alarm() is also called \\\"alarm clock\\\", in which a timer can be set, "
"and it sends **SIGALRM** signals to the progress when the defined time is"
" up."
msgstr "alarm()は「目覚まし時計」とも呼ばれ、タイマーを設定し、設定した時間が経過すると **SIGALRM** 信号をプログレスに送信します。"

#: ../3.1.14_game_not_not.rst:239
msgid ""
"getKey() reads the states of the these two buttons; if the right button "
"is pressed, the parameter of the function checkPoint() is **right** and "
"if the left button is pressed, the parameter is **left**."
msgstr ""
"getKey()は、これら2つのボタンの状態を読み取ります。右ボタンが押されている場合、関数checkPoint()のパラメータは "
"**right** 、左ボタンが押されている場合、パラメータは **left** となります。"

#: ../3.1.14_game_not_not.rst:254
 
msgid ""
"Previously, timer() was called when set as the alarm() time’s up. Then "
"under the \\\"PLAY\\\" mode, checkPoint() is to be called to judge the "
"outcome. If the program is set to \\\"CHECK\\\" mode, the function "
"createGlyph() should be called to select new patterns."
msgstr ""
"これまでは、アラーム()が鳴ったときにtimer()が呼ばれていました。そして、「PLAY」モードでは、結果を判断するためにcheckPoint()を呼び出すことになっています。「CHECK」"
"モードの場合は、createGlyph()を呼び出してパターンを選択します。"

#: ../3.1.14_game_not_not.rst:281
msgid ""
"The working of the function signal(SIGALRM,timer): calling the timer() "
"function when a SIGALRM signal (generated by the alarm clock function "
"alarm()) is received."
msgstr "関数signal（SIGALRM、timer）の動作：（目覚まし時計関数alarm()によって生成された）SIGALRM信号を受信したときに関数timer()を呼び出す。"

#: ../3.1.14_game_not_not.rst:285 ../3.1.14_game_not_not.rst:479
msgid ""
"When the program starts, call createGlyph() one time at first and then "
"start the loop."
msgstr "プログラムが起動したら、最初に1回だけcreateGlyph()を呼び出してから、ループを開始します。"

#: ../3.1.14_game_not_not.rst:288 ../3.1.14_game_not_not.rst:482
 
msgid ""
"In the loop: under PLAY mode, the dot matrix displays arrow patterns and "
"check the button state; if under CHECK mode, what is displayed is "
"\\\"**x**\\\" or \\\"**√**\\\"."
msgstr ""
"ループ内：PLAYモードでは、ドットマトリックスに矢印パターンが表示され、ボタンの状態が確認されます。 チェックモードの場合、表示されるのは「"
"**x**」または「**√**」です。"

#: ../3.1.14_game_not_not.rst:293
msgid "**For Python Language Users**"
msgstr "**Python言語ユーザー向け**"

#: ../3.1.14_game_not_not.rst:295
msgid "**Step 2**: Get into the folder of code."
msgstr "**ステップ2**：コードのフォルダーに入ります。"

#: ../3.1.14_game_not_not.rst:305
msgid "**Step 3**: Run."
msgstr "**ステップ3**：実行します。"

#: ../3.1.14_game_not_not.rst:315
 
msgid ""
"After starting the program, on the dot matrix appears an arrow pointing "
"to the right or the left. What you need to do is to press the button in "
"the opposite direction of the arrow within a limited time. Then "
"\\\"**√**\\\" appears on the dot matrix. If the time is up, or if the "
"button in the same direction as the arrow is pressed, you are out and the"
" dot matrix displays \\\"x\\\". You can also add 2 new buttons or replace"
" them with Joystick keys for up, down, left and right— 4 directions to "
"increase the difficulty of the game."
msgstr ""
"プログラムを起動すると、ドットマトリックス上に右または左を指す矢印が表示されます。 "
"あなたがする必要があるのは、限られた時間内に矢印の反対方向にボタンを押すことです。 次に、「**√**"
"」がドットマトリックスに表示されます。 "
"時間切れの場合、または矢印と同じ方向のボタンが押された場合は、外に出て、ドットマトリックスに「x」が表示されます。 "
"また、2つの新しいボタンを追加したり、上下左右のジョイスティックキーに置き換えたりすることもできます。4方向でゲームの難易度を上げることができます。"

#: ../3.1.14_game_not_not.rst:324
msgid "**Code**"
msgstr "**コード**"

#: ../3.1.14_game_not_not.rst:328
 
msgid ""
"You can **Modify/Reset/Copy/Run/Stop** the code below. But before that, "
"you need to go to  source code path like ``davinci-kit-for-raspberry-"
"pi/python``."
msgstr ""
"以下のコードを **変更/リセット/コピー/実行/停止** できます。 ただし、その前に、 ``davinci-kit-for-raspberry-pi/python`` のようなソースコードパスに移動する必要があります。"

#: ../3.1.14_game_not_not.rst:456
msgid "Display the corresponding arrow image on the dot matrix."
msgstr "ドットマトリックスに対応する矢印画像を表示する。"

#: ../3.1.14_game_not_not.rst:477
msgid "Main() contains the whole running process."
msgstr "Main()には実行中のプロセス全体が含まれている。"

#: ../3.1.14_game_not_not.rst:499
msgid ""
"Here, the **dictionary** arrow can be used to display the arrow pattern "
"in up, down, left and right directions on the LED dot matrix."
msgstr "ここで、**辞書** 矢印を使用して、LEDドットマトリックス上で上、下、左、右の方向に矢印パターンを表示できます。"

#: ../3.1.14_game_not_not.rst:502
msgid "Now down and up are commented and uncomment them if needed."
msgstr "上下が付注され、必要に応じて解除できる。"

#: ../3.1.14_game_not_not.rst:504
 
msgid ""
"The **dictionary** check is used to display these two images: "
"\\\"**×**\\\" and \\\"**√**\\\"."
msgstr "**辞書** チェックは、「**×**」と「**√**」の2つの画像を表示するために使用されます。"

#: ../3.1.14_game_not_not.rst:534
 
msgid ""
"**arrow.keys():** Select the keys \\\"right\\\"and \\\"left\\\" in the "
"arrow array."
msgstr "**arrow.keys():** 矢印配列のキー「右」と「左」を選択する。"

#: ../3.1.14_game_not_not.rst:536
 
msgid "**list(arrow.keys()):** Combine these keys into an array."
msgstr "、**list(arrow.keys()）：** これらのキーを配列に結合する。"

#: ../3.1.14_game_not_not.rst:538
msgid ""
"**random.choice(list(arrow.keys())):** Randomly select an element in the "
"array."
msgstr "**random.choice(list(arrow.keys()））：** 配列内の要素をランダムに選択する。"

#: ../3.1.14_game_not_not.rst:541
 
msgid ""
"So, The outcome of **waypoint=random.choice(list(arrow.keys()))** should "
"be \\\"right\\\" or \\\"left\\\"."
msgstr "したがって、**waypoint = random.choice（list（arrow.keys()））** の結果は「右」または「左」になります。"

#: ../3.1.14_game_not_not.rst:559
msgid "checkPoint() is to detect the current state of button input:"
msgstr "checkPoint()はボタン入力の現在の状態を検出する："

#: ../3.1.14_game_not_not.rst:561
msgid ""
"If no button is pressed or the button in the same direction as the the "
"arrow is pressed, the assigned value of the **``waypoint``** is "
"**``wrong``** and there displays ``x`` on the dot matrix."
msgstr ""
"ボタンが押されていないか、矢印と同じ方向のボタンが押されている場合、 **``ウェイポイント``** の割り当てられた値は "
"**``間違っています``** 、ドットマトリックスに ``x`` が表示されます。"

#: ../3.1.14_game_not_not.rst:565
 
msgid "Otherwise, the waypoint is right and \\\"**√**\\\" appears."
msgstr "それ以外の場合、ウェイポイントは正しく、「 **√** 」が表示される。"

#: ../3.1.14_game_not_not.rst:567
msgid ""
"Now the stage is **CHECK** and start a 1-second timer **timerCheck** to "
"call the function creatGlyph() in a second."
msgstr ""
"これで、ステージは **CHECK** になり、1秒のタイマー **timerCheck** "
"を開始して、関数creatGlyph()を1秒で呼び出します。"

#: ../3.1.14_game_not_not.rst:575
 
msgid ""
"In the function timeout(), set the parameter of checkPoint() as "
"\\\"**empty**\\\"."
msgstr "関数timeout()で、checkPoint()のパラメーターを「**empty**」に設定します。"

#: ../3.1.14_game_not_not.rst:586
msgid ""
"getKey() reads the state of these two buttons, and if the right button is"
" pressed, the parameter of checkPoint() is **right**; if the left button "
"is pressed, the parameter is **left**."
msgstr ""
"getKey()は、これら2つのボタンの状態を読み取り、右ボタンが押された場合、checkPoint()のパラメーターは **右** です。 "
"左ボタンが押された場合、パラメータは **左** です。"

#: ../3.1.14_game_not_not.rst:591
msgid "Phenomenon Picture"
msgstr "現象画像"

