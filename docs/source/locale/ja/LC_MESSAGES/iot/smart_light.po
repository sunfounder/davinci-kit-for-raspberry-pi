# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, sunfounder
# This file is distributed under the same license as the SunFounder Da Vinci
# Kit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Da Vinci Kit\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-07-29 17:00+0800\n"
"PO-Revision-Date: 2021-08-04 17:51+0800\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Last-Translator: \n"
"Language-Team: \n"
"X-Generator: Poedit 2.4.3\n"

#: ../iot/smart_light.rst:2
msgid "Smart Light"
msgstr "スマートライト"

#: ../iot/smart_light.rst:4
msgid ""
"In this project, we will learn to control the brightness of LED with "
"Cloud4RPi's Silder widget."
msgstr ""
"このプロジェクトでは、Cloud4RPiのSilder widgetを使用してLEDの明るさを制御"
"する方法を学びます。"

#: ../iot/smart_light.rst:7
msgid "Experimental Procedures"
msgstr "実験手順"

#: ../iot/smart_light.rst:9
msgid "Build the circuit."
msgstr "回路を構築します。"

#: ../iot/smart_light.rst:14
msgid "Open the code."
msgstr "コードを開きます。"

#: ../iot/smart_light.rst:25
msgid "Find the line below and fill in the correct device token."
msgstr "以下の行を見つけて、正しいdevice tokenを入力してください。"

#: ../iot/smart_light.rst:31
msgid "Run the code."
msgstr "コードを実行します。"

#: ../iot/smart_light.rst:41
msgid ""
"Go to Cloud4RPi, add a new Control Panel named project3, and click **Add "
"Widget** to add a **Slider** widget."
msgstr ""
"Cloud4RPiに移動し、project3という名前の新しいコントロールパネルを追加し、"
"**Add Widget** をクリックして **Slider** widgetを追加します。"

#: ../iot/smart_light.rst:46
msgid ""
"Once added, you can use the Slider widget to control the brightness of "
"the LED."
msgstr "追加すると、Slider widgetを使用してLEDの明るさを制御できます。"

#: ../iot/smart_light.rst:52
msgid "Code Explanation"
msgstr "コードの説明"

#: ../iot/smart_light.rst:59
msgid ""
"Call the ``GPIO.PWM()`` function to define ``LED_PIN`` as PWM pin and "
"set the frequency of PWM pin to 2000Hz, then use the ``start()`` "
"function to set the initial duty cycle to 0."
msgstr ""
"``GPIO.PWM()`` 関数を呼び出して ``LED_PIN`` をPWMピンとして定義し、PWMピンの"
"周波数を2000Hzに設定してから、``start()`` 関数を使用して初期デューティサイ"
"クルを0 に設定します。"

#: ../iot/smart_light.rst:65
msgid ""
"The value sent by Slider widget to Raspberry Pi is used as PWM duty "
"cycle to change the brightness of the LED."
msgstr ""
"Slider widgetからRaspberryPiに送信された値は、LEDの明るさを変更するための"
"PWMデューティサイクルとして使用されます。"

#: ../iot/smart_light.rst:77
msgid ""
"By setting the value of the ``'value'`` key, we can set the initial "
"value of the Slider widget, then always read the value of the "
"``'value'`` key and send the current level of ``LED_PIN`` (the value "
"returned by the function ``led_control``) to Cloud4RPi."
msgstr ""
"``'value'`` キーの値を設定することで、Slider widgetの初期値を設定し、常に"
" ``'value'`` キーの値を読み取り、現在のレベルの ``LED_PIN`` を送信できます。 "
"（関数 ``led_control`` によって返される値）をCloud4RPiに送信します。"
