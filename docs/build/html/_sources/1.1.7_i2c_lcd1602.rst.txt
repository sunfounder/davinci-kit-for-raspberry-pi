1.1.7 I2C LCD1602
======================

Introduction
------------------

LCD1602 is a character type liquid crystal display, which can display 32
(16*2) characters at the same time.

Components
-------------------

.. image:: media/list_i2c_lcd.png

Principle
-----------

**I2C LCD1602**

As we all know, though LCD and some other displays greatly enrich the
man-machine interaction, they share a common weakness. When they are
connected to a controller, multiple IOs will be occupied of the
controller which has no so many outer ports. Also it restricts other
functions of the controller. Therefore, LCD1602 with an I2C bus is
developed to solve the problem.

.. image:: media/i2c_lcd.png

**I2C communication**

I2C(Inter-Integrated Circuit) bus is a very popular and powerful bus for
communication between a master device (or master devices) and a single
or multiple slave devices.

I2C main controller can be used to control IO expander, various sensors,
EEPROM, ADC/DAC and so on. All of these are controlled only by the two
pins of host, the serial data (SDA1) line and the serial clock
line(SCL1).

Schematic Diagram
---------------------

============ ========
T-Board Name physical
SDA1         Pin 3
SCL1         Pin 5
============ ========

.. image:: media/schematic_i2c_lcd.png


Experimental Procedures
-----------------------------

**Step 1:** Build the circuit.

.. image:: media/image96.png


**Step 2**: Setup I2C (see :ref:`I2C Configuration`. If you have set I2C, skip this step.)

For C Language Users
^^^^^^^^^^^^^^^^^^^^^^^^^

**Step 3:** Change directory.

.. code-block::

    cd /home/pi/davinci-kit-for-raspberry-pi/c/1.1.7/

**Step 4:** Compile.

.. code-block::

    gcc 1.1.7_Lcd1602.c -lwiringPi

**Step 5:** Run.

.. code-block::

    sudo ./a.out

After the code runs, you can see ”Greetings”,”From SunFounder” displaying on the LCD.

**Code**

* `1.1.7_Lcd1602.c <https://github.com/sunfounder/davinci-kit-for-raspberry-pi/blob/master/c/1.1.7/1.1.7_Lcd1602.c>`_

**Code Explanation**

.. code-block::

    void write_word(int data){……}
    void send_command(int comm){……}
    void send_data(int data){……}
    void init(){……}
    void clear(){……}
    void write(int x, int y, char data[]){……}

These functions are used to control I2C LCD1602 open source code. They allow us to easily use I2C LCD1602.
Among these functions, init() is used for initialization, clear() is used to clear the screen, write() is used to write what is displayed, and other functions support the above functions.

.. code-block:: c

    fd = wiringPiI2CSetup(LCDAddr);

This function initializes the I2C system with the specified device symbol. The prototype of the function:

.. code-block:: c

    int wiringPiI2CSetup(int devId);

Parameters devId is the address of the I2C device, it can be found through the i2cdetect command(see Appendix) and the devId of I2C LCD1602 is generally 0x27.

.. code-block:: c

    void write(int x, int y, char data[]){}

In this function, data[] is the character to be printed on the LCD, and the parameters x and y determine the printing position (line y+1, column x+1 is the starting position of the character to be printed).

For Python Language Users
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

**Step 3:** Change directory.

.. code-block::

    cd /home/pi/davinci-kit-for-raspberry-pi/python/

**Step 4:** Run.

.. code-block::

    sudo python3 1.1.7_Lcd1602.py

After the code runs, you can see ”Greetings”,”From SunFounder” displaying on the LCD.

**Code** 

.. code-block:: python

    import LCD1602
    import time

    def setup():
        LCD1602.init(0x27, 1)   # init(slave address, background light)
        LCD1602.write(0, 0, 'Greetings!!')
        LCD1602.write(1, 1, 'from SunFounder')
        time.sleep(2)

    def destroy():
        LCD1602.clear()

    if __name__ == "__main__":
        try:
            setup()
        except KeyboardInterrupt:
            destroy()



**Code Explanation**

.. code-block:: python

    import LCD1602

This file is an open source file for controlling I2C LCD1602. It allows us to easily use I2C LCD1602.

.. code-block:: python

    LCD1602.init(0x27, 1) 

The function initializes the I2C system with the designated device symbol. The first parameter is the address of the I2C device, which can be detected through the i2cdetect command (see Appendix for details). The address of I2C LCD1602 is generally 0x27.

.. code-block:: python

    LCD1602.write(0, 0, 'Greetings!!')

Within this function, 'Greetings!! ' is the character to be printed on the Row 0+1, column 0+1 on LCD. 
Now you can see “Greetings! From SunFounder” displayed on the LCD.

Phenomenon Picture
--------------------------

.. image:: media/image97.jpeg
