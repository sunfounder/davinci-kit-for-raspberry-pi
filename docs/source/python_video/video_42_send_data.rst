.. note::

    Bonjour et bienvenue dans la communaut√© des passionn√©s de Raspberry Pi, Arduino et ESP32 de SunFounder sur Facebook ! Plongez plus profond√©ment dans l‚Äôunivers de Raspberry Pi, Arduino et ESP32 avec d‚Äôautres amateurs.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et surmontez les d√©fis techniques gr√¢ce √† l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des conseils et des tutoriels pour perfectionner vos comp√©tences.
    - **Aper√ßus exclusifs** : B√©n√©ficiez d'un acc√®s anticip√© aux nouvelles annonces de produits et √† des avant-premi√®res.
    - **R√©ductions sp√©ciales** : Profitez de remises exclusives sur nos nouveaux produits.
    - **Promotions et cadeaux festifs** : Participez √† des concours et des promotions sp√©ciales √† l‚Äôoccasion des f√™tes.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !


Vid√©o 42 : Comment envoyer des donn√©es au PC via WiFi ou Ethernet en utilisant UDP
=======================================================================================

Cette vid√©o montre comment configurer une communication client-serveur entre un Raspberry Pi et un PC en utilisant Python et le protocole UDP (User Datagram Protocol). Elle aborde la cr√©ation des programmes serveur et client, l'initialisation et la liaison des sockets, l'√©change de donn√©es, ainsi que la mise en ≈ìuvre de fonctionnalit√©s de base.

1. **Introduction √† la communication client-serveur** : Comprendre la n√©cessit√© de connexions distantes plus claires.
2. **Cr√©ation du programme serveur** : Guide √©tape par √©tape pour cr√©er un programme serveur sur Raspberry Pi √† l'aide de la biblioth√®que socket de Python.
3. **Initialisation et liaison des sockets** : Apprendre √† initialiser et √† lier les sockets pour la communication.
4. **√âchange de donn√©es** : Explorer le processus d'envoi et de r√©ception de donn√©es entre le PC et le Raspberry Pi.
5. **Cr√©ation du programme client** : D√©couvrir comment cr√©er un programme client sur le PC pour communiquer avec le serveur Raspberry Pi.
6. **Configuration de l'adresse du serveur** : Sp√©cifier l'adresse du serveur (l'IP du Raspberry Pi) dans le code client.
7. **Cr√©ation d‚Äôun client UDP** : Utiliser la biblioth√®que socket pour cr√©er un client UDP c√¥t√© client.
8. **Initiation de la communication** : Initier la communication en envoyant des requ√™tes du client vers le serveur.
9. **Traitement des requ√™tes c√¥t√© serveur** : Traiter les requ√™tes client et renvoyer des r√©ponses c√¥t√© serveur.
10. **D√©codage des donn√©es** : D√©coder les donn√©es re√ßues √† l'aide de l'encodage UTF-8 pour une meilleure lisibilit√©.
11. **Mise en ≈ìuvre de fonctionnalit√©s de base** : D√©montrer la communication bidirectionnelle √† travers un exemple simple de manipulation de compteur.


**Vid√©o**

.. raw:: html


    <iframe width="700" height="500" src="https://www.youtube.com/embed/S7Yle8clJ30?si=6PugK0FVZ9w5Pfy5" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

