.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _create_virtual:

Erstellen einer virtuellen Umgebung
======================================

Bei Verwendung von Raspberry Pi oder √§hnlichen Ger√§ten wird empfohlen, Pakete mit ``pip`` in einer virtuellen Umgebung zu installieren. Diese bietet eine Abh√§ngigkeitsisolierung, erh√∂ht die Systemsicherheit, gew√§hrleistet die Sauberkeit des Systems und erleichtert Projektmigration und -freigabe, was die Abh√§ngigkeitsverwaltung vereinfacht. Diese Vorteile machen virtuelle Umgebungen zu einem √§u√üerst wichtigen und n√ºtzlichen Werkzeug in der Python-Entwicklung.

Im Folgenden finden Sie die Schritte zur Erstellung einer virtuellen Umgebung:

**1. Erstellen einer virtuellen Umgebung**

Zun√§chst m√ºssen Sie sicherstellen, dass Ihr System Python installiert hat. Python-Version 3.3 und sp√§ter werden mit dem ``venv``-Modul geliefert, um virtuelle Umgebungen zu erstellen, was die separate Installation √ºberfl√ºssig macht. Wenn Sie Python 2 oder eine Version vor Python 3.3 verwenden, m√ºssen Sie ``virtualenv`` installieren.

* F√ºr Python 3:

Python-Versionen 3.3 und sp√§ter k√∂nnen direkt das ``venv``-Modul verwenden:

.. raw:: html

    <run></run>

.. code-block:: shell

    python3 -m venv myenv

Dies erstellt eine virtuelle Umgebung namens ``myenv`` im aktuellen Verzeichnis.

* F√ºr Python 2:

Wenn Sie immer noch Python 2 verwenden, m√ºssen Sie zuerst ``virtualenv`` installieren:

.. raw:: html

    <run></run>

.. code-block:: shell

    pip install virtualenv

Erstellen Sie dann eine virtuelle Umgebung:

.. raw:: html

    <run></run>

.. code-block:: shell

    virtualenv myenv

Dies erstellt ebenfalls eine virtuelle Umgebung namens ``myenv`` im aktuellen Verzeichnis.

**2. Aktivieren der virtuellen Umgebung**

Nachdem Sie die virtuelle Umgebung erstellt haben, m√ºssen Sie sie f√ºr die Verwendung aktivieren.

.. note::

    Jedes Mal, wenn Sie den Raspberry Pi neu starten oder ein neues Terminal √∂ffnen, m√ºssen Sie erneut den folgenden Befehl ausf√ºhren, um die virtuelle Umgebung zu aktivieren.

.. raw:: html

    <run></run>

.. code-block:: shell

    source myenv/bin/activate

Sobald die virtuelle Umgebung aktiviert ist, sehen Sie den Umgebungsnamen vor dem Befehlszeilen-Prompt, was darauf hinweist, dass Sie innerhalb der virtuellen Umgebung arbeiten.


**3. Abh√§ngigkeiten installieren**

Mit der aktivierten virtuellen Umgebung k√∂nnen Sie pip verwenden, um die erforderlichen Abh√§ngigkeiten zu installieren. Zum Beispiel:

.. raw:: html

    <run></run>

.. code-block:: shell

    pip install requests

Dies installiert die Requests-Bibliothek in die aktuelle virtuelle Umgebung anstelle der globalen Umgebung. Dieser Schritt muss nur einmal ausgef√ºhrt werden.


**4. Verlassen der virtuellen Umgebung**

Wenn Sie Ihre Arbeit abgeschlossen haben und die virtuelle Umgebung verlassen m√∂chten, f√ºhren Sie einfach folgenden Befehl aus:

.. raw:: html

    <run></run>

.. code-block:: shell

    deactivate

Dadurch kehren Sie zur globalen Python-Umgebung des Systems zur√ºck.

**5. L√∂schen der virtuellen Umgebung**

Wenn Sie eine bestimmte virtuelle Umgebung nicht mehr ben√∂tigen, k√∂nnen Sie einfach das Verzeichnis l√∂schen, das die virtuelle Umgebung enth√§lt:

.. raw:: html

    <run></run>

.. code-block:: shell

    rm -rf myenv

