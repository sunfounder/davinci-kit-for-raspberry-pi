.. note::

    Bonjour et bienvenue dans la communaut√© SunFounder d√©di√©e aux passionn√©s de Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez dans l'univers du Raspberry Pi, d'Arduino et d'ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez vos probl√®mes apr√®s-vente et relevez des d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des conseils et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux nouvelles annonces de produits et aux aper√ßus.
    - **R√©ductions sp√©ciales** : Profitez de remises exclusives sur nos nouveaux produits.
    - **Promotions festives et cadeaux** : Participez √† des tirages au sort et √† des promotions sp√©ciales pour les f√™tes.

    üëâ Pr√™t(e) √† explorer et √† cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

2.1.3 Interrupteur √† bascule
===============================

Introduction
--------------

Il s'agit d'un interrupteur √† bascule avec une bille m√©tallique √† l'int√©rieur. 
Il est utilis√© pour d√©tecter les inclinaisons √† faible angle.

Composants
--------------

.. image:: img/list_2.1.3_tilt_switch.png


Principe
-----------

**Interrupteur √† bascule**

Le principe est tr√®s simple. Lorsque l'interrupteur est inclin√© selon un certain 
angle, la bille √† l'int√©rieur roule et touche les deux contacts reli√©s aux broches 
ext√©rieures, d√©clenchant ainsi les circuits. Sinon, la bille reste √©loign√©e des 
contacts, interrompant les circuits.

.. image:: img/image167.png


Sch√©ma de c√¢blage
---------------------

.. image:: img/image307.png


.. image:: img/image308.png


Proc√©dures exp√©rimentales
----------------------------

**√âtape 1 :** Montez le circuit.

.. image:: img/image169.png
    :width: 800

**√âtape 2 :** Changez de r√©pertoire.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/davinci-kit-for-raspberry-pi/c/2.1.3/

**√âtape 3 :** Compilez le code.

.. raw:: html

   <run></run>

.. code-block::

    gcc 2.1.3_Tilt.c -lwiringPi

**√âtape 4 :** Ex√©cutez le programme.

.. raw:: html

   <run></run>

.. code-block::

    sudo ./a.out

Placez l'interrupteur √† l'horizontale, et la LED verte s'allumera. Si vous l'inclinez, 
le message ¬´ Inclinaison ! ¬ª s'affichera √† l'√©cran et la LED rouge s'allumera. 
Remettez-le √† l'horizontale, et la LED verte se rallumera.

.. note::

    Si cela ne fonctionne pas apr√®s l'ex√©cution, ou s'il y a un message 
    d'erreur indiquant : \"wiringPi.h: No such file or directory\", veuillez 
    consulter :ref:`C code is not working?`.

**Code**

.. code-block:: c

    #include <wiringPi.h>
    #include <stdio.h>

    #define TiltPin     0
    #define Gpin        2
    #define Rpin        3

    void LED(char* color)
    {
        pinMode(Gpin, OUTPUT);
        pinMode(Rpin, OUTPUT);
        if (color == "RED")
        {
            digitalWrite(Rpin, HIGH);
            digitalWrite(Gpin, LOW);
        }
        else if (color == "GREEN")
        {
            digitalWrite(Rpin, LOW);
            digitalWrite(Gpin, HIGH);
        }
        else
            printf("LED Error");
    }

    int main(void)
    {
        if(wiringPiSetup() == -1){ // Si l'initialisation de wiringPi √©choue, affichez un message √† l'√©cran
            printf("setup wiringPi failed !");
            return 1;
        }

        pinMode(TiltPin, INPUT);
        LED("GREEN");
        
        while(1){
            if(0 == digitalRead(TiltPin)){
                delay(10);
                if(0 == digitalRead(TiltPin)){
                    LED("RED");
                    printf("Tilt!\n");
                    delay(100);
                }
            }
            else if(1 == digitalRead(TiltPin)){
                delay(10);
                if(1 == digitalRead(TiltPin)){
                    LED("GREEN");
                }
            }
        }
        return 0;
    }

**Explication du code**

.. code-block:: c

    void LED(char* color)
    {
        pinMode(Gpin, OUTPUT);
        pinMode(Rpin, OUTPUT);
        if (color == "RED")
        {
            digitalWrite(Rpin, HIGH);
            digitalWrite(Gpin, LOW);
        }
        else if (color == "GREEN")
        {
            digitalWrite(Rpin, LOW);
            digitalWrite(Gpin, HIGH);
        }
        else
            printf("LED Error");
    }

D√©finissez une fonction LED() pour allumer ou √©teindre les deux LEDs. Si le 
param√®tre color est RED, la LED rouge s'allume ; de m√™me, si le param√®tre color 
est GREEN, la LED verte s'allume.

.. code-block:: c

    while(1){
            if(0 == digitalRead(TiltPin)){
                delay(10);
                if(0 == digitalRead(TiltPin)){
                    LED("RED");
                    printf("Tilt!\n");
                }
            }
            else if(1 == digitalRead(TiltPin)){
                delay(10);
                if(1 == digitalRead(TiltPin)){
                    LED("GREEN");
                }
            }
        }

Si la valeur lue de l'interrupteur √† bascule est 0, cela signifie que 
l'interrupteur est inclin√©. √âcrivez alors le param√®tre ¬´ RED ¬ª dans la 
fonction LED pour allumer la LED rouge ; sinon, la LED verte s'allume.
