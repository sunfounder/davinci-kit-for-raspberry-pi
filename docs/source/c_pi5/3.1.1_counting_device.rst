.. note::

    Â¡Hola! Bienvenidos a la comunidad de entusiastas de SunFounder para Raspberry Pi, Arduino y ESP32 en Facebook. SumÃ©rgete en el mundo de Raspberry Pi, Arduino y ESP32 junto con otros apasionados.

    **Â¿Por quÃ© unirse?**

    - **Soporte de Expertos**: Soluciona problemas post-venta y desafÃ­os tÃ©cnicos con la ayuda de nuestra comunidad y equipo.
    - **Aprende y Comparte**: Intercambia consejos y tutoriales para mejorar tus habilidades.
    - **Avances Exclusivos**: Accede anticipadamente a anuncios de nuevos productos y adelantos.
    - **Descuentos Especiales**: Disfruta de descuentos exclusivos en nuestros productos mÃ¡s recientes.
    - **Promociones y Sorteos Festivos**: Participa en sorteos y promociones especiales en dÃ­as festivos.

    ðŸ‘‰ Â¿Listo para explorar y crear con nosotros? Haz clic en [|link_sf_facebook|] y Ãºnete hoy.

3.1.1 Dispositivo Contador
==============================

IntroducciÃ³n
-----------------

AquÃ­ crearemos un sistema contador que muestra el nÃºmero de personas, 
compuesto por un sensor PIR y un display de 4 dÃ­gitos. Cuando el PIR 
detecta que alguien pasa, el nÃºmero en el display de 4 dÃ­gitos incrementarÃ¡ 
en 1. Puedes usar este contador para contar el nÃºmero de personas que 
atraviesan un pasillo.

Componentes
---------------

.. image:: img/list_Counting_Device1.png
    :align: center

.. image:: img/list_Counting_Device2.png
    :align: center

Diagrama de Circuito
------------------------

============ ======== ======== ===
T-Board Name physical wiringPi BCM
GPIO17       Pin 11   0        17
GPIO27       Pin 13   2        27
GPIO22       Pin 15   3        22
SPIMOSI      Pin 19   12       10
GPIO18       Pin 12   1        18
GPIO23       Pin 16   4        23
GPIO24       Pin 18   5        24
GPIO26       Pin 37   25       26
============ ======== ======== ===

.. image:: img/Schematic_three_one1.png
   :align: center

Procedimientos Experimentales
---------------------------------

**Paso 1**: Construye el circuito.

.. image:: img/image235.png
   :alt: è®¡æ•°å™¨_bb
   :width: 800

**Paso 2**: Accede a la carpeta del cÃ³digo.

.. raw:: html

   <run></run>

.. code-block:: 

    cd ~/davinci-kit-for-raspberry-pi/c/3.1.1/

**Paso 3**: Compila el cÃ³digo.

.. raw:: html

   <run></run>

.. code-block:: 

    gcc 3.1.1_CountingDevice.c -lwiringPi

**Paso 4**: Ejecuta el archivo ejecutable.

.. raw:: html

    <run></run>
 
.. code-block:: 
 
    sudo ./a.out
 
Cuando el cÃ³digo se ejecute, cada vez que el PIR detecte que alguien 
pasa, el nÃºmero en el display de 4 dÃ­gitos incrementarÃ¡ en 1.

El mÃ³dulo PIR tiene dos potenciÃ³metros: uno para ajustar la sensibilidad 
y el otro para ajustar la distancia de detecciÃ³n. Para optimizar el 
funcionamiento del mÃ³dulo PIR, ajusta ambos potenciÃ³metros al mÃ¡ximo en 
sentido antihorario.

.. note::

    Si no funciona despuÃ©s de ejecutar el cÃ³digo, o aparece el mensaje de error: "wiringPi.h: No such file or directory", consulta :ref:`c code is not working?`.
    
**ExplicaciÃ³n del CÃ³digo**

.. code-block:: c

    voidÂ display()
    {
    Â Â Â Â clearDisplay();
    Â Â Â Â pickDigit(0);
    Â Â Â Â hc595_shift(number[counterÂ %Â 10]);

    Â Â Â Â clearDisplay();
    Â Â Â Â pickDigit(1);
    Â Â Â Â hc595_shift(number[counterÂ %Â 100Â /Â 10]);

    Â Â Â Â clearDisplay();
    Â Â Â Â pickDigit(2);
    Â Â Â Â hc595_shift(number[counterÂ %Â 1000Â /Â 100]);
    Â 
    Â Â Â Â clearDisplay();
    Â Â Â Â pickDigit(3);
    Â Â Â Â hc595_shift(number[counterÂ %Â 10000Â /Â 1000]);
    }

Primero, se inicia el display del cuarto segmento y se escribe el dÃ­gito 
de las unidades. Luego se inicia el tercer segmento para mostrar las decenas; 
despuÃ©s se activan respectivamente el segundo y el primer segmento, mostrando 
los valores de centenas y millares. Debido a la rÃ¡pida velocidad de actualizaciÃ³n, 
se observa un display completo de cuatro dÃ­gitos.

.. code-block:: c

    voidÂ loop(){
    Â Â Â Â intÂ currentStateÂ =0;
    Â Â Â Â intÂ lastState=0;
    Â Â Â Â while(1){
    Â Â Â Â Â Â Â Â display();
    Â Â Â Â Â Â Â Â currentState=digitalRead(sensorPin);
    Â Â Â Â Â Â Â Â if((currentState==0)&&(lastState==1)){
    Â Â Â Â Â Â Â Â Â Â Â Â counterÂ +=1;
    Â Â Â Â Â Â Â Â }
    Â Â Â Â Â Â Â Â lastState=currentState;
    Â Â Â Â }
    }

Esta es la funciÃ³n principal: muestra el nÃºmero en el display de 4 dÃ­gitos 
y lee el valor del PIR. Cuando el PIR detecta que alguien pasa, el nÃºmero 
en el display de 4 dÃ­gitos se incrementarÃ¡ en 1.
