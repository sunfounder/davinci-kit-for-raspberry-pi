.. note::

    ¬°Hola! Bienvenido a la comunidad de entusiastas de SunFounder Raspberry Pi, Arduino y ESP32 en Facebook. Profundiza en Raspberry Pi, Arduino y ESP32 con otros entusiastas.

    **¬øPor qu√© unirte?**

    - **Soporte experto**: Resuelve problemas post-venta y desaf√≠os t√©cnicos con la ayuda de nuestra comunidad y equipo.
    - **Aprender y compartir**: Intercambia consejos y tutoriales para mejorar tus habilidades.
    - **Avances exclusivos**: Accede anticipadamente a anuncios de nuevos productos y vistas previas.
    - **Descuentos especiales**: Disfruta de descuentos exclusivos en nuestros productos m√°s recientes.
    - **Promociones festivas y sorteos**: Participa en sorteos y promociones navide√±as.

    üëâ ¬øListo para explorar y crear con nosotros? Haz clic en [|link_sf_facebook|] y √∫nete hoy.

1.3.4 Rel√©
=============

Introducci√≥n
---------------

En esta lecci√≥n, aprenderemos a utilizar un rel√©. Es uno de los componentes 
m√°s comunes en los sistemas de control autom√°tico. Cuando el voltaje, la 
corriente, la temperatura, la presi√≥n, etc., alcanzan, superan o son inferiores 
al valor predeterminado, el rel√© conectar√° o interrumpir√° el circuito, para 
controlar y proteger el equipo.

Componentes
-------------

.. image:: img/list_1.3.4.png

Principio
------------

**Diodo**

Un diodo es un componente electr√≥nico de dos terminales que permite el flujo 
unidireccional de la corriente. Ofrece baja resistencia en la direcci√≥n del 
flujo de corriente y alta resistencia en la direcci√≥n opuesta. Los diodos se 
utilizan principalmente para prevenir da√±os a los componentes, especialmente 
debido a la fuerza electromotriz en circuitos que generalmente est√°n polarizados.

.. image:: img/image344.png

Los dos terminales de un diodo est√°n polarizados, siendo el extremo positivo 
llamado √°nodo y el extremo negativo llamado c√°todo. El c√°todo generalmente est√° 
hecho de plata o tiene una banda de color. Controlar la direcci√≥n del flujo de 
corriente es una de las caracter√≠sticas clave de los diodos: la corriente en un 
diodo fluye del √°nodo al c√°todo. El comportamiento de un diodo es similar al de 
una v√°lvula de retenci√≥n. Una de las caracter√≠sticas m√°s importantes de un diodo 
es su curva caracter√≠stica de corriente y voltaje. Si se conecta un voltaje mayor 
al √°nodo, la corriente fluye del √°nodo al c√°todo, lo que se conoce como polarizaci√≥n 
directa. Sin embargo, si el voltaje mayor se conecta al c√°todo, el diodo no conduce 
electricidad, y el proceso se llama polarizaci√≥n inversa.

**Rel√©**

Como sabemos, un rel√© es un dispositivo que se utiliza para proporcionar conexi√≥n entre 
dos o m√°s puntos o dispositivos en respuesta a una se√±al de entrada aplicada. En otras 
palabras, los rel√©s proporcionan aislamiento entre el controlador y el dispositivo, ya que 
los dispositivos pueden funcionar tanto con CA como con CC. Sin embargo, reciben se√±ales de 
un microcontrolador que funciona con CC, por lo que se requiere un rel√© para cerrar la brecha. 
El rel√© es extremadamente √∫til cuando necesitas controlar una gran cantidad de corriente o voltaje 
con una peque√±a se√±al el√©ctrica.

Hay 5 partes en cada rel√©:

**Electroim√°n** - Consiste en un n√∫cleo de hierro enrollado con un bobinado de 
alambre. Cuando pasa electricidad a trav√©s de √©l, se vuelve magn√©tico. Por lo 
tanto, se llama electroim√°n.

**Armadura** - La tira magn√©tica m√≥vil se conoce como armadura. Cuando la 
corriente fluye a trav√©s de ella, la bobina se energiza, produciendo un campo 
magn√©tico que se utiliza para abrir o cerrar los puntos normalmente abiertos 
(N/O) o normalmente cerrados (N/C). Y la armadura puede moverse con corriente 
continua (CC) as√≠ como con corriente alterna (CA).

**Resorte** - Cuando no hay corriente fluyendo a trav√©s de la bobina del 
electroim√°n, el resorte aleja la armadura, por lo que el circuito no se completa.

**Conjunto de contactos el√©ctricos** - Hay dos puntos de contacto:

- Normalmente abierto: conectado cuando el rel√© est√° activado y desconectado cuando est√° inactivo.

- Normalmente cerrado: no conectado cuando el rel√© est√° activado y conectado cuando est√° inactivo.

**Marco moldeado** - Los rel√©s est√°n cubiertos de pl√°stico para protecci√≥n.

**Funcionamiento del rel√©**

El principio de funcionamiento del rel√© es simple. Cuando se suministra energ√≠a 
al rel√©, comienza a fluir corriente a trav√©s de la bobina de control; como 
resultado, el electroim√°n comienza a energizarse. Luego, la armadura es atra√≠da 
hacia la bobina, bajando el contacto m√≥vil y conect√°ndose con los contactos 
normalmente abiertos. As√≠, el circuito con la carga se energiza. Romper el 
circuito ser√≠a un caso similar, ya que el contacto m√≥vil ser√° levantado hacia 
los contactos normalmente cerrados bajo la fuerza del resorte. De esta manera, 
el encendido y apagado del rel√© puede controlar el estado de un circuito de carga.

.. image:: img/image142.jpeg

Diagrama esquem√°tico
------------------------

.. image:: img/image345.png


Procedimientos experimentales
--------------------------------

**Paso 1:** Construir el circuito.

.. image:: img/image144.png
    :width: 800

**Paso 2**: Abrir el archivo de c√≥digo.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/davinci-kit-for-raspberry-pi/c/1.3.4

**Paso 3:** Compilar el c√≥digo.

.. raw:: html

   <run></run>

.. code-block::

    gcc 1.3.4_Relay.c -lwiringPi

**Paso 4:** Ejecutar el archivo ejecutable.

.. raw:: html

   <run></run>

.. code-block::

    sudo ./a.out

Despu√©s de ejecutar el c√≥digo, el LED se encender√°. Adem√°s, podr√°s escuchar 
un tic-tac causado por la ruptura del contacto normalmente cerrado y el cierre 
del contacto normalmente abierto.

.. note::

    Si no funciona despu√©s de ejecutarlo, o aparece un mensaje de error: \"wiringPi.h: No such file or directory\", consulta :ref:`C code is not working?`.

**C√≥digo**

.. code-block:: c

    #include <wiringPi.h>
    #include <stdio.h>
    #define RelayPin 0

    int main(void){
        if(wiringPiSetup() == -1){ //cuando la inicializaci√≥n de wiring falla, imprime un mensaje en pantalla
            printf("setup wiringPi failed !");
            return 1;
        }
        pinMode(RelayPin, OUTPUT);   //configura GPIO17(GPIO0) como salida
        while(1){
            // Tick
            printf("Relay Open......\n");
            delay(100);
            digitalWrite(RelayPin, LOW);
            delay(1000);
            // Tock
            printf("......Relay Close\n");
            delay(100);
            digitalWrite(RelayPin, HIGH);
            delay(1000);
        }

        return 0;
    }

**Explicaci√≥n del c√≥digo**

.. code-block:: c

    digitalWrite(RelayPin, LOW);

Establece el puerto de E/S como nivel bajo (0V), por lo que el transistor 
no se energiza y la bobina no recibe corriente. No hay fuerza electromagn√©tica, 
por lo que el rel√© se abre y el LED no se enciende.

.. code-block:: c

    digitalWrite(RelayPin, HIGH);

Establece el puerto de E/S como nivel alto (5V) para energizar el transistor. 
La bobina del rel√© se alimenta y genera fuerza electromagn√©tica, y el rel√© se 
cierra, encendiendo el LED.
