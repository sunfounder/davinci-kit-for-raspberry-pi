.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _1.3.1_py_pi5:

1.3.1 Motor
=============

Einf√ºhrung
-----------------

In diesem Projekt werden wir lernen, wie man einen Gleichstrommotor mit einem L293D antreibt
und ihn im Uhrzeigersinn und gegen den Uhrzeigersinn drehen l√§sst. Da der Gleichstrommotor
einen gr√∂√üeren Strom ben√∂tigt, verwenden wir aus Sicherheitsgr√ºnden das Power Supply
Modul, um die Motoren zu versorgen.

Ben√∂tigte Komponenten
------------------------------

F√ºr dieses Projekt ben√∂tigen wir die folgenden Komponenten.

.. image:: ../python_pi5/img/1.3.1_motor_list.png



Schaltplan
------------------

.. image:: ../python_pi5/img/1.3.1_motor_schematic.png


Experimentelle Verfahren
---------------------------

**Schritt 1:** Bauen Sie den Schaltkreis auf.

.. image:: ../python_pi5/img/1.3.1_motor_circuit.png

.. note::
    Das Power-Modul kann eine 9V-Batterie mit dem 9V-Batterie
    Schnalle im Kit anwenden. Stecken Sie die Jumperkappe des Power-Moduls in die 5V
    Busleisten des Steckbretts.

.. image:: ../python_pi5/img/1.3.1_motor_battery.jpeg

**Schritt 2:** Wechseln Sie in den Ordner des Codes.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/davinci-kit-for-raspberry-pi/python-pi5

**Schritt 3:** Ausf√ºhren.

.. raw:: html

   <run></run>

.. code-block::

    sudo python3 1.3.1_Motor_zero.py

Wenn der Code ausgef√ºhrt wird, dreht sich der Motor zuerst 5 Sekunden lang im Uhrzeigersinn, dann stoppt er f√ºr 5 Sekunden,
danach dreht er sich 5 Sekunden lang gegen den Uhrzeigersinn; anschlie√üend stoppt der Motor
f√ºr 5 Sekunden. Diese Serie von Aktionen wird wiederholt ausgef√ºhrt.

**Code**

.. note::

    Sie k√∂nnen den unten stehenden Code **Modifizieren/Zur√ºcksetzen/Kopieren/Ausf√ºhren/Stoppen**. Aber bevor Sie das tun, m√ºssen Sie zum Quellcode-Pfad wie ``davinci-kit-for-raspberry-pi/python-pi5`` gehen. Nachdem Sie den Code ge√§ndert haben, k√∂nnen Sie ihn direkt ausf√ºhren, um die Auswirkungen zu sehen.


.. raw:: html

    <run></run>

.. code-block:: python

   #!/usr/bin/env python3
   from gpiozero import Motor
   from time import sleep

   # Initialisieren Sie den Motor mit GPIO Zero, indem Sie GPIO-Pins f√ºr Vorw√§rts (17), R√ºckw√§rts (27) und Enable (22) Kontrolle angeben
   motor = Motor(forward=17, backward=27, enable=22)

   try:
       # Hauptfunktion zur Steuerung der Richtung und Bewegung des Motors.
       # Wechselt die Drehrichtung des Motors zwischen im Uhrzeigersinn und gegen den Uhrzeigersinn mit Stopps dazwischen.
       actions = {'CW': motor.forward, 'CCW': motor.backward, 'STOP': motor.stop}  # Motoraktionen f√ºr Lesbarkeit definieren
       
       while True:
           # Durch die definierten Aktionen zyklen, um die Motordrehrichtung zu steuern
           for action in ['CW', 'STOP', 'CCW', 'STOP']:
               actions[action]()  # F√ºhren Sie die aktuelle Aktion aus (vorw√§rts, stoppen, r√ºckw√§rts, stoppen)
               print(f"{action}")  # Zeigen Sie die aktuelle Aktion in der Konsole an
               sleep(5)  # Pause f√ºr 5 Sekunden, bevor Sie zur n√§chsten Aktion √ºbergehen

   except KeyboardInterrupt:
       # Tastaturunterbrechung (z. B. Ctrl+C) sauber behandeln
       pass


**Code-Erkl√§rung**

#. Diese Importanweisungen holen die Klasse ``Motor`` aus der Bibliothek ``gpiozero`` und die Funktion ``sleep`` aus dem Modul ``time``.
    
   .. code-block:: python  

       #!/usr/bin/env python3
       from gpiozero import Motor
       from time import sleep
      

#. Diese Zeile initialisiert ein ``Motor``-Objekt und gibt die GPIO-Pins f√ºr Vorw√§rts (17), R√ºckw√§rts (27) und Enable (22) Kontrolle an.
    
   .. code-block:: python
       
       # Initialisieren Sie den Motor mit GPIO Zero, indem Sie GPIO-Pins f√ºr Vorw√§rts (17), R√ºckw√§rts (27) und Enable (22) Kontrolle angeben
       motor = Motor(forward=17, backward=27, enable=22)
      

#. Die Aktionen zur Motorsteuerung sind in einem W√∂rterbuch f√ºr die Lesbarkeit definiert. Eine unendliche Schleife (`while True`) iteriert durch diese Aktionen und f√ºhrt jede f√ºr 5 Sekunden aus.
    
   .. code-block:: python
       
       try:
           # Hauptfunktion zur Steuerung der Richtung und Bewegung des Motors.
           # Wechselt die Drehrichtung des Motors zwischen im Uhrzeigersinn und gegen den Uhrzeigersinn mit Stopps dazwischen.
           actions = {'CW': motor.forward, 'CCW': motor.backward, 'STOP': motor.stop}  # Motoraktionen f√ºr Lesbarkeit definieren
           
           while True:
               # Durch die definierten Aktionen zyklen, um die Motordrehrichtung zu steuern
               for action in ['CW', 'STOP', 'CCW', 'STOP']:
                   actions[action]()  # F√ºhren Sie die aktuelle Aktion aus (vorw√§rts, stoppen, r√ºckw√§rts, stoppen)
                   print(f"{action}")  # Zeigen Sie die aktuelle Aktion in der Konsole an
                   sleep(5)  # Pause f√ºr 5 Sekunden, bevor Sie zur n√§chsten Aktion √ºbergehen
      

#. Dieser Abschnitt erm√∂glicht es, das Programm sicher mit einer Tastaturunterbrechung (Ctrl+C) zu beenden, ohne Fehler zu verursachen.
    
   .. code-block:: python
       
       except KeyboardInterrupt:
           # Tastaturunterbrechung (z. B. Ctrl+C) sauber behandeln
           pass
      

