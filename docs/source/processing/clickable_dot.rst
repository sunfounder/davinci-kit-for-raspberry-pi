.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder d√©di√©e aux passionn√©s de Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez plus profond√©ment dans l'univers du Raspberry Pi, de l'Arduino et de l'ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez vos probl√®mes apr√®s-vente et relevez vos d√©fis techniques gr√¢ce √† l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : B√©n√©ficiez d'un acc√®s anticip√© aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos derniers produits.
    - **Promotions festives et concours** : Participez √† des concours et √† des promotions sp√©ciales lors des p√©riodes de f√™te.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

Clickable Dot
==================

Nous avons d√©j√† essay√© de dessiner des graphiques anim√©s, de r√©pondre aux √©v√©nements de la souris et de contr√¥ler une LED. Alors pourquoi ne pas combiner ces fonctionnalit√©s pour dessiner un point cliquable permettant de contr√¥ler la LED ?  

.. image:: img/clickable_dot_on.png

**C√¢blage**

.. image:: img/image49.png

**Code**

.. code-block:: arduino

    import processing.io.*; 
    boolean state = false;
    int ledPin = 17;

    void setup() {
        GPIO.pinMode(ledPin, GPIO.OUTPUT);
        background(255);
    }

    void draw() {
        if (state == true) { 
            GPIO.digitalWrite(ledPin, GPIO.LOW);
            fill(255, 0, 0);
        }else { 
            GPIO.digitalWrite(ledPin, GPIO.HIGH);
            fill(155);
        }
        ellipse(width/2, height/2, width*0.75, height*0.75);
    }

    void mouseClicked() {
        // Basculer l'√©tat :
        if (2*dist(mouseX,mouseY,width/2, height/2)<=width*0.75)
            {state = !state;}
        }


**Comment √ßa fonctionne ?**

Ce projet est tr√®s similaire au :ref:`Blinking Dot`, √† la diff√©rence qu'ici, l'√©tat de bascule est contr√¥l√© par un √©v√©nement de la souris. Cela signifie que la LED ne clignote pas automatiquement, mais s'allume et s'√©teint avec un clic de souris.

Dans l'√©v√©nement ``mouseClicked()``, la fonction ``dist()`` est utilis√©e pour d√©terminer la position de la souris au moment du clic. Le point est consid√©r√© comme cliqu√© uniquement si la distance entre la souris et le centre du point est inf√©rieure au rayon.

Pour plus d'informations, consultez la `Processing Reference <https://processing.org/reference/>`_.
