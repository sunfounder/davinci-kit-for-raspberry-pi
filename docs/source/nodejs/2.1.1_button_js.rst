.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder pour les passionn√©s de Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez plus profond√©ment dans l‚Äôunivers du Raspberry Pi, de l‚ÄôArduino et de l‚ÄôESP32 avec d‚Äôautres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d‚Äôexperts** : R√©solvez vos probl√®mes apr√®s-vente et surmontez vos d√©fis techniques gr√¢ce √† l‚Äôaide de notre communaut√© et de notre √©quipe.
    - **Apprenez et Partagez** : √âchangez des conseils et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : B√©n√©ficiez d‚Äôun acc√®s anticip√© aux annonces de nouveaux produits et √† des avant-premi√®res.
    - **R√©ductions sp√©ciales** : Profitez de remises exclusives sur nos derniers produits.
    - **Promotions festives et cadeaux** : Participez √† des concours et des promotions sp√©ciales.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd‚Äôhui !

2.1.1 Button
===============

Introduction
--------------

Dans ce projet, nous allons apprendre √† allumer ou √©teindre une LED en utilisant un bouton.

Composants
------------

.. image:: ../img/list_2.1.1_Button.png


Sch√©ma de c√¢blage
-------------------

Utilisez un bouton normalement ouvert comme entr√©e pour le Raspberry Pi. Le 
sch√©ma de connexion est illustr√© ci-dessous. Lorsque le bouton est enfonc√©, 
le GPIO18 passe au niveau bas (0V). Nous pouvons d√©tecter l'√©tat du GPIO18 
par programmation. Ainsi, si le GPIO18 est au niveau bas, cela signifie que 
le bouton est press√©. Vous pouvez alors ex√©cuter le code correspondant lorsque 
le bouton est press√©, et la LED s‚Äôallumera.

.. note::
    La broche la plus longue de la LED est l'anode (positive) et la plus courte 
    est la cathode (n√©gative).

.. image:: ../img/image302.png


.. image:: ../img/image303.png


Proc√©dures exp√©rimentales
-----------------------------

**√âtape 1 :** Construire le circuit.

.. image:: ../img/image152.png

**√âtape 2 :** Acc√©der au dossier du code.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/davinci-kit-for-raspberry-pi/nodejs/

**√âtape 3 :** Ex√©cuter le code.

.. raw:: html

   <run></run>

.. code-block::

    sudo node button.js

Maintenant, appuyez sur le bouton et la LED s'allumera ; rel√¢chez le bouton 
et la LED s'√©teindra.

**Code**

.. code-block:: js

    const Gpio = require('pigpio').Gpio;

    
    const led = new Gpio(17, {mode: Gpio.OUTPUT});

    const button = new Gpio(18, {
      mode: Gpio.INPUT,
      pullUpDown: Gpio.PUD_DOWN,
      edge: Gpio.EITHER_EDGE
    });


    button.on('interrupt', (level) => {
      led.digitalWrite(level);
    });

**Explication du code**

.. code-block:: js

    const Gpio = require('pigpio').Gpio;

    const led = new Gpio(17, {mode: Gpio.OUTPUT});

Importer le module ``pigpio`` et cr√©er un objet led pour contr√¥ler le port IO Gpio17, en le d√©finissant en mode sortie.

.. code-block:: js

    const button = new Gpio(18, {
      mode: Gpio.INPUT,
      pullUpDown: Gpio.PUD_DOWN,
      edge: Gpio.EITHER_EDGE
    });

Cr√©er un objet button pour contr√¥ler le port IO Gpio18, le d√©finir en mode entr√©e, 
avec une r√©sistance de tirage vers le bas (niveau bas lorsque le bouton n'est pas press√©, 
niveau haut lorsqu'il est press√©). Le mode d'interruption est d√©fini sur ``EITHER_EDGE``, 
c'est-√†-dire que les flancs montants et descendants d√©clenchent la fonction d'interruption.

.. code-block:: js

    button.on('interrupt', (level) => {
      led.digitalWrite(level);
    });

√âcrire une fonction d'interruption. Lorsque le bouton est press√©, cela correspond √† un flanc descendant, 
ce qui d√©clenche la fonction d‚Äôinterruption. √Ä ce moment-l√†, le niveau bas du port IO du bouton est transmis 
au port IO de la LED, et la LED s‚Äôallume.

Quand le bouton est rel√¢ch√©, il s'agit d'un flanc montant, d√©clenchant √† nouveau la fonction 
d‚Äôinterruption. √Ä ce moment-l√†, le niveau haut du port IO du bouton est transmis au port IO 
de la LED, et la LED s‚Äô√©teint.

Image du r√©sultat
---------------------

.. image:: ../img/image153.jpeg

  
