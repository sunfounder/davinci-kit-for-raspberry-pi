# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, sunfounder
# This file is distributed under the same license as the SunFounder Da Vinci
# Kit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Da Vinci Kit\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-08-04 15:50+0800\n"
"PO-Revision-Date: 2021-08-05 09:37+0800\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: de\n"
"X-Generator: Poedit 3.0\n"

#: ../iot/temperature_and_humidity_acquisition.rst:2
msgid "Temperature and Humidity Acquisition"
msgstr "Erfassung von Temperatur und Luftfeuchtigkeit"

#: ../iot/temperature_and_humidity_acquisition.rst:4
msgid ""
"In this project, we use DHT11 to read the surrounding temperature and "
"humidity, and then display them on Cloud4RPi."
msgstr ""
"In diesem Projekt verwenden wir den DHT11, um die Umgebungstemperatur "
"und die Luftfeuchtigkeit zu messen und sie dann auf Cloud4RPi anzuzeigen."

#: ../iot/temperature_and_humidity_acquisition.rst:7
msgid "Experimental Procedures"
msgstr "Experimentelle Verfahren"

#: ../iot/temperature_and_humidity_acquisition.rst:9
msgid "Build the circuit."
msgstr "Bauen Sie die Schaltung auf."

#: ../iot/temperature_and_humidity_acquisition.rst:14
msgid "Open the code."
msgstr "Öffnen Sie den Code."

#: ../iot/temperature_and_humidity_acquisition.rst:25
msgid "Find the line below and fill in the correct device token."
msgstr ""
"Suchen Sie die untere Zeile und tragen Sie den richtigen Geräte-Token "
"ein."

#: ../iot/temperature_and_humidity_acquisition.rst:31
msgid "Run the code."
msgstr "Führen Sie den Code aus."

#: ../iot/temperature_and_humidity_acquisition.rst:41
msgid ""
"Go to Cloud4RPi, add a new Control Panel named project1, and click **Add "
"Widget**."
msgstr ""
"Gehen Sie zu Cloud4RPi, fügen Sie ein neues Control Panel mit dem Namen "
"project1 hinzu und klicken Sie auf **Add Widget**."

#: ../iot/temperature_and_humidity_acquisition.rst:46
msgid ""
"Select a **Chart** widget with both **Room Temp** and **CPU Temp** as "
"the variables to be displayed."
msgstr ""
"Wählen Sie ein **Diagramm**-Widget mit den beiden Variablen "
"**Raumtemperatur** und **CPU-Temperatur**, die angezeigt werden sollen."

#: ../iot/temperature_and_humidity_acquisition.rst:52
msgid ""
"Once added, you will see the temperature (Room Temp) and humidity (CPU "
"Temp) curves over time, and you can adjust the display window by "
"clicking on the options at the bottom right."
msgstr ""
"Nach dem Hinzufügen sehen Sie die Kurven der Temperatur (Raumtemperatur) "
"und der Luftfeuchtigkeit (CPU-Temp) über die Zeit, und Sie können das "
"Anzeigefenster anpassen, indem Sie auf die Optionen unten rechts klicken."

#: ../iot/temperature_and_humidity_acquisition.rst:58
msgid "Code Explanation"
msgstr "Code Erläuterung"

#: ../iot/temperature_and_humidity_acquisition.rst:64
msgid "Instantiate a dht11 object."
msgstr "Instanziieren Sie ein dht11-Objekt."

#: ../iot/temperature_and_humidity_acquisition.rst:77
msgid ""
"The temperature (``result[1]``) is obtained by this function, and the "
"function will not be interrupted until the reading is successful."
msgstr ""
"Die Temperatur (``Result[1]``) wird durch diese Funktion ermittelt, und "
"die Funktion wird nicht unterbrochen, bis die Ablesung erfolgreich ist."

#: ../iot/temperature_and_humidity_acquisition.rst:90
msgid ""
"The humidity (``result[0]``) is obtained by this function, and the "
"function will not be interrupted until the reading is successful."
msgstr ""
"Mit dieser Funktion wird die Luftfeuchtigkeit (``Result[0]``) ermittelt, "
"und die Funktion wird nicht unterbrochen, bis die Ablesung erfolgreich "
"war."

#: ../iot/temperature_and_humidity_acquisition.rst:105
msgid ""
"The temperature is stored in the ``'bind'`` of the ``'Room Temp'`` key, "
"and the humidity is stored in the ``'bind'`` of the ``'CPU Temp'`` key. "
"When Cloud4RPi receives the ``variables`` dictionary, it will convert it "
"into a JavaScript object that can be recognized by the web page."
msgstr ""
"Die Temperatur wird im ``'bind'`` des ``'Room Temp'`` Schlüssels "
"gespeichert, und die Luftfeuchtigkeit wird im ``'bind'`` des ``'CPU "
"Temp'`` Schlüssels gespeichert. Wenn Cloud4RPi das ``Variablen``-"
"Wörterbuch erhält, wird es in ein JavaScript-Objekt umgewandelt, das von "
"der Webseite erkannt werden kann."
