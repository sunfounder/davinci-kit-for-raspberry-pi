.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _1.1.7_py_pi5:

1.1.7 I2C LCD1602
======================

Einf√ºhrung
------------------

Das LCD1602 ist ein Zeichentyp-Fl√ºssigkristalldisplay, das gleichzeitig 32
(16*2) Zeichen anzeigen kann.

Ben√∂tigte Komponenten
------------------------------

F√ºr dieses Projekt ben√∂tigen wir die folgenden Komponenten.

.. image:: ../python_pi5/img/1.1.7_i2c_lcd_list.png



Schaltplan
---------------------

============ ========
T-Board Name physical
SDA1         Pin 3
SCL1         Pin 5
============ ========

.. image:: ../python_pi5/img/1.1.7_i2c_lcd_schematic.png


Experimentelle Verfahren
-----------------------------

**Schritt 1:** Bauen Sie den Schaltkreis auf.

.. image:: ../python_pi5/img/1.1.7_i2c_lcd1602_circuit.png


**Schritt 2:** I2C einrichten (siehe :ref:`i2c_config`. Wenn Sie I2C bereits eingerichtet haben, √ºberspringen Sie diesen Schritt.)

**Schritt 3:** Verzeichnis wechseln.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/davinci-kit-for-raspberry-pi/python-pi5

**Schritt 4:** Ausf√ºhren.

.. raw:: html

   <run></run>

.. code-block::

    sudo python3 1.1.7_Lcd1602_zero.py

Nachdem der Code ausgef√ºhrt wurde, k√∂nnen Sie auf dem LCD sehen, dass ‚ÄûGreetings!, From SunFounder‚Äú angezeigt wird.

.. note::

    * Wenn Sie den Fehler ‚ÄûFileNotFoundError: [Errno 2] No such file or directory: '/dev/i2c-1'‚Äú erhalten, m√ºssen Sie :ref:`i2c_config` beachten, um das I2C zu aktivieren.
    * Wenn Sie den Fehler ‚ÄûModuleNotFoundError: No module named 'smbus2'‚Äú erhalten, f√ºhren Sie bitte ‚Äûsudo pip3 install smbus2‚Äú aus.
    * Wenn der Fehler ‚ÄûOSError: [Errno 121] Remote I/O error‚Äú auftritt, bedeutet dies, dass das Modul falsch verkabelt ist oder das Modul defekt ist.
    * Wenn der Code und die Verkabelung in Ordnung sind, das LCD jedoch immer noch keinen Inhalt anzeigt, k√∂nnen Sie das Potentiometer auf der R√ºckseite drehen, um den Kontrast zu erh√∂hen.


**Code** 

.. note::

    Sie k√∂nnen den unten stehenden Code **Modifizieren/Zur√ºcksetzen/Kopieren/Ausf√ºhren/Stoppen**. Aber bevor Sie das tun, m√ºssen Sie zum Quellcode-Pfad wie ``davinci-kit-for-raspberry-pi/python-pi5`` gehen. Nachdem Sie den Code ge√§ndert haben, k√∂nnen Sie ihn direkt ausf√ºhren, um die Auswirkungen zu sehen.


.. raw:: html

    <run></run>

.. code-block:: python

   #!/usr/bin/env python3
   import LCD1602  # Modul f√ºr die Schnittstelle mit LCD1602 importieren
   import time     # Modul f√ºr Timing-Funktionen importieren

   def setup():
       # LCD mit I2C-Adresse 0x27 initialisieren und Hintergrundbeleuchtung aktivieren
       LCD1602.init(0x27, 1) 
       # Die Nachricht 'Greetings!' in der oberen linken Ecke anzeigen (Zeile 0, Spalte 0)
       LCD1602.write(0, 0, 'Greetings!') 
       # Die Nachricht 'From SunFounder' in der zweiten Zeile anzeigen (Zeile 1, Spalte 1)
       LCD1602.write(1, 1, 'From SunFounder') 
       time.sleep(2)  # Nachrichten f√ºr 2 Sekunden anzeigen

   try:
       setup()  # Setup-Funktion ausf√ºhren, um das LCD zu initialisieren und Nachrichten anzuzeigen
       
   except KeyboardInterrupt:
       # LCD-Display l√∂schen, wenn eine Tastaturunterbrechung (z. B. Ctrl+C) auftritt
       LCD1602.clear()
       pass  # Ohne weitere Aktion fortfahren


**Code-Erkl√§rung**

1. Diese Datei ist eine Open-Source-Datei zur Steuerung des I2C LCD1602. Sie erm√∂glicht uns, das I2C LCD1602 einfach zu verwenden.

   .. code-block:: python

       import LCD1602  # Modul f√ºr die Schnittstelle mit LCD1602 importieren

2. Die Funktion initialisiert das I2C-System mit dem festgelegten Ger√§tesymbol. Der erste Parameter ist die Adresse des I2C-Ger√§ts, die √ºber den Befehl i2cdetect ermittelt werden kann (siehe Anhang f√ºr Details). Die Adresse des I2C LCD1602 ist in der Regel 0x27.

   .. code-block:: python

       # LCD mit I2C-Adresse 0x27 initialisieren und Hintergrundbeleuchtung aktivieren
       LCD1602.init(0x27, 1) 

3. ``LCD1602.write`` wird verwendet, um Nachrichten auf dem LCD anzuzeigen. Die ersten beiden Parameter sind die Positionen von Zeile und Spalte, der dritte ist die Nachricht. Jetzt k√∂nnen Sie ‚ÄûGreetings!! From SunFounder‚Äú auf dem LCD angezeigt sehen.

   .. code-block:: python

       # Die Nachricht 'Greetings!' in der oberen linken Ecke anzeigen (Zeile 0, Spalte 0)
       LCD1602.write(0, 0, 'Greetings!') 
       # Die Nachricht 'From SunFounder' in der zweiten Zeile anzeigen (Zeile 1, Spalte 1)
       LCD1602.write(1, 1, 'From SunFounder') 

