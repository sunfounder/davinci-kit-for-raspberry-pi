.. note::

    Hallo, willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Community auf Facebook! Tauchen Sie tiefer in Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten ein.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie nach dem Kauf auftretende Probleme und technische Herausforderungen mit Hilfe unserer Community und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Tutorials aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und Vorschauen.
    - **Spezielle Rabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und festlichen Aktionen teil.

    üëâ Bereit, mit uns zu entdecken und zu kreieren? Klicken Sie auf [|link_sf_facebook|] und treten Sie noch heute bei!

1.1.3 LED-Bargraph
======================

Einf√ºhrung
-------------

In diesem Projekt werden wir die Lichter auf dem LED-Bargraph nacheinander zum Leuchten bringen.

Komponenten
----------------

.. image:: img/list_led_bar.png

Schaltplan
-------------------------

.. image:: img/schematic_led_bar.png

Experimentelle Vorgehensweise
------------------------------

**Schritt 1**: Bauen Sie die Schaltung auf.

.. note::
    Achten Sie auf die Richtung beim Anschlie√üen. Wenn Sie es r√ºckw√§rts anschlie√üen, leuchtet es nicht.

.. image:: img/image66.png

**Schritt 2**: Gehen Sie zum Ordner des Codes.

.. raw:: html

    <run></run>

.. code-block:: 

    cd ~/davinci-kit-for-raspberry-pi/nodejs/ 

**Schritt 3**: Kompilieren Sie den Code.

.. raw:: html

    <run></run>

.. code-block:: 

    sudo node led_bar_graph.js

Nachdem der Code ausgef√ºhrt wurde, sehen Sie, dass die LEDs auf der LED-Bar regelm√§√üig ein- und ausgeschaltet werden.

**Code**

.. code-block:: js

    const Gpio = require('pigpio').Gpio;

    var pins = [17, 18, 27, 22, 23, 24, 25, 2, 3, 8];
    var leds = [];
    for (let i = 0; i < pins.length; i++) {
        leds[i] = new Gpio(pins[i], { mode: Gpio.OUTPUT });
    }

    function oddLedBarGraph() {
        for (let i = 0; i < leds.length; i++) {
            if (i % 2 == 1) {
                leds[i].digitalWrite(1);
            } else {
                leds[i].digitalWrite(0);
            }
        }
    }

    function evenLedBarGraph() {
        for (let i = 0; i < leds.length; i++) {
            if (i % 2 == 0) {
                leds[i].digitalWrite(1);
            } else {
                leds[i].digitalWrite(0);
            }
        };
    }

    var odd_even = 0;

    setInterval(() => {
        odd_even = (odd_even + 1) % 2;
        if (odd_even == 1) {
            oddLedBarGraph();
        } else {
            evenLedBarGraph();
        }
    }, 500);
  

**Code Erkl√§rung**

.. code-block:: js

    var pins = [17,18,27,22,23,24,25,2,3,8];

Da das LED-Bargraph mehrere Pins verwendet, erstellen wir ein konstantes Array ``pins``, um sie in Gruppen zu speichern.

.. code-block:: js

    var leds = [];
    for (let i = 0; i < pins.length; i++) {
        leds[i] = new Gpio(pins[i], { mode: Gpio.OUTPUT });
    }

Instanziieren Sie diese Pins als LEDs-Objekte mit einer for-Schleife.


.. code-block:: js

    function oddLedBarGraph() {
        for (let i = 0; i < leds.length; i++) {
            if (i % 2 == 1) {
                leds[i].digitalWrite(1);
            } else {
                leds[i].digitalWrite(0);
            }
        }
    }

Implementieren Sie eine ``oddLedBarGraph()``-Funktion, um die LEDs auf den 
ungeraden Ziffern des LED-Bargraphs zum Leuchten zu bringen.    

.. code-block:: js

    function evenLedBarGraph() {
        for (let i = 0; i < leds.length; i++) {
            if (i % 2 == 0) {
                leds[i].digitalWrite(1);
            } else {
                leds[i].digitalWrite(0);
            }
        };
    }

Implementieren Sie eine ``evenLedBarGraph()``-Funktion, um die LEDs auf den 
geraden Ziffern des LED-Bargraphs zum Leuchten zu bringen. 

.. code-block:: js

    var odd_even = 0;

    setInterval(() => {
        odd_even = (odd_even + 1) % 2;
        if (odd_even == 1) {
            oddLedBarGraph();
        } else {
            evenLedBarGraph();
        }
    }, 500);

Der Betriebszustand der LED wird alle 500 ms gewechselt.

Ph√§nomenbild
---------------------------

.. image:: img/image67.jpeg
